<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>《斩服少女》:超越边界的反叛与自由</title>
      <link href="/post/a9a6fba5.html"/>
      <url>/post/a9a6fba5.html</url>
      
        <content type="html"><![CDATA[<p>　　《斩服少女》是一场视觉和情感的盛宴，初次接触这部作品时，我一度被它狂放的画面风格震撼，那夸张的视觉表达让人无法忽视。然而，真正吸引我沉浸其中的，是剧情中隐藏的深刻反叛精神，以及每个角色身上表现出的自由追寻。</p><p>　　本能字学园，它表面是一个象征秩序与规则的地方，然而每一件极制服都成为了束缚个体的枷锁。这些枷锁以力量的形式展现，但实际上，正如现实中的某些体系一样，赋予力量的同时，也在限制着人们的自由和意志。缠流子的反抗便是对这些看不见的锁链的回应。她每一次挥动片太刀剪的瞬间，似乎都在对我们宣告：打破规则，才是真正的成长与解放。</p><p>　　缠流子身上那种不顾一切的决绝，仿佛燃烧的火焰一般炽热。片太刀剪在不断撕裂的不仅是敌人，更是一个固有的秩序，一个充满压迫与控制的世界。而这种对抗不仅仅是为了报仇，更是为了在这充斥着权力与等级的体系中寻找真正的自由。</p><p><img src="https://pic.imgdb.cn/item/66fd2b45f21886ccc007a23c.jpg" alt="code"></p><p>　　相较于缠流子的直接、火热，鬼龙院皋月则是冷静而强大的角色。作为本能字学园的学生会会长，她象征着极端的秩序与威严。皋月的性格虽严肃却不乏细腻，她对权力的掌控源自她清醒的认知和对自身使命的坚定。在故事中，鬼龙院皋月从敌人逐渐转变为盟友。她与缠流子的最终并肩作战，仿佛象征着秩序与混乱的最终融合。皋月对世界有着清醒的认知，而缠流子则代表着自由与反叛，两人之间的对抗与合作，成了故事中最精彩的对立与统一。</p><p><img src="https://pic.imgdb.cn/item/66fd2b45f21886ccc007a280.jpg" alt="code"></p><p>　　另一位重要角色——满舰饰真子，她是作品中最具乐观精神的角色，也是让观众无法忽视的亮点之一。真子的性格天真无邪，却充满力量。她虽然没有像缠流子或皋月那样的战斗力，但她的坚持和乐观常常在关键时刻成为团队的精神支柱。</p><p><img src="https://pic.imgdb.cn/item/66fd2b45f21886ccc007a2e9.jpg" alt="code"></p><p>　　除此之外，其他配角如猿投山、蟇郡苛、犬牟田宝火等，也各有独特的个性和成长轨迹。猿投山的执着、蟇郡的忠诚、犬牟田的冷静，这些人物并非简单的配角，而是在整个故事的背景下有着深厚的动机和行为逻辑。他们每个人的行为都推动着主线剧情的发展，同时也让观众感受到每个角色内心的挣扎与信念。</p><p><img src="https://pic.imgdb.cn/item/66fd2b45f21886ccc007a29a.jpg" alt="code"></p><p>　　在《斩服少女》这个充满反叛精神的世界里，许多场景不仅震撼人心，其中也蕴含了强烈的情感共鸣。贯穿整部作品的，除了夸张的画面与紧凑的节奏，还有那种直击心灵的热血与团结。</p><p>　　当“凤凰丸”失去动力时，真子毅然决定用自己的力量来推动船前进。在这个绝境时刻，真子依然保持着她一贯的乐观与坚韧，带领众人奋力奔跑，仿佛她们身体中的每一滴汗水都在燃烧。我们能够看到，《斩服少女》不仅仅是一场外表华丽的战斗，更多的是角色们对命运的抗争、对自由的追寻，以及对友情与团结的珍视。</p><p><img src="https://pic.imgdb.cn/item/66fd2b45f21886ccc007a2bd.jpg" alt="code"></p><p>　　“流子，等着我哦，我这就来找你！”</p><p>　　真子用双脚踏出的那一刻，象征了每个人在绝望中重生的力量。伴随着《<strong>サンビカ</strong>》的旋律，激昂的音乐像是一种无形的力量，推动着角色们，也为观众心中的火焰注入了新的燃料。</p><p>　　在这一幕中，音乐与画面的完美融合达到了顶点，心中的那股力量仿佛被点燃。它不仅仅是一首战斗音乐，更是角色们在逆境中不屈不挠的精神象征。无论是流子、真子，还是其他伙伴，他们的战斗都不仅仅是为了自己，而是为了彼此、为了所坚信的自由与未来。船上的奔跑或许只是身体的行动，但实际上却象征着人类意志的抗争——在面对压迫、危机甚至是绝望时，不放弃，不屈服，即便是身体虚弱无力，精神也绝不退缩。</p><p>　　这也是《斩服少女》给人强烈印象的原因之一——每个角色在面对巨大力量时表现出的坚韧与团结。真子，虽然一开始以搞笑和无厘头的形象示人，但在这关键时刻，她的无畏与乐观变成了整支队伍的支柱。真子的单纯与勇气，常常成为激励其他人的力量——真正的英雄并不总是手持武器、披着战甲，而是那些在我们心灵疲惫时为我们注入力量的人。</p><p>　　而在许多场景中，正是这种团结与信念，让主角们一次次从绝境中反转。无论是缠流子面对鬼龙院皋月的强势压迫，还是他们一同面对更为强大的敌人，都让人深刻体会到团队与个人意志的力量。决战时，真子带领大家奔跑的场景与缠流子挥舞片太刀剪的瞬间是相辅相成的——前者展现的是肉体的坚持，后者则是意志的胜利。</p><p>　　我想，缠流子所经历的这一切，或许正是每个人在人生中的某个阶段都会面对的抉择——是顺应现状，还是追求属于自己的自由？是被现实的规则束缚，还是勇敢地打破它？</p><p><img src="https://pic.imgdb.cn/item/66fd2bf6f21886ccc0083a54.jpg" alt="code"></p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
            <tag> 动漫 </tag>
            
            <tag> 日漫 </tag>
            
            <tag> 扳机社 </tag>
            
            <tag> 斩服少女/双斩少女/kill la kill </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LPC1114:按键控制LED闪烁频率</title>
      <link href="/post/b252ef8a.html"/>
      <url>/post/b252ef8a.html</url>
      
        <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="CSDN链接" href="https://blog.csdn.net/2201_75319686/article/details/142662796?spm=1001.2014.3001.5501"><div class="left"><img src="https://pic.imgdb.cn/item/66fbcf72f21886ccc0e9e7ab.jpg"/></div><div class="right"><p class="text">CSDN链接</p><p class="url">https://blog.csdn.net/2201_75319686/article/details/142662796?spm=1001.2014.3001.5501</p></div></a></div><p>　　基于LPC1114 DevKit口袋开发板，在Keil MDK 4.74上编写一段程序，系统上电，系统默认工作频率为48MHz，利用系统节拍定时器SysTick实现定时1s，控制LPC1114微控制器的GPIO引脚PIO1_9状态反转（LED灯BLINKY闪烁），设置按键BUTTON（PIO3_5）、WEAKUP（PIO1_4）为GPIO输入，使能滞后模式，设置中断方式判断按键状态。</p><p>按键功能：</p><ol><li>BUTTON（PIO3_5）按键按下，闪烁频率为1Hz，再次按下，恢复闪烁频率为0.5Hz；</li><li>WEAKUP（PIO1_4）按键按下，闪烁频率为2Hz，再次按下，恢复闪烁频率为0.5Hz；</li><li>适当考虑按键防抖功能。 </li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;LPC11xx.h&quot;</span></span></span><br><span class="line">                     </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INT_TIME_1MS SystemCoreClock / 1000   <span class="comment">//基础时间 | 1ms</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BASIC_FREQUENCY 2000                  <span class="comment">//基础频率 | 0.5Hz</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Program_Init</span><span class="params">(<span class="type">void</span>)</span>;                      <span class="comment">// 程序初始化函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GPIO_Clock_Init</span><span class="params">(<span class="type">void</span>)</span>;                   <span class="comment">// 初始化GPIO时钟</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Init</span><span class="params">(<span class="type">void</span>)</span>;                          <span class="comment">// 初始化LED</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Button_Init</span><span class="params">(<span class="type">void</span>)</span>;                       <span class="comment">// 初始化BUTTON按键</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">WEAKUP_Init</span><span class="params">(<span class="type">void</span>)</span>;                       <span class="comment">// 初始化WAKEUP按键</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">SysTick_Init</span><span class="params">(<span class="type">uint32_t</span> ticks)</span>;            <span class="comment">// 初始化SysTick定时器</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">SysTick_Handler</span><span class="params">(<span class="type">void</span>)</span>;                   <span class="comment">// SysTick定时器中断处理函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">PIOINT3_IRQHandler</span><span class="params">(<span class="type">void</span>)</span>;                <span class="comment">// GPIO3_5按键中断处理</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">PIOINT1_IRQHandler</span><span class="params">(<span class="type">void</span>)</span>;                <span class="comment">// GPIO1_4按键中断处理</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">void Button_Frequency(void);                  // BUTTON按键处理函数，调整LED闪烁频率</span></span><br><span class="line"><span class="comment">void WEAKUP_Frequency(void);                  // WAKEUP按键处理函数，调整LED闪烁频率</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Toggle</span><span class="params">(<span class="type">void</span>)</span>;                        <span class="comment">// 翻转LED状态</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">void Delay(uint32_t delayTime, uint32_t K);   // 延时函数 | totalTime = delayTime*K</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">uint32_t</span> msTicks = <span class="number">0</span>;                  <span class="comment">// SysTick定时器计数，用于控制LED闪烁</span></span><br><span class="line"><span class="type">static</span> <span class="type">uint32_t</span> COUNT_MAX = <span class="number">2000</span>;             <span class="comment">// 初始最大计数值 | 0.5Hz</span></span><br><span class="line"><span class="type">static</span> <span class="type">uint32_t</span> GPIO3_5_flag = <span class="number">0</span>;             <span class="comment">// GPIO3_5按键频率状态标志</span></span><br><span class="line"><span class="type">static</span> <span class="type">uint32_t</span> GPIO1_4_flag = <span class="number">0</span>;             <span class="comment">// GPIO1_4按键频率状态标志</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">static uint32_t GPIO3_5_Down_flag = 0;        // GPIO3_5按键按下标志</span></span><br><span class="line"><span class="comment">static uint32_t GPIO1_4_Down_flag = 0;        // GPIO1_4按键按下标志</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    Program_Init();                           <span class="comment">// 初始化程序，包括时钟、GPIO和按键</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">if(GPIO3_5_Down_flag)&#123;                // 如果检测到BUTTON按键按下</span></span><br><span class="line"><span class="comment">Button_Frequency();               // 调整LED闪烁频率</span></span><br><span class="line"><span class="comment">GPIO3_5_Down_flag = 0;            // 清除按下标志</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">if(GPIO1_4_Down_flag)&#123;                // 如果检测到WEAKUP按键按下</span></span><br><span class="line"><span class="comment">WEAKUP_Frequency();               // 调整LED闪烁频率</span></span><br><span class="line"><span class="comment">GPIO1_4_Down_flag = 0;            // 清除按下标志</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">        <span class="keyword">if</span> (msTicks &gt;= COUNT_MAX) &#123;           <span class="comment">// 当计数达到COUNT_MAX时翻转LED状态</span></span><br><span class="line">            LED_Toggle();</span><br><span class="line">            msTicks = <span class="number">0</span>;                      <span class="comment">// 重置计数</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Program_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">GPIO_Clock_Init();                        <span class="comment">// 初始化GPIO时钟</span></span><br><span class="line">LED_Init();                               <span class="comment">// 初始化LED</span></span><br><span class="line">Button_Init();                            <span class="comment">// 初始化BUTTON按键</span></span><br><span class="line">WEAKUP_Init();                            <span class="comment">// 初始化WAKEUP按键</span></span><br><span class="line">SysTick_Init(INT_TIME_1MS);               <span class="comment">// 初始化SysTick定时器，每1ms产生中断</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">GPIO_Clock_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">LPC_SYSCON-&gt;SYSAHBCLKCTRL |= </span><br><span class="line">(<span class="number">1UL</span> &lt;&lt; <span class="number">6</span>)|(<span class="number">1UL</span> &lt;&lt; <span class="number">16</span>);           <span class="comment">// 启用GPIO和IO配置时钟</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Init</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    LPC_GPIO1-&gt;DIR |= (<span class="number">1UL</span> &lt;&lt; <span class="number">9</span>);             <span class="comment">// 设置GPIO1_9为输出</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// BUTTON按键初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Button_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 配置PIO3_5为输入</span></span><br><span class="line">    LPC_IOCON-&gt;PIO3_5 &amp;= ~(<span class="number">0x1F</span>);             <span class="comment">// 清除之前的配置</span></span><br><span class="line">    LPC_IOCON-&gt;PIO3_5 |= <span class="number">0x00</span>;                <span class="comment">// 配置为GPIO功能</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 设置GPIO方向为输入</span></span><br><span class="line">    LPC_GPIO3-&gt;DIR &amp;= ~(<span class="number">1UL</span> &lt;&lt; <span class="number">5</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 设置引脚中断</span></span><br><span class="line">    LPC_GPIO3-&gt;IE |= (<span class="number">1UL</span> &lt;&lt; <span class="number">5</span>);              <span class="comment">// 使能中断</span></span><br><span class="line">    LPC_GPIO3-&gt;IS &amp;= ~(<span class="number">1UL</span> &lt;&lt; <span class="number">5</span>);             <span class="comment">// 设置为边沿触发</span></span><br><span class="line">    LPC_GPIO3-&gt;IBE &amp;= ~(<span class="number">1UL</span> &lt;&lt; <span class="number">5</span>);            <span class="comment">// 不使能双边沿触发</span></span><br><span class="line">    LPC_GPIO3-&gt;IEV &amp;= ~(<span class="number">1UL</span> &lt;&lt; <span class="number">5</span>);            <span class="comment">// 下降沿触发（按钮按下）</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">// 使能滞后模式</span></span><br><span class="line">LPC_IOCON-&gt;PIO3_5 |= (<span class="number">1UL</span> &lt;&lt; <span class="number">5</span>);          <span class="comment">// 使能滞后模式</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">// 清除可能的中断标志</span></span><br><span class="line">    LPC_GPIO3-&gt;IC |= (<span class="number">1UL</span> &lt;&lt; <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使能GPIO3中断</span></span><br><span class="line">    NVIC_EnableIRQ(EINT3_IRQn);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// WEAKUP按键初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">WEAKUP_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 配置PIO1_4为输入</span></span><br><span class="line">    LPC_IOCON-&gt;PIO1_4 &amp;= ~(<span class="number">0x1F</span>);             <span class="comment">// 清除之前的配置</span></span><br><span class="line">    LPC_IOCON-&gt;PIO1_4 |= <span class="number">0x00</span>;                <span class="comment">// 配置为GPIO功能</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 设置GPIO方向为输入</span></span><br><span class="line">    LPC_GPIO1-&gt;DIR &amp;= ~(<span class="number">1UL</span> &lt;&lt; <span class="number">4</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 设置引脚中断</span></span><br><span class="line">    LPC_GPIO1-&gt;IE |= (<span class="number">1UL</span> &lt;&lt; <span class="number">4</span>);              <span class="comment">// 使能中断</span></span><br><span class="line">    LPC_GPIO1-&gt;IS &amp;= ~(<span class="number">1UL</span> &lt;&lt; <span class="number">4</span>);             <span class="comment">// 设置为边沿触发</span></span><br><span class="line">    LPC_GPIO1-&gt;IBE &amp;= ~(<span class="number">1UL</span> &lt;&lt; <span class="number">4</span>);            <span class="comment">// 不使能双边沿触发</span></span><br><span class="line">    LPC_GPIO1-&gt;IEV &amp;= ~(<span class="number">1UL</span> &lt;&lt; <span class="number">4</span>);            <span class="comment">// 下降沿触发（按钮按下）</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 使能滞后模式</span></span><br><span class="line">LPC_IOCON-&gt;PIO1_4 |= (<span class="number">1UL</span> &lt;&lt; <span class="number">5</span>);          <span class="comment">// 使能滞后模式</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 清除可能的中断标志</span></span><br><span class="line">    LPC_GPIO1-&gt;IC |= (<span class="number">1UL</span> &lt;&lt; <span class="number">4</span>); </span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使能GPIO1中断</span></span><br><span class="line">    NVIC_EnableIRQ(EINT1_IRQn); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// SysTick定时器初始化，每1ms产生中断</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">SysTick_Init</span><span class="params">(<span class="type">uint32_t</span> ticks)</span>&#123;</span><br><span class="line">SysTick_Config(ticks);                    <span class="comment">// 配置SysTick定时器</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// SysTick定时器的中断处理函数，每1ms触发一次</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">SysTick_Handler</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    msTicks++;                                <span class="comment">// 每次中断时，SysTick计数增加1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// GPIO3_5的中断服务函数，处理BUTTON按键按下事件</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">PIOINT3_IRQHandler</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>((LPC_GPIO3-&gt;MIS &amp; (<span class="number">1UL</span> &lt;&lt; <span class="number">5</span>)) == (<span class="number">1UL</span> &lt;&lt; <span class="number">5</span>))&#123; <span class="comment">// 检查是否是PIO3_5的中断</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">GPIO3_5_flag = ~GPIO3_5_flag;         // 翻转GPIO3_5的频率标志，用于频率切换</span></span><br><span class="line"><span class="comment">GPIO3_5_Down_flag = 1;                // 设置按下标志，用于主循环中处理</span></span><br><span class="line"><span class="comment">GPIO1_4_flag = 0;                     // 复原GPIO1_4的频率标志</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断频率标志</span></span><br><span class="line">        <span class="keyword">if</span>(GPIO3_5_flag)&#123;</span><br><span class="line">COUNT_MAX = BASIC_FREQUENCY;           <span class="comment">// 再次按下WAKEUP，恢复为0.5Hz</span></span><br><span class="line">GPIO3_5_flag = <span class="number">0</span>;                      <span class="comment">// 将标志置0</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">COUNT_MAX = <span class="number">1000</span>;                      <span class="comment">// 第一次按下设置为1Hz</span></span><br><span class="line">GPIO3_5_flag = <span class="number">1</span>;                      <span class="comment">// 将标志置1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LPC_GPIO3-&gt;IC |= (<span class="number">1UL</span> &lt;&lt; <span class="number">5</span>);          <span class="comment">// 清除中断标志</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// GPIO1_4的中断服务函数，处理WAKEUP按键按下事件</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">PIOINT1_IRQHandler</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>((LPC_GPIO1-&gt;MIS &amp; (<span class="number">1UL</span> &lt;&lt; <span class="number">4</span>)) == (<span class="number">1UL</span> &lt;&lt; <span class="number">4</span>))&#123; <span class="comment">// 检查是否是PIO1_4的中断</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">GPIO1_4_flag = ~GPIO1_4_flag;          // 翻转GPIO1_4的标志，用于频率切换</span></span><br><span class="line"><span class="comment">GPIO1_4_Down_flag = 1;                 // 设置按下标志，用于主循环中处理</span></span><br><span class="line"><span class="comment">GPIO3_5_flag = 0;                      // 复原GPIO3_5的频率标志</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断频率标志</span></span><br><span class="line">        <span class="keyword">if</span>(GPIO1_4_flag)&#123;</span><br><span class="line">COUNT_MAX = BASIC_FREQUENCY;           <span class="comment">// 再次按下WAKEUP，恢复为0.5Hz</span></span><br><span class="line">GPIO1_4_flag = <span class="number">0</span>;                      <span class="comment">// 将标志置0</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">COUNT_MAX = <span class="number">500</span>;                      <span class="comment">// 第一次按下设置为2Hz</span></span><br><span class="line">GPIO1_4_flag = <span class="number">1</span>;                      <span class="comment">// 将标志置1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        LPC_GPIO1-&gt;IC |= (<span class="number">1UL</span> &lt;&lt; <span class="number">4</span>);           <span class="comment">// 清除中断标志</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">// 根据BUTTON按键的状态，调整LED的闪烁频率</span></span><br><span class="line"><span class="comment">void Button_Frequency(void)&#123;</span></span><br><span class="line"><span class="comment">Delay(INT_TIME_1MS, 50);                   // 按键防抖，延时50ms</span></span><br><span class="line"><span class="comment">if(GPIO3_5_flag)&#123;                          // 第一次按下设置为1Hz             </span></span><br><span class="line"><span class="comment">COUNT_MAX = 1000;                      // 按下BUTTON，设置LED频率为1Hz</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">else&#123;</span></span><br><span class="line"><span class="comment">COUNT_MAX = BASIC_FREQUENCY;           // 再次按下BUTTON，恢复为0.5Hz</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">// 根据WAKEUP按键的状态，调整LED的闪烁频率</span></span><br><span class="line"><span class="comment">void WEAKUP_Frequency(void)&#123;</span></span><br><span class="line"><span class="comment">Delay(INT_TIME_1MS, 50);                   // 按键防抖，延时50ms</span></span><br><span class="line"><span class="comment">if(GPIO1_4_flag)&#123;                          // 第一次按下设置为2Hz</span></span><br><span class="line"><span class="comment">COUNT_MAX = 500;                       // 按下WAKEUP，设置LED频率为2Hz</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">else&#123;</span></span><br><span class="line"><span class="comment">COUNT_MAX = BASIC_FREQUENCY;           // 再次按下WAKEUP，恢复为0.5Hz</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 翻转LED状态</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Toggle</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">    LPC_GPIO1-&gt;DATA ^= (<span class="number">1UL</span> &lt;&lt; <span class="number">9</span>);             <span class="comment">// 翻转GPIO1_9，控制LED亮灭</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">// 延时函数，用于按键防抖</span></span><br><span class="line"><span class="comment">void Delay(uint32_t delayTime, uint32_t K)&#123;</span></span><br><span class="line"><span class="comment">    int i = delayTime * K;                     // 计算延时时间</span></span><br><span class="line"><span class="comment">    while (--i);                               // 忙等待，循环消耗时间</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> 单片机 </tag>
            
            <tag> LPC1114 </tag>
            
            <tag> 教程 </tag>
            
            <tag> 经验分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LPC1114:定时器实现呼吸灯</title>
      <link href="/post/f5610288.html"/>
      <url>/post/f5610288.html</url>
      
        <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="CSDN链接" href="https://blog.csdn.net/2201_75319686/article/details/142662760?spm=1001.2014.3001.5501"><div class="left"><img src="https://pic.imgdb.cn/item/66fbcf71f21886ccc0e9e6fe.jpg"/></div><div class="right"><p class="text">CSDN链接</p><p class="url">https://blog.csdn.net/2201_75319686/article/details/142662760?spm=1001.2014.3001.5501</p></div></a></div><p>　　基于LPC1114 DevKit口袋开发板，系统上电，系统默认工作频率为48MHz，在Keil MDK 4.74上编写一段程序：设置16位定时器1工作在PWM模式，PIO1_9设置为PWM输出引脚，利用另外一个定时器定时(例如32位定时器0，设置每隔0.01s，或者更小)增大或者减小16位定时器1输出PWM的占空比（占空比改变的步长与32位定时器0的定时时间相配合，确定呼吸频率），实现PIO1_9上的LED灯渐亮渐灭的呼吸灯效果。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;LPC11xx.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> step 0.005                             <span class="comment">// 步长</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> flag = <span class="number">0</span>;                                  <span class="comment">// 定义标志变量，代表占空比是否越界</span></span><br><span class="line"><span class="type">float</span> freCoe = <span class="number">0</span>;                              <span class="comment">// 呼吸灯频率系数</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TMR16B1_PWM_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TMR32B0_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIMER32_0_IRQHandler</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">TMR16B1_PWM_Init();                         <span class="comment">// 初始化16位定时器</span></span><br><span class="line">TMR32B0_Init();                             <span class="comment">// 初始化32位定时器</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;&#125;;    </span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TMR16B1_PWM_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;                    <span class="comment">// 16位定时器配置PWM</span></span><br><span class="line">LPC_SYSCON-&gt;SYSAHBCLKCTRL |= (<span class="number">1UL</span> &lt;&lt; <span class="number">8</span>);    <span class="comment">// 16位定时器1时钟使能</span></span><br><span class="line">LPC_SYSCON-&gt;SYSAHBCLKCTRL |= (<span class="number">1UL</span> &lt;&lt; <span class="number">16</span>);   <span class="comment">// IO配置块时钟使能</span></span><br><span class="line">LPC_IOCON-&gt;PIO1_9 |= <span class="number">0x01</span>;                  <span class="comment">// MAT0匹配IO1_9</span></span><br><span class="line">LPC_TMR16B1-&gt;PR = <span class="number">0</span>;                        <span class="comment">// 分频系数；</span></span><br><span class="line">LPC_TMR16B1-&gt;PWMC= <span class="number">0x01</span>;                    <span class="comment">// 开通道MAT0；</span></span><br><span class="line">LPC_TMR16B1-&gt;MCR = <span class="number">0x02</span> &lt;&lt;<span class="number">9</span>;                <span class="comment">// 设置MR3匹配后复位TC；</span></span><br><span class="line">LPC_TMR16B1-&gt;MR3 = SystemCoreClock;         <span class="comment">// PWM周期设置为1HZ</span></span><br><span class="line">LPC_TMR16B1-&gt;MR0 = LPC_TMR16B1-&gt;MR3/<span class="number">2</span>;      <span class="comment">// PWM占空比</span></span><br><span class="line">LPC_TMR16B1-&gt;TCR = <span class="number">0x01</span>;                    <span class="comment">// 启动定时器</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TMR32B0_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;                        <span class="comment">// 32位定时器初始化</span></span><br><span class="line">LPC_SYSCON-&gt;SYSAHBCLKCTRL |= (<span class="number">1UL</span> &lt;&lt; <span class="number">9</span>);    <span class="comment">// 32位定时器0时钟使能</span></span><br><span class="line">LPC_TMR32B0-&gt;IR = <span class="number">0x1F</span>;</span><br><span class="line">LPC_TMR32B0-&gt;PR = <span class="number">0</span>;                        <span class="comment">// 分频系数；</span></span><br><span class="line">LPC_TMR32B0-&gt;MCR = <span class="number">3</span>;                       <span class="comment">// 设置MR0匹配后复位TC并产生中断；</span></span><br><span class="line">LPC_TMR32B0-&gt;MR0 = SystemCoreClock/<span class="number">100</span>;     <span class="comment">// 中断时间0.01s</span></span><br><span class="line">LPC_TMR32B0-&gt;TCR = <span class="number">0x01</span>;                    <span class="comment">// 启动定时器</span></span><br><span class="line">NVIC_EnableIRQ(TIMER_32_0_IRQn);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIMER32_0_IRQHandler</span><span class="params">(<span class="type">void</span>)</span>&#123;                <span class="comment">// 中断函数</span></span><br><span class="line"><span class="keyword">if</span>((LPC_TMR32B0-&gt;IR|=<span class="number">0x01</span>)==<span class="number">1</span>)&#123;             <span class="comment">// 判断是否MR0中断，并清MR0中断</span></span><br><span class="line"><span class="keyword">if</span> (freCoe &gt; <span class="number">1</span> || freCoe &lt; <span class="number">0</span>)&#123;          <span class="comment">// 越界翻转</span></span><br><span class="line">flag = ~flag;                   </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag==<span class="number">0</span>)&#123;                            <span class="comment">// 渐亮</span></span><br><span class="line">LPC_TMR16B1-&gt;MR0 = freCoe*LPC_TMR16B1-&gt;MR3;      </span><br><span class="line">freCoe += step;                     <span class="comment">// 频率系数++步长</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;                                   <span class="comment">// 渐暗</span></span><br><span class="line">LPC_TMR16B1-&gt;MR0 = freCoe*LPC_TMR16B1-&gt;MR3;</span><br><span class="line">freCoe -= step;                     <span class="comment">// 频率系数--步长</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> 单片机 </tag>
            
            <tag> LPC1114 </tag>
            
            <tag> 教程 </tag>
            
            <tag> 经验分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LPC1114:闪烁的LED</title>
      <link href="/post/bd654518.html"/>
      <url>/post/bd654518.html</url>
      
        <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="CSDN链接" href="https://blog.csdn.net/2201_75319686/article/details/142662598?spm=1001.2014.3001.5501"><div class="left"><img src="https://pic.imgdb.cn/item/66fbcf71f21886ccc0e9e6b1.jpg"/></div><div class="right"><p class="text">CSDN链接</p><p class="url">https://blog.csdn.net/2201_75319686/article/details/142662598?spm=1001.2014.3001.5501</p></div></a></div><h1 id="1-通过延时函数实现LED闪烁"><a href="#1-通过延时函数实现LED闪烁" class="headerlink" title="1.通过延时函数实现LED闪烁"></a>1.通过延时函数实现LED闪烁</h1><p>　　在Keil MDK 4.74上编写一段程序，控制口袋开发板上LPC1114微控制器的GPIO引脚PIO1_9上的LED灯亮（低电平亮）。进一步利用Delay_1s(void)函数实现定时1s，使LED灯状态反转，再延时1s，使LED灯状态反转，如此一直循环，实现LED灯闪烁。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;LPC11xx.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_On</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Off</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Toggle</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_1s</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">    LED_Init();     <span class="comment">// 初始化LED</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        LED_Toggle();     <span class="comment">// LED翻转 </span></span><br><span class="line">        Delay_1s();       <span class="comment">// 延时</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Init</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    LPC_SYSCON-&gt;SYSAHBCLKCTRL |= (<span class="number">1UL</span> &lt;&lt; <span class="number">6</span>); <span class="comment">// 启用GPIO时钟</span></span><br><span class="line">    LPC_GPIO1-&gt;DIR |= (<span class="number">1UL</span> &lt;&lt; <span class="number">9</span>);            <span class="comment">// 设置GPIO1_9为输出    </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 点亮LED</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_On</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    LPC_GPIO1-&gt;DATA &amp;= ~(<span class="number">1UL</span> &lt;&lt; <span class="number">9</span>);   <span class="comment">// 置低电平</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 熄灭LED</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Off</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    LPC_GPIO1-&gt;DATA |= (<span class="number">1UL</span> &lt;&lt; <span class="number">9</span>);    <span class="comment">// 置高电平</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 翻转LED</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Toggle</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  <span class="comment">//关着就开，开着就关</span></span><br><span class="line">  <span class="comment">//LPC_GPIO1-&gt;DATA ^= (1UL &lt;&lt; 9);</span></span><br><span class="line"><span class="keyword">if</span> (LPC_GPIO1-&gt;DATA &amp; (<span class="number">1UL</span> &lt;&lt; <span class="number">9</span>)) &#123;  <span class="comment">// 如果为高电平即熄灭的状态则点亮</span></span><br><span class="line">        LED_On();  </span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">LED_Off(); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 延时函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_1s</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i = SystemCoreClock / <span class="number">5</span>;  </span><br><span class="line">    <span class="keyword">while</span> (--i);                  </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="2-通过SysTick定时器实现LED闪烁"><a href="#2-通过SysTick定时器实现LED闪烁" class="headerlink" title="2.通过SysTick定时器实现LED闪烁"></a><strong>2.通过SysTick定时器实现LED闪烁</strong></h1><p>　　在Keil MDK 4.74上编写一段程序，利用系统节拍定时器SysTick实现定时1s，控制LPC1114微控制器的GPIO引脚PIO1_9状态反转（BLINKY指示灯闪烁，周期为2s），比较一下与Delay_1s（）函数实现1s的定时的异同点，尝试用不同的方法（改变中断次数或者每次中断的时间）改变LED灯闪烁的频率，观察LED灯的闪烁情况。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;LPC11xx.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COUNT_MAX 3000                         <span class="comment">//最大计数值 </span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INT_TIME_1MS SystemCoreClock / 1000    <span class="comment">//中断时间，1ms</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">SysTick_Init</span><span class="params">(<span class="type">uint32_t</span> K, <span class="type">uint32_t</span> ticks)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Toggle</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">SysTick_Handler</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">uint32_t</span> msTicks = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    LED_Init();</span><br><span class="line">  SysTick_Init(<span class="number">1</span>, INT_TIME_1MS);        <span class="comment">// 1*1ms</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (msTicks &gt;= COUNT_MAX) &#123;  <span class="comment">// K*COUNT_MAX*INT_TIME_XXX的时间长度翻转一次LED</span></span><br><span class="line">            LED_Toggle();</span><br><span class="line">            msTicks = <span class="number">0</span>;             <span class="comment">// 计数器清0</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">SysTick_Handler</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    msTicks++;  <span class="comment">// 计数器</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Init</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    LPC_SYSCON-&gt;SYSAHBCLKCTRL |= (<span class="number">1UL</span> &lt;&lt; <span class="number">6</span>);  <span class="comment">// 启用GPIO时钟</span></span><br><span class="line">    LPC_GPIO1-&gt;DIR |= (<span class="number">1UL</span> &lt;&lt; <span class="number">9</span>);             <span class="comment">// 设置GPIO1_9为输出</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// SysTick定时器初始化函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">SysTick_Init</span><span class="params">(<span class="type">uint32_t</span> K, <span class="type">uint32_t</span> ticks)</span> &#123;</span><br><span class="line">SysTick_Config(K * ticks);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 翻转LED</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Toggle</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    LPC_GPIO1-&gt;DATA ^= (<span class="number">1UL</span> &lt;&lt; <span class="number">9</span>);            <span class="comment">// 翻转LED</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>Delay（）与SysTick定时器的异同</strong></p><p>SysTick定时器方式：通过硬件定时器（SysTick）实现精确定时，无需在主程序中阻塞延时。因此主程序可以继续执行其他任务。每次1ms触发一次中断，计数1秒后翻转LED状态。优点是精度高，资源占用低，系统可以在等待定时时做其他事情（多任务环境下尤其有用）。</p><p>延时函数方式：通过一个循环进行延时，阻塞CPU，占用 CPU 时间。优点是简单易用，缺点是精度依赖于循环次数，且阻塞程序执行，主程序在延时时间内无法执行其他任务。对于简单的任务可以使用，但对于复杂系统或多任务系统，SysTick 更加合适。</p><h1 id="3-通过16位定时器实现LED闪烁"><a href="#3-通过16位定时器实现LED闪烁" class="headerlink" title="3.通过16位定时器实现LED闪烁"></a><strong>3.通过16位定时器实现LED闪烁</strong></h1><p>　　利用16位定时器1实现定时1s，控制LPC1114微控制器的GPIO引脚PIO1_9状态反转（可以用中断方式也可以用匹配输出功能）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;LPC11xx.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TMR16B1_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Toggle</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIMER16_1_IRQHandler</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">LED_Init();                              <span class="comment">// 初始化LED</span></span><br><span class="line">TMR16B1_Init();                          <span class="comment">// 初始化16位定时器</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Init</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    LPC_SYSCON-&gt;SYSAHBCLKCTRL |= (<span class="number">1UL</span> &lt;&lt; <span class="number">6</span>);  <span class="comment">// 启用GPIO时钟</span></span><br><span class="line">    LPC_GPIO1-&gt;DIR |= (<span class="number">1UL</span> &lt;&lt; <span class="number">9</span>);             <span class="comment">// 设置GPIO1_9为输出</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定时1s</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TMR16B1_Init</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">LPC_SYSCON-&gt;SYSAHBCLKCTRL |= (<span class="number">1UL</span> &lt;&lt; <span class="number">8</span>);  <span class="comment">// 16位定时器1时钟使能</span></span><br><span class="line">LPC_TMR16B1-&gt;IR = <span class="number">0x1F</span>;</span><br><span class="line">LPC_TMR16B1-&gt;PR = <span class="number">799</span>;                    <span class="comment">// 分频系数；</span></span><br><span class="line">LPC_TMR16B1-&gt;MCR = <span class="number">3</span>;                     <span class="comment">//设置MR0匹配后复位TC并产生中断；</span></span><br><span class="line">LPC_TMR16B1-&gt;MR0 = SystemCoreClock/<span class="number">800</span>;   <span class="comment">//中断时间</span></span><br><span class="line">LPC_TMR16B1-&gt;TCR = <span class="number">0x01</span>;                  <span class="comment">// 启动定时器  </span></span><br><span class="line">NVIC_EnableIRQ(TIMER_16_1_IRQn);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Toggle</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    LPC_GPIO1-&gt;DATA ^= (<span class="number">1UL</span> &lt;&lt; <span class="number">9</span>);            <span class="comment">// 翻转LED</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIMER16_1_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line"><span class="keyword">if</span>((LPC_TMR16B1-&gt;IR|=<span class="number">0x01</span>) == <span class="number">1</span>)&#123;           <span class="comment">//判断是否MR0中断，并清MR0中断</span></span><br><span class="line">LED_Toggle();                         <span class="comment">//执行LED翻转</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> 单片机 </tag>
            
            <tag> LPC1114 </tag>
            
            <tag> 教程 </tag>
            
            <tag> 经验分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【诗词鉴赏】水调歌头·明月几时有</title>
      <link href="/post/e91052df.html"/>
      <url>/post/e91052df.html</url>
      
        <content type="html"><![CDATA[<div class='poem'><div class='poem-title'>水调歌头·明月几时有</div><div class='poem-author'>[宋]苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</p><p>明月几时有，把酒问青天。</p><p>不知天上宫阙，今夕是何年。</p><p>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。</p><p>起舞弄清影，何似在人间。</p><p>转朱阁，低绮户，照无眠。</p><p>不应有恨，何事长向别时圆？</p><p>人有悲欢离合，月有阴晴圆缺，此事古难全。</p><p>但愿人长久，千里共婵娟。</p></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>.</p></div></div><div class="tag link"><a class="link-card" title="明月几时有" href="https://www.bilibili.com/video/BV1Cx411j7HE/"><div class="left"><img src="https://pic.imgdb.cn/item/66e8f139d9c307b7e985c50c.jpg"/></div><div class="right"><p class="text">明月几时有</p><p class="url">https://www.bilibili.com/video/BV1Cx411j7HE/</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> 诗词鉴赏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗词鉴赏 </tag>
            
            <tag> 宋词 </tag>
            
            <tag> 苏轼 </tag>
            
            <tag> 水调歌头·明月几时有 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>寻道者</title>
      <link href="/post/d42fcdae.html"/>
      <url>/post/d42fcdae.html</url>
      
        <content type="html"><![CDATA[<p>　　你终究是要走了。</p><p>　　去践行你的义理。</p><p>　　木炭在炭盆里映着红光。</p><p>　　你提起酒壶，为案上的两个瓷杯添满了酒。</p><p>　　酒仍是那种谁人都饮得起的劣酒，颇为浑浊，一如这世道。</p><p>　　不得不说，你是个特别的士人。</p><p>　　你饱读经书，却不为科举。</p><p>　　你著书作诗，却不为扬名。</p><p>　　你不喜名利，亦无意于朝堂之上。</p><p>　　你不食珍馐，亦不居于华屋之中。</p><p>　　即使你能轻而易举地得到它们。</p><p>　　氓隶。</p><p>　　这是你给我的第一个印象。</p><p>　　犹记得，你我第一次相遇便是在园田之中。</p><p>　　兴许是同为士人的缘由吧。</p><p>　　我们发现了彼此。</p><p>　　只是，虽曰同类，可你我终究是有所不同的。</p><p>　　我往来于商贾之间，游走于觥筹交错之际。</p><p>　　你终日混迹于阡陌之间，奔走于农作桑田。</p><p>　　你与那些氓隶一齐劳作，仿若多年的友人，同食同住，询问平日的生活。</p><p>　　田亩、作坊，以及一切氓隶聚集的地方，总有一处能寻到你的身影。比起士人，你更像一个氓隶。</p><p>　　于你，我的不解与其他士人并无不同。</p><p>　　只是，他们嘲笑你，嘲笑你的学说，嘲笑你的行事，可我不会。我是知道的，你的学识远超于那些自以为是的士大夫。</p><p>　　更何况，你救过我的命——从几个山贼手中。</p><p>　　虽说你略通武艺，可这仍是件稍有不慎便会丧命的事。</p><p>　　这值得吗？</p><p>　　你说，士为知己者死。</p><p>　　呵，倒是个妙人。</p><p>　　而今又有谁能做到这般？</p><p>　　风渐渐大了。</p><p>　　我向亭外望去，满天皆是纷纷扬扬的鹅毛雪。</p><p>　　冰冷得不近人情。</p><p>　　你素来是不喜寒天的。</p><p>　　雨雪霏霏。</p><p>　　于士大夫而言，这是可吟诗作乐的琼芳。</p><p>　　于那氓隶而言，这却是索人性命的尖刀。</p><p>　　朱门酒肉臭，路有冻死骨。</p><p>　　你总是这么说。</p><p>　　我仰头饮尽杯中酒，身体有了些许暖意。</p><p>　　“流民越来越多了。”你眉宇间透着掩饰不住的悲痛与疲惫。</p><p>　　我缓缓点头，叹息一声，视线移到了亭外那株傲立雪中的树上。</p><p>　　树是我数年前栽下的。每临春风十里，或蝉鸣之季，便是风移影动，珊珊可爱。教人看了好不欢喜。而今入了冬，寒风凛冽，枝头只剩几片枯黄。</p><p>　　光阴呵，真是教人感慨不已。</p><p>　　树约莫一丈高，其表皮纹路纵横，宛若先生额边的皱纹。</p><p>　　先生老了。</p><p>　　时光在无时无刻地夺走他的生机。他与自己侍奉了大半岁月的帝国一同走向各自的日暮。余晖虽然明亮，但终究是最后的最后。</p><p>　　仍是忘不了昨夜烛光下的老叟，佝偻着腰，眼中神采黯淡。先生已是服了大半月的汤药，可夜咳仍是未愈，反而愈发咳得厉害了。每临咳嗽之时，见那模样，仿佛不把心肝脾肺咳出来就誓不罢休似的。实在教人痛心且无奈。他宛若那摇摇欲熄的烛火，仿佛下一息就要离我而去。</p><p>　　先生拒绝了我的搀扶——他素来是不服老的。</p><p>　　“吾恐时日无多，你有什么想问的便问吧。”他的声音颇为沙哑。</p><p>　　“而今流贼四起，江山社稷危在旦夕，学生斗胆问先生，何以救国？”我恭敬地问。</p><p>　　先生沉吟片刻，缓缓开口，声音低沉地说:“吾以为，国之病根在于朝堂，庸官贪吏横行，奸臣当道！唯有整顿吏治，变革税制，方可富国强兵，力挽狂澜！”</p><p>　　“先生真的如此认为吗？”我低头。</p><p>　　先生叹息。</p><p>　　“积重难返，回天乏术……你以为如何？”</p><p>　　“学生以为，今日之境况，在于土地。”</p><p>　　先生没有反应，他理应是看出来了。</p><p>　　“灾荒连年，土地渐集于豪门望族之手，农人无地可耕，只得依附于豪门望族，成为佃农，为其耕种。豪门望族为私利而隐匿人口、土地，致国之赋税寡。赋税寡则国贫，国贫则兵弱，兵弱则无以制望族！是以国愈弱望族愈强，望族愈强又致国弱！而今流贼四起，天下大乱。朝廷欲出兵平乱。国贫，如何平乱？自是征税！而民贫，无赋可贡，故天下愈征愈乱！田亩制，理当革之！法者，变则通，不变则亡！”</p><p>　　“如何变？”先生眼神忽而凌厉。</p><p>　　“先生以为，将天下田亩收归朝廷，再重新分给百姓，可否能长治久安？”</p><p>　　“不可，”先生摇了摇头，“隋唐所行的均田制便是如此，成年男子都可获得土地。可百姓生生不息，人口只会愈来愈多，天下田亩又如何足够呢？”</p><p>　　“先生，人有生老病死，国亦有兴盛衰亡，这世间的万事万物皆处于不断的变化之中。上古之时，小国寡民，先民无尊卑之别，共使耒耜以事农耕。商周之时，使青铜。春秋之时，铁犁牛耕，各国纷行初税亩制，变奴隶为农人。隋唐之时，现曲辕犁、筒车……”</p><p>　　先生沉默。</p><p>　　“先生，没有什么事物是静止的，它的内部和外部总是存在矛盾，而这矛盾又让这世道不断发展。农人耕作的经验在增加，耕作的方法也在完善。今后，田亩里种出的粮食只会愈来愈多，只需要少量农人便可供养天下人。农人少了，田亩也便足够了。”</p><p>　　“那多出的人呢？”</p><p>　　“行工、商之道！工、商发展，使田亩种出更多粮食的机巧器物也会愈来愈多，所需农人也愈少。农人愈少，则工匠、商贾愈多。而学生以为，商贾之中，藏着世间最为完备的大道！”</p><p>　　先生想了想，问:“虽说商贾获利颇丰，可为朝廷提供不少赋税。可这大道又从何谈起？”</p><p>　　我没有回答，只是问：“依先生之见，李悝所云的‘不别亲疏，不殊贵贱，一断于法’如何？苏子所云的‘苟非吾之所有，虽一毫而莫取’又如何？”</p><p>　　“合乎情理。”先生点头。</p><p>　　“如此，于律法面前，人是否有平等的权？”</p><p>　　“正是。”</p><p>　　“那在此权存在的前提下，人的私产是否不可侵夺？哪怕是王侯将相？”</p><p>　　先生脸上闪过一丝惊愕。</p><p>　　“先生，银钱的本质是什么？”未待他开口，我便自顾自地说，“是百姓对国家的信任。而之所以使用银，是因为百姓不信任国家。追其缘由，银除了作为‘钱’，还有其本身的价值存在。哪怕这种‘钱’不再流通，银也可以继续用于交易。细想之下，如果日后百姓完全信任国家，那纸是否能成为新的银钱？并非宋时所流通的交子，而是真正的‘纸钱’。”我深吸了一口气，沉声道，“除此之外，最重要的是，银钱还是国家给予百姓的权，分配资源的权！钱愈多则权愈大！这是一种能建立新秩序的力量！商贾掌握着这世间最强大的暴力！斩断旧根！浇灌新芽！先生，这，便是学生的救国之道！”</p><p>　　先生眼中又有了神采。</p><p>　　他隐隐能望见这义理的未来。</p><p>　　只是……</p><p>　　他老了。</p><p>　　先生叹息：“我已没什么能教你了。”</p><p>　　是啊，先生已没什么能教我的了。毕竟，我早已抛弃了他的学说，转而去追寻自己的义理了。</p><p>　　我一直坚信自己的义理是正确的。</p><p>　　可你似乎很厌恶它。</p><p>　　不过，我不在意，不喜欢，便不喜欢罢。</p><p>　　我看着眼前的白衣，仍旧是不舍。</p><p>　　不舍，便会挽留。</p><p>　　“一定要走吗？”</p><p>　　“嗯，我已在此地停留太久。”</p><p>　　我百无聊赖地把玩着瓷杯。</p><p>　　“知道为什么我不喜欢你的义理吗？”你忽然问。</p><p>　　“不知。”我老实答道。</p><p>　　你微微叹了一口气。</p><p>　　“因为你的义理是少数人统治大多数人的义理。”</p><p>　　我愣愣地看着你。</p><p>　　“在不扩大统治者规模的时候，分化大多数，挑拨他们互相竞争，互相淘汰，甚至互相敌视……你的义理仍旧遵循着这条古老的秘诀。我的义理终究是不能与你的共存的。你的义理在商贾，而我的义理却在农人、工匠身上。与我的义理最为接近的便是春秋时的墨家了。可惜的是，他们背叛了自己所代表的布衣，转而向君王寻求机会。他们本应以暴力推翻王侯将相，从而提升自身地位的……他们明明有这个能力。”你恨声道。</p><p>　　我不知该说些什么，只好问：“你准备去哪？”我的声音有些沉闷。</p><p>　　“江南吧，听闻那里已有了诸如农会、造纸行会之类的事物……之后还可能会去一趟西北，他们缺的仅仅只是一套行之有效的义理罢了。”</p><p>　　我知道你说的是那里的流贼。</p><p>　　“保重。”我说。</p><p>　　终究还是要离别的。</p><p>　　道不同不相为谋。</p><p>　　但我能理解你。</p><p>　　“保重。”</p><p>　　……</p><p>　　睁开眼，视野里是如墨的黑暗。</p><p>　　我从床上坐了起来，摸索着，打开了灯。</p><p>　　灯闪烁了几下，亮了。</p><p>　　狭小拥挤的模块屋在惨白的灯光下一览无余。</p><p>　　可我的左眼仍旧是一片漆黑。</p><p>　　我的眼睛出问题了？</p><p>　　我感到一阵慌乱，又忽而想起，那枚机械义眼早已被我以两百信用点的价格出售。</p><p>　　我叹了口气。</p><p>　　我下床，看了眼衣柜旁的你——仍是笔直地站在那，一动不动。</p><p>　　发黄的墙壁上挂满了我们的照片。我最喜欢的，还是那张大大的结婚照。那天，你我穿上了自己能拿的出来的最好的衣服，依偎在一起，笑容甜蜜。</p><p>　　那时我们还没被生活打倒。</p><p>　　真是叫人怀念啊。</p><p>　　婚礼是在家里举办的，到场的只有我们两个。事实上，我们两人也没有朋友。理所当然的，我们也没有领证——毕竟殖民星的公司不会给租凭来的机器人颁证。</p><p>　　我还没有钱把你买下来。</p><p>　　生活的困苦总是极多的。</p><p>　　昨天，你终于因为我没有钱续费而关机了。</p><p>　　我会想办法的。</p><p>　　我掏出手机，翻看着通讯录。</p><p>　　除了虚无缥缈的灵魂，我还能出卖的，只剩下自己的器官了吧。</p><p>　　我最终还是拨通了那个电话。</p><p>　　电话那头是冰冷的电子女音。</p><p>　　我告知对方地址，便挂了电话。</p><p>　　放下手机，我的余光瞥见了桌上的几本书——是如今少见的纸质书，书页微微泛黄。那是公司明令禁止阅读的禁书的手抄本，是我在三区一家旧物店里找到的。我对这些母星时代的旧物一向很感兴趣。听老板说，那几本禁书分别写于旧历十九与二十世纪，作者是母星时代的德国人与中国人。</p><p>　　虽然公司对这些东西的态度一向是睁一只眼闭一只眼，但被发现了仍会有些麻烦。</p><p>　　于是，我把书藏了起来。</p><p>　　几分钟后，它们来了。</p><p>　　来收购器官的，是公司的机器人。</p><p>　　交易很快就结束了。</p><p>　　它们匆匆地来，又匆匆地走，没有半句废话。</p><p>　　效率就是金钱。</p><p>　　打开充值通道，我把信用点全部投了进去。</p><p>　　一阵漫长的开机广告。</p><p>　　你回来了。</p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小说 </tag>
            
            <tag> 儿时旧作 </tag>
            
            <tag> 未完结 </tag>
            
            <tag> 架空历史 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>瞳人语</title>
      <link href="/post/10ad12c6.html"/>
      <url>/post/10ad12c6.html</url>
      
        <content type="html"><![CDATA[<p>　　“阿明，我感觉有人在盯着我。”<br>　　阿冉刚关上门，便神经兮兮地对我说。<br>　　我揉了揉酸痛的眼睛，伸了个懒腰，慢悠悠地从电脑前离开。<br>　　“盯着你？”我不以为意，但还是给她倒了杯温水 ，希望能让她冷静下来，“是你最近工作压力太大了吧？明天我陪你去看心理医生，正好我刚刚把这个月的稿子交了。”<br>　　阿冉捧着水杯，欲言又止，但想了想，又说：“也许是吧，最近工作确实有些不太顺利……”<br>　　我拉着她到沙发边坐下，安慰道：“你最近太累了，要好好休息，身体才是最重要的。”说着，我抓过一边的小猪头套套在脑袋上，“哼哼”了两声，“开心一点，笑一笑，十年少嘛。”<br>　　我满意地看到阿冉的脸上露出了笑容。我又安慰了她几句，便让她回房休息。<br>　　看着阿冉消失在房门后，我脸上的笑慢慢垮了下来。<br>　　我有些担心，万一阿冉的感觉没错呢？也许真的有哪个变态跟踪狂在尾随她呢？新闻里可没少见因为父母轻视孩子的话而酿成的惨剧。小心些总是没错的。<br>　　我揉了揉酸痛的眼睛，拿起阿冉放在茶几上的水杯，仰头喝了个干净。<br>　　最近得陪着她上下班了。<br>　　我起身，决定出门走走。<br>　　我来到门前，握住门把手，不由自主地打了个冷颤。此刻我才发现，这个我握了无数次的门把手，是那样的冰凉。<br>　　门，将我们与外面的世界分隔开。它保护我们，让我们能得以拒绝那些我们不想见到的东西。正如我刚搬来这里时，我去拜访对门的住户那样，那道门阻挡了我。但与此同时，门的存在也代表了主人的邀请，只要你像我现在这样打开它就好。<br>　　我闪身而出。<br>　　房门“吱呀”一声在身后关上，楼道陷入了短暂的黑暗。我跺了跺脚，明亮的灯光随即灌满了楼道。我顺着楼梯缓缓而下，脚步声在楼梯间回荡。<br>　　从三楼下去并不需要花太多时间。我站在花坛边，抬头望着天上的圆月，感觉心情好了不少。<br>　　果然还是不能成天闷在家里啊。<br>　　我环顾四周，忽然看到车位那有个人影。我仔细看了看，发现是邻居老陈。我走了过去，打了个招呼：“老陈，刚下班呀？呦，手里提着啥好东西啊？”我注意到老陈手里还提着个黑色的大包。<br>　　老陈愣了一下，扭头看着我，声音低沉地说：“没有什么，只是一些同事要用的器材。”他打开后备箱，把大包丢了进去。<br>　　大包砸在后备箱里，发出沉闷的响声。<br>　　这也不怕摔坏了。我心中暗暗吐槽。<br>　　我看他脸色有些不对劲，就随口问道：“你这是咋了？你儿子又惹你生气了，还是你们老板又扣你工资了，脸色这么差？”<br>　　老陈摇了摇头。<br>　　“和我儿子玩捉迷藏，被他发现了。”<br>　　我一听就乐了。<br>　　这一家还真是，大的小的都跟小孩子似的。<br>　　我忍不住笑：“你这大人还跟小孩闹别扭呢。”<br>　　老陈这回没理我，他默默关上后备箱，上车，而后发动车子走了。<br>　　得，不会真生气了吧。至于吗？<br>　　我撇撇嘴，回家了。<br>　　<br>　　城市的一座座高楼挤在一起，犹如一堵高墙。天空是灰色的，高楼是灰色的，玻璃是灰色的，甚至于周围的行人也是灰色的。我用脚尖感受着地面的真实，警惕地看着周遭的一切。<br>　　仿佛失真的相片，行人的面目看不真切。<br>　　不知怎的，我手脚不受控制地走向一个背对我的行人，而后拍了拍他的肩膀，嘴里吐出颇有些僵硬的腔调：“兄弟，这是哪儿？”<br>　　那人转过脸来，面无表情地看着我。<br>　　“你看见了吗？”<br>　　“看见什么？”<br>　　我忽然感觉有些不安。<br>　　这时，来往的行人齐齐停下了脚步，转身盯着我，异口同声地问：“你看见了吗？”<br>　　“你看见了吗？”<br>　　“你看见了吗？！”<br>　　我几乎就要尖叫。<br>　　我睁开眼，猛地从床上坐起，重重地喘着粗气。我胡乱抹去身上的冷汗，而后呆呆地看着窗外微微泛白的天空，一时间竟有些分不清梦境与现实。<br>　　因噩梦而产生的恐惧直到我和阿冉离开诊所时才稍稍平复下来。我看着正在货架边挑选玩偶的阿冉，心里终于放松了一些。经过心理医生的疏导，阿冉的精神状态看上去明显好了不少。<br>　　我坐在柜台旁边的椅子上，打量着眼前这家商店。商店的面积不大，但布置得很温馨。几个长长的货架上摆满了玩具和日用品，最里面的墙上则挂着球拍一类的运动器材。<br>　　此时店里没什么人，只有一个阿姨在角落挑着脸盆。<br>　　老板是一个剪着寸头的中年男人，胡子剃得很干净，肚子微微有些发福。<br>　　我打了个哈欠，余光却瞥见老板的目光正死死地粘在阿冉身上。我终于忍无可忍了。从刚进店门的时候就是这样！只是当时我觉得普通人遇上好看的女孩多看两眼也很正常，我才没有多想。可现在这也太肆无忌惮了吧！<br>　　我用力拍了拍柜台，生气地说：“你什么意思？一直盯着人看，没见过女人是吧！”<br>　　老板没什么反应，只是默默地看了我一眼。我忽然感觉一阵没来由的心悸，只觉得他的眼睛逐渐与梦中的行人的眼睛重叠。店外的喧闹渐渐变得遥远，整个世界仿佛只剩下我那剧烈的心跳声。我不禁后退了两步。不知是不是我的错觉，我似乎看到他的眼睛里有什么东西一闪而过。<br>　　“客人要买单吗？”<br>　　喧闹声又重回了我的世界。<br>　　我终于回过神来，骂道：<br>　　“买个屁！”<br>　　我越想越气，便一把扯过阿冉手里的玩偶砸在老板脸上，而后拉着不知所措的阿冉，怒气冲冲地摔门而出。<br>　　出了这么档子事，我是没心情逛街了。我随便找了家药店，买了瓶眼药水，便匆匆往家赶。路上，怒气未消的我向阿冉解释了事情的经过。阿冉听了之后有些忧心忡忡。<br>　　这下我更生气了。<br>　　<br>　　阿冉很喜欢画画。<br>　　每天吃完晚饭，阿冉就会钻进书房作画。而我则是坐在一旁码字。我看着她在街景上画上一双又一双的眼睛，一时有些头皮发麻。<br>　　我又想起那个梦了。<br>　　我忍不住开口问道：“为什么画这么多的眼睛？还是说这是什么新的流派？”<br>　　“不知道，”阿冉摇摇头，“就是很想画。”<br>　　我沉默了一会儿，说：“别怕，你感觉有人在盯着你的时候，就往人多的地方走。”<br>　　阿冉把画揉作一团，丢进了废纸筐。<br>　　“都是一样的，只有在家里才没有那种感觉。”<br>　　我叹了口气，不知道该怎么办。<br>　　时间一天天过去，日历的身子又瘦了些许。一片枯黄从枝头缓缓飘落。我靠在路边的栏杆上，任由纷乱的思绪将我淹没。<br>　　不知道为什么，最近阿冉总是自己窝在房间里不肯出来，看见我也是一副目光闪躲、小心翼翼的样子。有一次她回家时，甚至还被我吓了一跳。<br>　　到底怎么回事？<br>　　我揉了揉酸痛的眼睛，呆呆地看着自己在路灯下被拉长的影子。<br>　　这时，一道新的影子出现在我的视野中。<br>　　我扭头看去，来人却是老陈。我勉强挤出一个笑容，招呼道：“晚上好啊，老陈，你也出来散步啊？”<br>　　老陈点点头，以作回复。<br>　　“对了，老陈。最近咋没见到阿水那小子？”<br>　　“他啊，”老陈笑了笑，“去乡下他奶奶家了。”<br>　　闻言，我有些疑惑。<br>　　“我记得你两个月前不是回去给你妈妈办葬礼了吗？”<br>　　“你应该记错了。”<br>　　我怀疑地看着他，感觉他似乎笑得更开心了。<br>　　应该是我多想了吧。<br>　　“那应该是我记错了，抱歉。”<br>　　“没事。一起走吧。”<br>　　我点点头。<br>　　我们两人开始在街道漫步。<br>　　我向他说了些近日的苦恼，老陈认真听着，笑而不语。<br>　　“所以，是我不小心犯了什么错，惹她不开心了吗？”我抓了抓头发，不住地叹息。<br>　　不知走了多久，老陈忽然停下了脚步。<br>　　我从回忆中爬出来，看了看四周，才惊觉自己不知道什么时候走到了没什么人的老城区。<br>　　突然，不远处传来一声惨叫，我眯眼望去，发现街道尽头有几个人影，其中一个还拖着什么东西。路两旁昏暗的灯光不时闪烁着，我又向前走了几步，终于看清了那人拖着的东西——<br>　　那分明是个人！<br>　　我顿时如坠冰窖，浑身开始发抖。<br>　　“老……老陈……那……那里……”我语无伦次地指给他看。<br>　　老陈把脸凑了过来，脸上仍带着笑，只是此刻这笑容怎么看怎么瘆人。<br>　　“你看见了吗？”<br>　　“卧槽！”我不禁爆了句粗口，脑袋一阵发懵，抬手便往他脸上招呼了一拳。然后我想都没想，下意识地抬腿便跑。<br>　　我不停地跑啊跑，跑到肺仿佛火烧一般才放慢了脚步。我往后看了看，确认没有人追来，才彻底停了下来。<br>　　然后，我找到了派出所。<br>　　老城区的派出所同它周围的建筑一样，带着岁月的痕迹。我穿过那扇有些陈旧的大门，走进了大厅。<br>　　只有一个民警在值班。<br>　　我刚一进去，便迫不及待地开口道：“警察同志，我要报案，有人杀人。”<br>　　那警察愣了一下，也严肃起来。<br>　　“坐吧。”<br>　　我找了把椅子坐了下来，总算是松了口气。<br>　　警察拿着本子走过来，坐在我的面前。他翻开本子，写上日期。突然，他抬起头，死死盯着我，冷笑道：“你看见了吗？”<br>　　我一激灵，差点没跳起来。<br>　　警察似乎也被吓了一跳，关切地问：“你没事吧？是不是刚才在现场被吓到了。”<br>　　我摇摇头，表示自己没事。<br>　　是错觉吗？<br>　　做完笔录已经是十点了。本想打个电话报平安，却发现手机没电了。我匆匆走着，希望能尽快回家。可见鬼的是我走了半天都没看见一辆车经过。<br>　　忽然，一道熟悉的声音在身后响起。<br>　　“阿明，走这么急啊。”<br>　　我不用回头都知道背后是老陈。我再次飞快地跑了起来。我可不想亲眼看看他们到底有几个人。我在四通八达的巷子里四处穿行，只求能摆脱那帮杀人犯。<br>　　正当我累的想直接躺下时，我突然被一把拽进了某条小巷里。<br>　　“别出声，不能被他们发现了。”<br>　　我脑子还没反应过来，便被那人一路拖着走。<br>　　“不是，你是谁啊？”我大口喘着粗气，“那些家伙又是怎么回事？通缉犯吗？”<br>　　那人终于停了下来。<br>　　我这才有机会仔细打量那人——<br>　　一头乱蓬蓬的白发，脸颊干瘪，发黄的牙齿歪七扭八地挤在一起。他穿着一身破破烂烂的绿色外套，身上散发着一股令人作呕的味道。<br>　　那人盯着我，警告道：“年轻人，小声点，如果你不想从这个世界上消失的话。”<br>　　“好，好，我明白。”<br>　　“那些杀人的家伙可不是普通人。”<br>　　我吃了一惊。<br>　　“你是说，他们是……职业杀手？”<br>　　那人瞪了我一眼。<br>　　“是瞳人，你这个蠢货，是瞳人控制着他们！”<br>　　“我……我不明白。”我有些迷糊。<br>　　“如果你仔细看那些人的眼睛，你就会发现他们的眼睛里藏着两个小人，那就是瞳人！而一旦瞳人认为你发现了他们，他们就会想方设法地除掉你！”<br>　　我尴尬地笑了笑：“您……您一定是在开玩笑，是吧？”<br>　　那人冷笑连连。<br>　　我的心顿时沉了下去。<br>　　我又想起那个奇怪的店老板和之前说话莫明其妙的老陈，我对眼前这个老人的话不由得信了几分。<br>　　忽然，我发现老人的眼睛里似乎有什么东西在动，便脱口而出：“你眼睛里是不是有什么东西啊？”话音刚落，我便给了自己一巴掌。<br>　　自己咋就这么嘴欠？<br>　　“你看见了吗？”老人露出了微笑，而后不知从哪掏出了一把匕首，猛地向我刺来。<br>　　我慌忙闪开，躲过了匕首。老人一击未中，又再次向我扑来。这回我没能躲过去，被他扑倒在地。老人举起匕首刺了下来，我急忙抓住他的手往旁边掰扯。看着逐渐逼近的匕首，我冷汗狂流，使出了吃奶的劲拼命拦着。<br>　　我费力地空出一只手，在身旁摸索着。突然，我摸到了一块拳头大小的石头，而后咬咬牙便往老人头上砸去。顿时，石头与老人的脑袋来了个亲密接触。老人一声闷哼，而后往旁边倒去。我不敢放松，连忙乘胜追击，又拼命砸了几次，才丢掉手中的石头。<br>　　看着满脸血迹的老人，我突然感觉一阵反胃，开始狂吐起来。<br>　　过了一会儿，吐得半死不活的我扶着墙，慢慢地站了起来。腿还有些发软，不过已经不碍事了。<br>　　<br>　　关上门，我背靠着墙，瘫坐在地上。<br>　　阿冉从房间里走了出来，吃惊地看着我。<br>　　“阿明，你这是……”<br>　　她快步走了过来。<br>　　“我没事，只……”我看着胸前的水果刀，抬起头，不敢相信地看着她，“为……为什么？”<br>　　阿冉哭了起来。<br>　　“我……我要我的阿明，真正的阿明……”<br>　　我盯着水果刀，果然在倒影中看见了自己眼中的小人。<br>　　阿冉拔出水果刀，而后又重重刺下。<br>　　拔出，刺下，她不断重复着，泪流满面地重复着。<br>　　血溅得到处都是。<br>　　我的体力也在不断流逝。<br>　　我最后看了她一眼。<br>　　真漂亮啊。<br>　　特别是那双眼睛。<br>　　仿佛能装进整个世界。<br>　　当然。<br>　　还有那两个小人。</p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小说 </tag>
            
            <tag> 儿时旧作 </tag>
            
            <tag> 微小说 </tag>
            
            <tag> 恐怖 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>女巫之心</title>
      <link href="/post/b5a97844.html"/>
      <url>/post/b5a97844.html</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-风雨欲来"><a href="#第一章-风雨欲来" class="headerlink" title="第一章 风雨欲来"></a>第一章 风雨欲来</h1><p>　　索罗迎来这个月第一个工作的那个下午，他正坐在弗洛姆自治领海关工作台后打瞌睡。</p><p>　　这是七月份一个炎热的星期六，通常弗洛姆人都会躲在岛南面的林子里避暑。树荫下，穷人们三三两两地聚在一起，高声叫嚷，打着牌戏消磨时间；而富人们则是在仆人的服侍下，优雅地品着冰饮，谈论前往玛尔利卡殖民地的航线中哪条更值得投资。当然，这些都和索罗没有什么关系。作为海关人员，即使没有出入境人员，索罗也得忍受热浪，坚守岗位。</p><p>　　狭长的登记亭烤炉般闷热，几个同事满身大汗，一动不动的如同死尸；淡淡的汗味在房间里四处飘荡，正拼命地往鼻腔里钻；不远处的蒸汽轮渡拖着半死不活的鸣笛声缓缓靠岸，零星的几个人影从船舱里钻了出来；海岸边的椰树懒洋洋地站着，显得无精打采；不绝于耳的虫鸣也弱了几分，好似连续的聒噪使尽了它们的气力。</p><p>　　索罗压根没有工作的欲望，他自觉弗洛姆出了那么大的事是不会有人来了。所以，当他看见面前那两本护照时，不敢相信地擦了擦眼睛。</p><p>　　索罗忽然有些烦躁。真是见鬼！是哪个消息闭塞的偏僻行省来的乡巴佬吗？不，估计又是那些想在女伴面前证明自己胆量的富家子弟，都是些无聊的蠢蛋！搅人清闲……</p><p>　　索罗不动声色地顺着那白皙的手向上看去，悄悄地打量了一遍来人。</p><p>　　是两个小姑娘。</p><p>　　领头的那个看上去大概十七八岁的样子，一副标准的格兰尼亚人打扮：头戴一顶黑色的圆顶礼帽，底下藏着一头宛若绸缎的灰发；身上那套礼服略微显旧，但很干净，没有什么多余的装饰；手里提着的皮箱似乎有些年头，花纹有些像摄政王时期的风格。</p><p>　　站在旁边的女友年龄则要大一些，火红的长发瀑布般倾泄而下，一袭得体的长裙尽显魅力。</p><p>　　“呼……没想到弗洛姆这么热，”红发姑娘愁眉苦脸，“格兰尼亚可凉快多了……虽然每天都要下点雨……”</p><p>　　是亚平罗维那儿的口音。他想。</p><p>　　索罗翻开了那两本护照——</p><p>　　     </p><p>　　<strong>格兰尼亚联合王国公民护照</strong></p><p>　　<strong>波希亚·琼斯</strong></p><p>　　<strong>1761.2.11</strong></p><p>　　<strong>亚平罗维王国公民护照</strong></p><p>　　<strong>克莉丝汀·罗德格斯</strong></p><p>　　<strong>1756.10.29</strong></p><p>　　</p><p>　　索罗抬起头，面带微笑。</p><p>　　“两位美丽的小姐，冒昧地问一下，你们是求学、工作还是访友？”</p><p>　　“访友。”波希亚平静地说。</p><p>　　不知怎的，索罗有些不敢与她对视。在那目光下，他仿佛是一只面对猎鹰的兔子。</p><p>　　真是奇了怪了。</p><p>　　索罗盖上公章，颇有些纳闷地把护照递给波希亚。忽然间，他又不禁想起了那件事。</p><p>　　索罗收起笑容，认真道：</p><p>　　“二位，你们有没有听说过这几个月在弗洛姆发生的杀人案？”</p><p>　　“当然知道，这可是传得沸沸扬扬的新闻呢。”克莉丝汀说。</p><p>　　“那你们……”</p><p>　　“我们相信弗洛姆警察的能力……”波希亚收好护照，“请问附近有马车吗？”</p><p>　　索罗不由得叹了口气。</p><p>　　“屋后就有个车站，不过现在这种情况……”他环顾冷清的登记亭，“……应该是没有车夫了。”</p><p>　　波希亚两人照索罗的指引往屋后走去。</p><p>　　克莉丝汀吐了吐舌头：道：“阿尔杰农那老头子倒是真缺人手了，连我们这种编外人员都派出来。”</p><p>　　“毕竟奥维塞国王的下场可把其他国王都吓坏了。他们现在是恨不得把全国的情报人员都塞到奥维塞那儿。”</p><p>　　“真是的，能引起老头子注意的连环杀人案，不管怎么想这趟都很麻烦啊。”</p><p>　　正说着，两人已是到了车站。车站很是简陋，只是用木料简单搭建的一个小棚子，远远比不上刚刚的登记亭。几张长椅随意地摆放在一边，似乎已经很久无人打理。车站旁边就是马厩，不过此时里面空荡荡的。</p><p>　　“确实没人呢。”克莉丝汀有些泄气。</p><p>　　波希亚倒是一副无所谓的样子。</p><p>　　“走吧，大小姐，这点路算不了什么的。”</p><p>　　这时，一个提着水桶的年轻男人从马厩后面慢吞吞地走了出来。</p><p>　　克莉丝汀顿时一喜，喊道：“那位提着水桶的先生，请问您是马车夫吗？”</p><p>　　男人愣了一下，回过头，看了她们一眼，说：“抱歉，我不是马车夫。不过，如果二位要搭车的话，我倒是可以载你们一乘。瞧，我的车在那儿。”男人指着远处的路面，波希亚两人这才注意到那儿停着一辆四轮车——没有马。他接着说，“不过你们得等一会儿，那车水箱干了，蒸汽机好像也出了点问题……”男人嘀嘀咕咕地往那儿走。</p><p>　　男人最后还是修好了他的车。在这台蒸汽机车颠簸行驶的过程中，三人也在交谈中互相熟识。</p><p>　　伯特利卡·查理曼，机械爱好者，两年前从阿玛利卡殖民地游历回来，现就读于弗洛姆机械工程学院。父亲是弗洛姆有名的银行家奥斯特洛夫。奥斯特洛夫曾多次提出让他到银行当个实习职员，不要整天捣鼓那些蒸汽机。但伯特利卡表示，比起成日坐在办公室里核对那些永远也看不完的账单，他更喜欢机械厂那浓郁的机油味。</p><p>　　克莉丝汀点头赞同。</p><p>　　“我父亲是希望我攻读法律专业，将来好继承家业，可我只喜欢到世界各地冒险。”</p><p>　　“那您有机会一定要去玛尔利卡殖民地看看，您知道，那里是一片充满活力的开拓地。我想，您一定会喜欢那儿的。”</p><p>　　两个身在福中不知福的家伙。</p><p>　　波希亚瞥了眼这两个二代，一时不知道该说些什么，只好独自研究起座下的四轮车：整体比普通马车要大一些，蒸汽机装在车头，靠皮带带动车轮运行。车轮与车体之间由某种类弹簧结构连接。有意思的是，这辆车使用的蒸汽机要比目前各国主流的蒸汽机要小上一号。</p><p>　　“查理曼先生，这车是您自己打造的吗？”波希亚问。</p><p>　　说到蒸汽车，伯特利卡眼睛便亮了起来，他眉飞色舞地说：“琼斯小姐，如果您说的是制作的话，那是的，这辆车的每一颗铆钉、每一个齿轮都倾注了我的心血。但如果您指的是技术的话，那它是玛尔利卡殖民地的新技术。”</p><p>　　玛尔利卡吗？波希亚陷入沉思，那里的繁荣她也有所耳闻。说起来，至理学派似乎有在那儿筹建一座新的超算中心的计划呢。</p><p>　　“真酷。”克莉丝汀赞叹道。</p><p>　　“谢谢……二位要在哪里下车？”</p><p>　　“阿加莎旅馆。”波希亚答道。</p><p>　　蒸汽车摇摇晃晃地前进着，路边的人流逐渐稠密起来。</p><p>　　忽然，克莉丝汀摇了摇波希亚的肩膀，指着前方一栋被人群围得密不透风的两层小屋，小声说：“波希亚，你快看。”</p><p>　　“我看到了……查理曼先生，前面能停一下吗？”</p><p>　　“啊？好……好的。”伯特利卡熟练地操作了一番。几秒后，如被安抚的烈马，蒸汽机不再释放动力，速度渐渐慢了下来。没忍住好奇，伯特利卡伸长脖子向人群中央望去，发现有警察在维持秩序。突然，他似乎想到了什么，脸色顿时有些发白，“你……你们这是要……”</p><p>　　“查理曼先生，您可以先走了，不用等我们……还有，谢谢您的车！”克莉丝汀丢下这句话，便和波希亚一起跳下车，如离弦之箭般飞了出去。</p><p>　　伯特利卡看了看波希亚两人的背影，又看了看车座上的十枚弗沙，一脸不解。</p><p>　　“这个月的第二起了，”波希亚眉头紧锁，“凶手比我们想象的要猖狂。”</p><p>　　“太可恶了！”克莉丝汀神情愤懑，“要是给我抓到我一定要打爆他的狗头！”</p><p>　　两人灵活地在人群中穿行，不一会儿就挤进了最里面。几名负责警戒的警察见此情形，正想大声呵斥，让二人离远点。只是刚刚张口，便听见两人小声念着什么。一时间，只见周围的看客与警察神情恍惚了一下，好似没看见一般，任由她们闯入案发现场。</p><p>　　屋子里只有三名警察，两个年轻一点的正窝在角落呕吐，稍微年长的胖警察则是面色铁青地注视着满屋子的尸体——当然，只有一个死者。</p><p>　　波希亚知道克莉丝汀来之前肯定没看资料，于是介绍道：“那个胖一点的叫理查德，弗洛姆警局的局长。”可克莉丝汀完全没有听进去，她呆呆地看着餐桌上那只泡在水杯里的眼球，语无伦次：</p><p>　　“波……波……波希亚……眼……眼……我……凶手……挑……挑衅……”</p><p>　　这时，一个明显吐得不轻的警员拿着资料，脚步虚浮得几乎是漂到理查德身边，开口道：“局长，已经确认死者的身份了，贝拉·尼尔·沃尔特，21岁，是黑猫商店的售卖员，没有亲属。根据周边住户提供的信息，死者平日除了上下班外，都呆在家，不参加社交活动，人际关系简单。”警员翻了翻资料，继续说，“商店店主说昨晚八点之前死者都在店里工作，大概八点十分左右收拾东西下班。第一发现人是她的房东，下午两点左右发现死者尸体；死者的邻居说昨晚没有听到什么奇怪的声音，白天因为出门工作并不清楚。”</p><p>　　“没了？”理查德注视着警员。</p><p>　　“呃……”警员不敢与理查德对视，转而盯着手中的资料，“没了。”</p><p>　　理查德瞪了他一眼，恨铁不成钢地骂道：“你们能不能努点力？这都第几起了？再没什么进展，老子可就要被议会里那帮王八蛋的口水淹死了！要不是实在没人敢办这案子，老子明天就得回乡下种地！”似乎觉得冲属下发火没什么意义，理查德冷哼一声，不再说话。</p><p>　　其实，理查德心中也明白，遇到这种毫无头绪案子，与其指望脑袋灵光一闪，还不如去郊外找个赛特奥莱人占卜一下在哪能蹲到凶手呢。</p><p>　　接下来到底该怎么办？他问自己。</p><p>　　理查德已经很久没睡好了。每次见到死者的照片时，他的脑海中总是不由自主地闪过妻子与女儿的笑脸。他很害怕，害怕哪一天睁开眼，便再也见不到她们。</p><p>　　理查德的万般无奈化作一声叹息，他最后扫视了一遍眼前这个仿佛被飓风横扫过的屋子，沉声下令道：“清理现场，准备收队。”</p><p>　　“是，局长。”警员们回应道。</p><p>　　几名警察带着各式工具进屋，迅速把尸块收集起来，并在屋内喷洒消毒水。一系列工作完成后，理查德便领着属下径直从波希亚两人身旁走过，如若无物。</p><p>　　房门被砰的一声关上，房间霎时暗了下来。不过因为有从各个缝隙洒进来的阳光，倒也还算明亮。</p><p>　　“波希亚，我们为什么不和他见面。”克莉丝汀好奇地问。</p><p>　　“我担心会打草惊蛇。”</p><p>　　克莉丝汀瞪大眼睛，道：“你是说……”</p><p>　　波希亚没有回答，她蹲下身，默默地盯着地板上早已凝固的血迹，心情复杂。她想起来，第一个受害者还是出现在两年前，手法同样是碎尸，死者同样是女性……不过当时可没人想到凶手会在今年一月份再次行凶。一直到今天，这是第四个受害者了。</p><p>　　波希亚把手中的皮箱放在一旁，打开，露出了里面的瓶瓶罐罐。她拿出一把小刀，从地板上削下一小片带血迹的木屑，又从皮箱中取出一支装有红色试剂的试管，接着把木屑投入其中。不一会儿，试剂开始褪色，逐渐变为淡红。</p><p>　　克莉丝汀凑了过来，说：“她也是女巫啊。”</p><p>　　“克莉丝汀，做能级测试。”波希亚站了起来。</p><p>　　“好。”说完，克莉丝汀便在皮箱旁捣鼓起来。她取出好几种不同颜色的粉末，胡乱混在一起，而后便往空中一挥，房间顿时被纷纷扬扬的粉末所占据。只是，扬尘过后，没有出现象征能场架构的亮色波纹，也没有出现象征能量释放的亮色轨迹，房间内一切如故，“没有痕迹……一定是被人为消除掉了。”克莉丝汀可不相信一个女巫会在遇袭时束手就擒。</p><p>　　躲在一旁的波希亚拍了拍身上的粉尘，平静地说：“下次撒的时候能不能稍微注意一下我……”克莉丝汀摸了摸鼻子，尴尬地移开了目光。波希亚接着说，“到目前为止，四名死者都是女巫，凶手要么同为女巫或是能力者，要么是通过药物作案的普通人……后者概率较小。”</p><p>　　克莉丝汀心中了然，对药剂不敏感的女巫或许存在，但在同一个地方出现四个就有些不现实了。</p><p>　　想到刚刚的血腥场面，克莉丝汀仍是心有余悸，她生气地骂道：“那个凶手一定是个超级大变态……”</p><p>　　波希亚看了她一眼，道：“我们的确可以假定凶手是一个极端仇视女巫且具有特殊嗜好的家伙，”波希亚四处看了看，“他（她）不仅拆解尸体，把碎肉与脏器弄得到处都是。而且还故意把眼球单独放在最显眼的位置，试图给弗洛姆的警员们送个‘惊喜’。但我认为，这里面最重要的一环，是他（她）取走了死者的心脏。”</p><p>　　“等等，取走心脏？你怎么……”克莉丝汀下意识地脱口而出，而后立马反应过来。</p><p>　　女巫的心脏都是半结晶化的。</p><p>　　克莉丝汀把后半句话咽了回去，心中暗骂自己是个笨蛋。她仔细琢磨了一会儿，说：“凶手拿走心脏肯定不是单纯为了好玩……女巫的心脏……对了，在《圣乔治·格里斯》、《亚约》和《魔石志》的记载中，女巫之心是实现永生或复活死者的最佳材料……”她抓抓脑袋，“可事实上女巫的身体和普通人的并没有太多不同，书里面记载的那些仪式和炼金术都已经被证明没有作用了。”克莉丝汀百思不得其解。</p><p>　　“也许凶手只是单纯地想收集战利品……”波希亚没有在这个问题上过多纠结，她从衣服内侧掏出怀表，看了眼时间，“差不多五点了，该走了。”</p><p>　　“走次世界吗？”</p><p>　　“嗯，第三界的这个位置是一片荒地。”波希亚弯腰收好皮箱，而后抓起克莉丝汀的手，两人就这么消失在了空气中。</p><p>　　波希亚两人没走多远，她们再次出现时离案发现场只隔了一条街的距离。刚刚站稳，波希亚便心有所感地转身看去——一个倚着商店售卖柜台的年轻男人正望着那栋已经贴上封条的小屋。看了一小会儿，男人开始东张西望，却恰好迎面对上了波希亚的目光。男人脸色忽地有些僵硬，而后又若无其事地扭头与售卖员攀谈起来。</p><p>　　看清那人的脸，波希亚有些惊讶。是海关那个工作人员，他似乎能看见她们。他也是能力者吗？</p><p>　　“看什么呢，波希亚？”</p><p>“没，没什么。”</p><h1 id="第二章-家"><a href="#第二章-家" class="headerlink" title="第二章 家"></a>第二章 家</h1><p>　　当波希亚踏进这栋四层小楼时，看着同两年前别无二致的景象，她一时竟有些恍惚：</p><p>　　客人们坐在一张张擦得发亮的圆桌边享用晚餐，那只叫诺尔的肥猫趴在窗台上打盹，空气里飘着肉和香料的气味。写着大大的“今日推荐”的木牌挂在正对着门口的墙上。如今时过境迁，上面的许多菜品波希亚都不认识了，但她亲手写上的“特惠薯条”仍保留在菜单第一行的位置。木牌的斜下方是高高的吧台，吧台后站着一个瘦削的年迈女人。女人嘴里叼着烟斗，正漫不经心地擦着手中的酒杯。</p><p>　　波希亚深吸了一口气，领着四处打量的克莉丝汀大踏步走了过去。</p><p>　　“阿加莎妈妈，我回来了。”</p><p>　　阿加莎把酒杯轻轻放在一旁，手捏烟斗，而后就是一阵吞云吐雾。她眯着眼，面色不善地说：“你还知道回来？我还以为你已经被哪个臭小子给拐跑了。”</p><p>　　“阿加莎妈妈，我是为了工作。”波希亚有些无奈。</p><p>　　阿加莎哼了一声，转头朝厨房喊道：“亚莉克西，你快出来，瞧瞧谁来了。”说完，她又回过头，盯着克莉丝汀，上下打量了一番，还未待她开口，克莉丝汀便笑着说：“您好，阿加莎女士，我是波希亚的同事，您叫我克莉丝汀就好。”</p><p>　　阿加莎的脸色有所缓和，温和地说：“乖孩子，克莉丝汀是吧。别太拘束了，就当在自己家。”她看了眼波希亚，又板起脸，抛了把钥匙给她，“四楼还有几个空房间，待会儿自己去挑。”阿加莎话音刚落，一个穿着侍者装的女孩雀跃地从厨房里蹦了出来。</p><p>　　“阿加莎妈妈，谁来……”亚莉克西一眼便看见了杵在吧台那儿的波希亚，她愣了片刻，不敢相信地揉了揉眼睛，而后惊喜地叫道：“波希亚，你回来了！”亚莉克西冲了过去，扑进波希亚的怀中，委屈地说，“你可算回来了，大家都很想你。你每个月发回来的电报，我和文森特每天都要读好多遍呢。对了，这次你要待多久？”女孩眼中透着期待。</p><p>　　波希亚苦笑着说：“工作结束就走。”</p><p>　　亚莉克西有些失落，但还是勉强地笑着，她问：“这位小姐是……”</p><p>　　“克莉丝汀，很高兴认识你。”克莉丝汀笑嘻嘻地看着她。</p><p>　　亚莉克西回以微笑：“我叫亚莉克西。”</p><p>　　两人握了握手。</p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小说 </tag>
            
            <tag> 儿时旧作 </tag>
            
            <tag> 奇幻 </tag>
            
            <tag> 未完结 </tag>
            
            <tag> 悬疑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿赛利亚的风</title>
      <link href="/post/da3086db.html"/>
      <url>/post/da3086db.html</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-诱惑"><a href="#第一章-诱惑" class="headerlink" title="第一章 诱惑"></a>第一章 诱惑</h1><p>　　虽然落日已为阿塞利亚港披上了一层金纱，可此地的繁忙却仍在继续。如果此时你正站在阿塞利亚港最高的建筑物——胜利灯塔上的话，向港口远眺，便能看到那密密麻麻的四处涌动的如蚂蚁般的黑点。</p><p>　　那是数以千计的码头工人，阿塞利亚港这颗心脏的血细胞。他们马不停蹄地从巨大的商船上卸下来自世界各地的货物——香料、茶叶、瓷器，诸如此类。然后，这些珍贵的货物又会被装上火车，送到各个王公贵族手里，变成一枚枚亮闪闪的金币。</p><p>　　当然，商船虽然是这里的常客，却绝不是唯一。作为罗德斯帝国的第一大港口，阿塞利亚港汇聚了大量的各式舰船。那一片波光粼粼之上，还游弋着扬着风帆的渔船、国王陛下的皇家舰队与载满了旅人的蒸汽船。</p><p>　　就如此时，艾斯公司号称永不沉没的世界最大的蒸汽船破浪号正缓缓驶入蟹钳状的港口，坚固的金属船身在船尾留下一道长长的“V”型航迹。</p><p>　　在鸣笛声中，船，靠岸了。</p><p>　　烟囱中钻出的黑烟逐渐散去，如潮的人流踏上陆地。</p><p>　　历经十三天的海上旅程，安德森终于是来到了这座海港城市。</p><p>　　“呼，”安德森吐了口浊气，“旅途的第二站。”说完，他扶了扶头上的圆顶帽，提起脚边的黑色皮箱，迈开了步伐。</p><p>　　这时，却是有人喊住了他。</p><p>　　“先生，请等一等。”</p><p>　　安德森停下脚步，循着声音望了过去。</p><p>　　是个依着栏杆的女人。</p><p>　　女人身材高挑，姿态妩媚，一言一行都犹如带着魔法一般，摄人心魄。</p><p>　　安德森先是四处看了看，发现没有旁人，这才指着自己，迟疑道：“你……在叫我？”</p><p>　　女人轻笑。</p><p>　　“那当然了，先生，还能有谁呢？是第一次来吧？要尝尝阿塞利亚的‘特色’吗？”</p><p>　　安德森顿时心领神会。</p><p>　　“荣幸之至。”</p><p>　　女人朝安德森抛了个媚眼。</p><p>　　“请跟我来，先生。”</p><p>　　女人转身，扭着腰肢，缓缓走进了旁边的小巷。</p><p>　　安德森跟了上去。</p><p>　　啪嗒。</p><p>　　短靴踏在污泥上，溅起了几滴污水。</p><p>　　几个缩在角落的流浪汉不约而同将目光移到了安德森与女人身上。他们表情麻木，嘴巴不停地蠕动着，也不知嚼着些什么。</p><p>　　安德森与女人只是匆匆扫了他们一眼，便不再理会。</p><p>　　两人快步走着。</p><p>　　几分钟后，仍旧在四通八达的巷子里绕的安德森忍不住开口了。</p><p>　　“请问还要走多久，小姐？我可没那么多功夫在这种肮脏的小巷里乱窜。”安德森嫌弃地看着墙上的不知名的污秽，大声嚷道。</p><p>　　听安德森的语气，他似乎有些不耐烦了。</p><p>　　“到了，先生，请进吧。”说完，女人闪身进了一间屋子。</p><p>　　安德森也跟了进去。</p><p>　　房门在身后关上了。</p><p>　　女人点了煤油灯。借着火光，安德森打量着四周。屋子不大，但陈设还算齐全。</p><p>　　女人面对着他，抛了个飞吻，轻薄的衣物从肩上滑落。</p><p>　　灯被吹熄了。</p><p>　　房间霎时陷入一片黑暗。</p><p>　　突然，女人感觉到下巴顶上了一把枪，冰冷的。</p><p>　　“点灯。”</p><p>　　一阵窸窸窣窣的声音。</p><p>　　亮光再一次挤满了房间。</p><p>　　火光下，举着左轮手枪的安德森正饶有兴致地看着女人。</p><p>　　“先……先生，你这……这是什么意思？”女人声音颤抖。</p><p>　　“小姐，你再装下去也只是浪费时间罢了……你身上那股味道我隔了老远都能闻到。”话音刚落，安德森不知从哪掏出一把蝴蝶刀，甩了个刀花，便往女人手臂削去。</p><p>　　手起刀落，一小块人皮打着转飞向空中。而人皮之下，却是闪着光的青鳞。</p><p>　　女人脸色沉了下来。</p><p>　　“放我……”</p><p>　　“没吃过人，真是少见，”安德森嘀咕，他无趣地摆了摆手，“你滚吧。我可不希望我一个初来乍到的外乡人第一天便麻烦警署的先生们。”安德森把枪放下。</p><p>　　见安德森没有动手的意思，女人急忙穿好衣服，准备离开。</p><p>　　“等等。”</p><p>　　女人僵住。</p><p>　　“把钱留下。”</p><p>　　原来只是要钱。</p><p>　　女人松了口气，把包丢给他，接着便飞快地逃走了。</p><h1 id="第二章-交易"><a href="#第二章-交易" class="headerlink" title="第二章 交易"></a>第二章 交易</h1><p>　　“所以……”男人把手中的照片甩到安德森面前，拿起酒杯往嘴里灌了一口，溢出的晶莹剔透的酒液打湿了络腮胡。他接着说，“你打算给这个仿制品开三千比克的价？你在开什么玩笑？！”男人语气激动。</p><p>　　安德森看了眼照片——上面是一个少女铜像。少女跪在底座上，双手十指相扣，神色虔诚地朝着天空祈祷。</p><p>　　那不是一个普通的铜像，安德森和男人都明白这一点。</p><p>　　虽然只是一张颇为模糊的照片，两人仍能感到少女铜像那让人如沐春风的圣洁。总的来说，这铜像的每一个部分都与安德森现在所处的嘈杂的酒馆格格不入。</p><p>　　安德森收好照片，笑了笑，道：“那好吧，先生，我换一个买家？”</p><p>　　男人顿时慌了。</p><p>　　“别，两千！两千怎么样？”</p><p>　　安德森叩了叩桌子。</p><p>　　“先生，”他脸上带着温和的笑，耐心地向自己的准顾客解释，“这可不是那些躲在阴沟里蛊惑人心的邪教用的粗制滥造的仿制品……诺特大陆的每一个人都知道，卡斯特少女的真品已经在五十年前被教会销毁……”安德森提起脚边的皮箱，放在了桌子上，“可又有谁知道，她还剩下了部分小臂残骸，并辗转到一个富商手中，而后又重新铸成了少女呢？”</p><p>　　男人瞪大双眼，不可置信地看着他。</p><p>　　安德森点上烟，一吸，一吐，飘渺的白烟在空中消散。卷烟通红的火光在昏暗的灯光中忽明忽灭。</p><p>　　男人有些坐立不安了。</p><p>　　安德森凑到男人耳边，低声说：</p><p>　　“从某种意义上来说，她就是真品。”</p><p>　　说完，安德森又坐了回去，笑吟吟地看着面前的男人。安德森没再说话，他知道，男人会买单的。</p><p>　　一阵漫长的沉默，男人握紧了拳头，咬牙道：“两千五百，不能再多了。”</p><p>　　“好吧，成交，”安德森答应得很爽快，他笑着说，“先生，合作愉快。”</p><p>　　被耍了！男人反应过来，一脸愤愤不平。</p><p>　　可男人不能毁约，他没有那个胆量。</p><p>　　男人颤抖地掏出支票和钢笔，写上了数额与名字。他写得是如此用力，锐利的笔尖仿佛要刺透纸面。几息之后，他将支票交与了安德森。</p><p>　　安德森接过被捏得发皱的支票，拦住了正欲打开皮箱的男人。</p><p>　　“相信我，在这种人群密集的地方打开它可不是什么明智的主意……另外，我认为自己有必要提醒你一句，教会那帮蠢蛋销毁她是有原因的，这小姑娘可比魔鬼的诅咒可怕多了，瓷国有句话怎么说来着？物极必反，频繁使用可是会惹火烧身的。”</p><p>　　男人没有说话，只是瞥了安德森一眼，迅速拿起皮箱，快步离开了酒馆。</p><p>　　安德森看着他的背影消失在门口，摇了摇头。</p><p>　　安德森不知道这个可怜的男人对自己的忠告听进去了多少……不过，管它呢，出了事他可不提供售后服务。</p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小说 </tag>
            
            <tag> 儿时旧作 </tag>
            
            <tag> 奇幻 </tag>
            
            <tag> 未完结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-CPP学习笔记（4）</title>
      <link href="/post/2bd7364a.html"/>
      <url>/post/2bd7364a.html</url>
      
        <content type="html"><![CDATA[<h1 id="io操作"><a href="#io操作" class="headerlink" title="io操作"></a>io操作</h1><h2 id="1-int输入"><a href="#1-int输入" class="headerlink" title="1.int输入"></a>1.int输入</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int 型输入</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (std::cin &gt;&gt; a, !std::cin.<span class="built_in">eof</span>()) &#123;</span><br><span class="line">    <span class="keyword">if</span> (std::cin.<span class="built_in">bad</span>()) &#123;</span><br><span class="line">        <span class="keyword">throw</span> std::<span class="built_in">runtime_error</span>(<span class="string">&quot;cin is corruted&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (std::cin.<span class="built_in">fail</span>()) &#123;</span><br><span class="line">        std::cin.<span class="built_in">clear</span>();</span><br><span class="line">        std::cin.<span class="built_in">ignore</span>(std::numeric_limits&lt;std::streamsize&gt;::<span class="built_in">max</span>(), <span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;data format error,pleace try again&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    std::cout &lt;&lt; a &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;process complete&quot;</span> &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure><h2 id="2-string输入"><a href="#2-string输入" class="headerlink" title="2.string输入"></a>2.string输入</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//string 型输入</span></span><br><span class="line">std::string str;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (std::<span class="built_in">getline</span>(std::cin, str), !std::cin.<span class="built_in">eof</span>()) &#123;</span><br><span class="line">    <span class="keyword">if</span> (std::cin.<span class="built_in">bad</span>()) &#123;</span><br><span class="line">        <span class="keyword">throw</span> std::<span class="built_in">runtime_error</span>(<span class="string">&quot;cin is corruted&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    std::cout &lt;&lt; str &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;process complete&quot;</span> &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure><h1 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h1><h2 id="1-读文件"><a href="#1-读文件" class="headerlink" title="1.读文件"></a>1.读文件</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//文件存储在操作系统内核区</span></span><br><span class="line">std::string fileName;</span><br><span class="line">std::string fileContent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (std::cin&gt;&gt;fileName, !std::cin.<span class="built_in">eof</span>()) &#123;</span><br><span class="line">    <span class="keyword">if</span> (std::cin.<span class="built_in">bad</span>()) &#123;</span><br><span class="line">        <span class="keyword">throw</span> std::<span class="built_in">runtime_error</span>(<span class="string">&quot;cin is corruted&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//文件读取</span></span><br><span class="line">    <span class="function">std::ifstream <span class="title">ifs</span><span class="params">(fileName)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (ifs.<span class="built_in">is_open</span>()) &#123;</span><br><span class="line">        <span class="keyword">while</span> (std::<span class="built_in">getline</span>(ifs, fileContent)) &#123;</span><br><span class="line">            std::cout &lt;&lt; fileContent &lt;&lt; std::endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ifs.<span class="built_in">bad</span>()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> std::<span class="built_in">runtime_error</span>(<span class="string">&quot;ifs is corruted&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        ifs.<span class="built_in">close</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        ifs.<span class="built_in">clear</span>();</span><br><span class="line">        ifs.<span class="built_in">ignore</span>(std::numeric_limits&lt;std::streamsize&gt;::<span class="built_in">max</span>(), <span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;file not exit,pleace try again&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;process complete&quot;</span> &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure><h2 id="2-清除缓冲区"><a href="#2-清除缓冲区" class="headerlink" title="2.清除缓冲区"></a>2.清除缓冲区</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifs.<span class="built_in">ignore</span>(std::numeric_limits&lt;std::streamsize&gt;::<span class="built_in">max</span>(), <span class="string">&#x27;\n&#x27;</span>);</span><br></pre></td></tr></table></figure><p>　　作用是为了释放由操作系统分配的用于文件操作的缓冲区资源，以避免内存泄漏。</p><p>　　在文件操作过程中，操作系统通常会为每个打开的文件分配一些内存缓冲区，用于提高文件访问效率。这些缓冲区可能用于读取或写入文件内容，或者用于暂存文件操作的结果。如果文件操作失败，那么这些缓冲区中的数据可能是不完整的，或者可能包含了未写入文件的内容。</p><p>　　如果不进行缓冲区清除，这些缓冲区可能会保留下来，即使文件操作失败，这些缓冲区仍然占用内存资源。如果应用程序打开了大量的文件，且每个文件都分配了缓冲区，那么这些缓冲区可能会累积起来，导致内存使用量增加，甚至可能导致内存泄漏。</p><p>　　因此，缓冲区清除是非常重要的，可以确保：</p><p>　　<strong>1.释放不完整的缓冲区数据，避免内存泄漏。</strong></p><p>　　<strong>2.释放未写入文件的缓冲区，防止数据丢失。</strong></p><p>　　<strong>3.确保后续的文件操作不会受到之前失败操作的影响。</strong></p><h1 id="string流操作"><a href="#string流操作" class="headerlink" title="string流操作"></a>string流操作</h1><h2 id="1-string-to-int"><a href="#1-string-to-int" class="headerlink" title="1.string to int"></a>1.string to int</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//string to int</span></span><br><span class="line"><span class="function">std::string <span class="title">str</span><span class="params">(<span class="string">&quot;127&quot;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">std::stringstream <span class="title">strStream</span><span class="params">(str)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">strStream &gt;&gt; i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (strStream.<span class="built_in">bad</span>()) &#123;</span><br><span class="line">    <span class="keyword">throw</span> std::<span class="built_in">runtime_error</span>(<span class="string">&quot;strStream is corruted&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (std::cin.<span class="built_in">fail</span>()) &#123;</span><br><span class="line">    strStream.<span class="built_in">clear</span>();</span><br><span class="line">    strStream.<span class="built_in">ignore</span>(std::numeric_limits&lt;std::streamsize&gt;::<span class="built_in">max</span>(), <span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;string format error&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    std::cout &lt;&lt; i &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;process complete&quot;</span> &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure><h2 id="2-int-to-string"><a href="#2-int-to-string" class="headerlink" title="2.int to string"></a>2.int to string</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int to string</span></span><br><span class="line"><span class="type">int</span> num = <span class="number">100</span>;</span><br><span class="line">std::stringstream strStream;</span><br><span class="line">strStream &lt;&lt; num &lt;&lt; std::endl;</span><br><span class="line"><span class="keyword">if</span> (strStream.<span class="built_in">bad</span>()) &#123;</span><br><span class="line">    <span class="keyword">throw</span> std::<span class="built_in">runtime_error</span>(<span class="string">&quot;strStream is corruted&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    std::cout &lt;&lt; strStream.<span class="built_in">str</span>() &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-分割字符串"><a href="#3-分割字符串" class="headerlink" title="3.分割字符串"></a>3.分割字符串</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//切分字符串</span></span><br><span class="line"><span class="function">std::string <span class="title">srcString</span><span class="params">(<span class="string">&quot;hello world i love you&quot;</span>)</span></span>;</span><br><span class="line"><span class="function">std::stringstream <span class="title">strStream</span><span class="params">(srcString)</span></span>;</span><br><span class="line">std::string destString;</span><br><span class="line"><span class="keyword">while</span> (strStream &gt;&gt; destString) &#123;</span><br><span class="line">    std::cout &lt;&lt; destString &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (strStream.<span class="built_in">bad</span>()) &#123;</span><br><span class="line">    <span class="keyword">throw</span> std::<span class="built_in">runtime_error</span>(<span class="string">&quot;strStream is corruted&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="多线程操作"><a href="#多线程操作" class="headerlink" title="多线程操作"></a>多线程操作</h1><h2 id="1-多线程基本语法"><a href="#1-多线程基本语法" class="headerlink" title="1.多线程基本语法"></a>1.多线程基本语法</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;mutex&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;atomic&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//std::mutex mut;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line"><span class="comment">//原子操作，不可被分割，即不可被多个线程同时操作</span></span><br><span class="line"><span class="comment">//数据量大时毫无优势</span></span><br><span class="line">std::atomic&lt;<span class="type">int</span>&gt; data;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">helloworld</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//std::lock_guard&lt;std::mutex&gt; lg(mut);  //互斥锁，构造时上锁，析构时解锁</span></span><br><span class="line"><span class="comment">//需要在一定的作用域内实现，不可没有边界</span></span><br><span class="line">    <span class="comment">//尽量覆盖少的代码</span></span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;hello world&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//数据保护，不同线程对同一数据操作会出现不可知错误，</span></span><br><span class="line"><span class="comment">// 因此需要一些手段：互斥锁、原子操作来进行数据保护</span></span><br><span class="line"><span class="function">std::thread <span class="title">thr</span><span class="params">(helloworld)</span></span>;</span><br><span class="line">thr.<span class="built_in">join</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-死锁"><a href="#2-死锁" class="headerlink" title="2.死锁"></a>2.死锁</h2><p><img src="https://pic.imgdb.cn/item/66c1f351d9c307b7e95953ea.jpg" alt="code"></p><p>　　死锁是计算机操作系统中的一种现象，当多个进程或线程在执行过程中，因争夺资源而造成的一种互相等待的现象，若无外力干涉，这些进程或线程都将无法向前推进。</p><p>　　通俗来说，死锁就像你和我都在图书馆里找书，我们同时想要借阅对方手中的书。我想要你手中的书，而你想要我手中的书。我们两个都在等待对方先放下手中的书，但是因为没有外力的介入，我们两个人都卡住了，谁也拿不到想要的书籍，这就形成了死锁。</p><p>　　在操作系统中，死锁通常发生在多个进程或线程同时请求多个资源时。这些资源可以是CPU时间、内存、磁盘I/O、网络资源等。当一个进程或线程请求某个资源时，它可能需要等待另一个进程或线程释放它所持有的资源。如果这个过程无限循环下去，就会形成死锁。</p><p>　　死锁的问题可以通过一些策略来解决，比如使用资源分配图来检测死锁，或者通过资源分配策略来避免死锁的发生。比如，可以采用资源预分配策略，或者使用信号量来控制资源的访问，从而避免死锁的发生。</p><h2 id="3-解决方法"><a href="#3-解决方法" class="headerlink" title="3.解决方法"></a>3.解决方法</h2><p><img src="https://pic.imgdb.cn/item/66c1f351d9c307b7e9595433.jpg" alt="code"></p><p>　　使用adopt_lock使lock_guard只保留解锁的功能。</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> C/C++ </tag>
            
            <tag> 基础语法 </tag>
            
            <tag> io输入 </tag>
            
            <tag> 文件操作 </tag>
            
            <tag> string流 </tag>
            
            <tag> 互斥锁 </tag>
            
            <tag> 原子操作 </tag>
            
            <tag> 死锁 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>穷途末路</title>
      <link href="/post/7b767354.html"/>
      <url>/post/7b767354.html</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-老板，这丧尸怎么卖"><a href="#第一章-老板，这丧尸怎么卖" class="headerlink" title="第一章 老板，这丧尸怎么卖"></a>第一章 老板，这丧尸怎么卖</h1><p>　　他们——现在或许该称作它们——漫无目的地徘徊在服装店门外，瞪着蜡白色的眼睛，茫然地四处张望着。<br>　　杨牧窝在收银台后的身子又往里头缩了缩，生怕被那些家伙注意到自己。<br>　　杨牧直到现在还不大明白，明明几分钟前还好端端的人，怎么突然就成了影视作品里那些吃人的丧尸呢？<br>　　丧尸什么的不都是假的么？！<br>　　真是见了鬼了！<br>　　杨牧胡思乱想着，以缓解自己紧张的心情。<br>　　事实上，杨牧此刻仍对此事抱有一定的怀疑。<br>　　他颇为担心那些家伙只是暂时发了疯的病人，以至于先前与它们面对面的时候，他愣是没敢实验关于爆头这件事的真实性。<br>　　如果它们还会痊愈，动了手，那他岂不是成了杀人犯？<br>　　作为一个生在红旗下，根正苗红的守法青年，面对人形生物——即使它是怪物——还是过于难以下手了些。<br>　　于是杨牧在它们的追逐下四处逃窜，最后找了个地方躲了起来，并暗暗祈祷自己能撑到救援力量赶到商场——如果救援力量存在的话。<br>　　就在这时，一个女丧尸突然停下了自己那宛若帕金森患者的脚步，呆呆地朝服装店看了过来。<br>　　杨牧吓了一跳，急忙缩回了脑袋，不敢再看。<br>　　别看它们现在一个个好似帕金森患者，可一旦发现活物，那兴奋得可就跟注射了几百支兴奋剂似的，跑起来可不比正常人慢。尤其是它们刚变异——杨牧不大确定这个词合不合适——的时候，那就是小飞人。如果身边的人变异了，而你又没及时发现的话，铁定会被它轻而易举地扑倒。<br>　　当然，如果真有人在身边变异的话，就算你发现了也躲不开。<br>　　实在是太快了——无论是它变异的速度还是奔跑的速度。<br>　　万幸的是，它们并不能一直保持这种“小飞人”状态——要不然杨牧此刻也不会只是简单地被堵在这，而是加入它们的大军，一起四处游荡，寻找猎物了。<br>　　杨牧估算过，它们的“小飞人”状态大概能维持十五秒左右，而后便又回归正常人水平。还不算太糟糕，最起码距离足够的话还有机会逃生。<br>　　忽地，“哐啷”一声，门口响起了似乎是易拉罐被踢飞的声音。<br>　　杨牧悚然一惊。<br>　　它进来了！<br>　　杨牧心中大吼——<br>　　不要过来！<br>　　请千万不要过来啊！<br>　　兴许是美丽的丧尸小姐听到了杨牧心中热情的呼唤，它甩着只剩一丁点皮肉连着的舌头，健步如飞。<br>　　突然，我们心急的丧尸小姐一个不小心，被地上散落的杂物绊倒，而后径直摔向了身前倒置的凳子。只听见“噗”的一声，它竟是被凳子腿给捅了个对穿。<br>　　而门外的丧尸先生们见到此情此景，竟都是一副熟视无睹的样子，更别提上前搀扶了。<br>　　真是世风日下呢。<br>　　丧尸小姐缓缓爬了起来，而它的腹部则多了个清晰可见的小洞。<br>　　此刻正偷瞄的杨牧：“……”<br>　　丧尸小姐仍旧倔强地朝收银台走来。<br>　　我去！<br>　　大姐，你的肠子漏出来了啊！<br>　　这么敬业的吗？！<br>　　你到底在好奇些什么啊？！<br>　　好奇心会害死丧尸的你知道吗？！<br>　　杨牧欲哭无泪地想道。<br>　　他双手颤抖地抓住身旁的椅子，心中则胡乱思考着待会给对方给予致命一击的时候喊些什么会比较霸气。<br>　　门外似乎响起了些许微弱的声响，可杨牧此刻已无暇顾及了。<br>　　杨牧额上沁出冷汗，抓着椅子的手的指节因过于用力而泛白。他不自觉地咽了口唾沫，随时准备暴起伤“人”。<br>　　他在心中倒数。<br>　　三、二、一……<br>　　杨牧正欲站起，那女丧尸却突然间倒在了他的身旁，侧着头，睁目瞪着他。<br>　　杨牧顿时被吓得魂飞魄散，怪叫着蹦了起来。<br>　　“咳，我说……”<br>　　嗯？有人？<br>　　杨牧这时才注意到站在身旁的男人——一身黑色卫衣，背着双肩包——同样是黑色的，手里提着一杆长矛。长矛是自制的，只是简单地在金属管上固定了一把厨刀。此刻，尖锐的刀刃上沾满了乌黑色的血污。<br>　　男人头发凌乱，瞪着一双死鱼眼，仿佛没睡醒一般。<br>　　“……现在的年轻人胆子都这么小么？”<br>　　“你……我……我只是没做好心理准备。”杨牧反驳。<br>　　他低头看了眼女丧尸 发现它额上多出来了个血洞，汩汩地淌出一些令人反胃的东西，无声地述说着方才的遭遇。<br>　　店外聚集的丧尸自然没能免去灾祸，此时它们的尸体正横七竖八地躺在地板上。唯一剩下的一只丧尸似乎被打断了手脚，仰面躺着。它不知疲倦地往店里伸长脖子，用力张合嘴巴，徒劳地对着空气撕咬。<br>　　真是厉害啊。<br>　　杨牧咋舌。<br>　　“陆信，你也可以叫我猫爷。”男人边简单地介绍自己，边递给杨牧一柄小臂长的厨刀，“拿着，我们去一楼，把商场的大门给关上。”<br>　　杨牧迅速反应过来，惊讶地说：“S市沦陷了？”他从陆信手中接过闪着寒光的厨刀，随手挥了挥。<br>　　手感还不赖。<br>　　“杨牧。”他说。<br>　　达成共识后，两人随即走出了服装店。<br>　　而后，杨牧停下脚步，半蹲在那只还没死的丧尸旁。<br>　　“本想留下来做实验的。”陆信解释道。<br>　　杨牧点点头，示意自己明白。<br>　　先前一直被围追堵截，没能近距离观察这种奇异的生物。现在这个机会来了。<br>　　杨牧细细打量着丧尸，没能从中看出丝毫残存的人性，只剩下最原始的野兽本能。他伸手在丧尸的脸前挥来挥去，而丧尸变得更加亢奋，眼睛骨碌碌地盯着那只游移在半空中的手。<br>　　他已经不再是人了。杨牧在心中默念。<br>　　安息吧。<br>　　厨刀从丧尸柔软的眼窝刺入了大脑，精密的脑结构在瞬间便被冰冷的金属破坏。杨牧顺势搅动了几下，那丧尸一阵抽搐，便死的不能再死了。<br>　　杨牧抽出厨刀，在那丧尸的衣服上擦了擦，站起了身。<br>　　陆信摸了摸下巴。<br>　　有意思，这家伙不简单啊。<br>　　“走吧。”陆信招呼道。</p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小说 </tag>
            
            <tag> 儿时旧作 </tag>
            
            <tag> 科幻 </tag>
            
            <tag> 未完结 </tag>
            
            <tag> 末日 </tag>
            
            <tag> 丧尸 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>弗雷德老爹的餐馆</title>
      <link href="/post/ac52037f.html"/>
      <url>/post/ac52037f.html</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-餐馆新人"><a href="#第一章-餐馆新人" class="headerlink" title="第一章　餐馆新人"></a>第一章　餐馆新人</h1><p>　　凯瑟琳被绑架了。</p><p>　　可怜的少女是在离家出走的途中——当时她正准备登上前往3号城市的列车——被绑架的。</p><p>　　凯瑟琳最后的记忆是一只大手捂住了她的口鼻，而后便两眼一黑……</p><p>　　再次醒来的时候她已经在一个臭烘烘的麻袋里了。麻袋里漆黑一片，粗糙的质感磨得少女皮肤生疼。时不时的颠簸与引擎的巨大轰鸣声让她知道自己身处在一辆车上，一辆前往污染区的车上——这是那两个绑架者交谈时说的。而少女得知这个消息时心神大乱，不禁发出一声惊呼，而后便被粗暴地敲晕过去。</p><p>　　不知过了多久，凯瑟琳便被一阵嘈杂的说话声吵醒。少女睁开眼，发现麻袋口透进了光亮，她终于是重见了天日。</p><p>　　忽地，一个黑影一寸寸地吞掉了那唯一的光源。</p><p>　　少女眯着眼，呼吸却是忽然一滞。</p><p>　　那张可怖的脸爬满了蜈蚣般的伤疤，灰白的头发下是一双瞪大的眼睛——右眼是只闪着红光的机械义眼。那人舔了舔干裂的嘴唇。凯瑟琳注意到他那副洁白而又整齐的牙齿，少女不禁打了个冷颤——听说有些生活在污染区的人会吃活人!</p><p>　　那人皱着眉头，颇有些嫌弃地说：“这就是你们说的值钱玩意？一个安全区里的大小姐？”他的声音有些低沉。</p><p>　　那张脸从凯瑟琳的视线中移开了。凯瑟琳连忙从麻袋里爬了出来。</p><p>　　没有人理会她。</p><p>　　少女匆匆地理了理有些凌乱的衣衫和那柔顺的金色长发——无论在哪里，保持形象都是最重要的礼仪之一。</p><p>　　凯瑟琳环顾四周，劣质的装修透着一股浓浓的廉价气息，但是打扫得很干净。周围是同样廉价的桌子，一群长相凶狠的大汉挤满了他们所能找到的每一个位置。空气中飘着浓郁的汗臭味，这让凯瑟琳微微皱起了眉头。</p><p>　　这里应该是个餐馆，可这里的环境却完全不符合少女脑海中对餐馆的印象。</p><p>　　大汉们举着酒杯，肆无忌惮地盯着凯瑟琳——污染区里可很少能见到像凯瑟琳这样皮肤白嫩的姑娘，有几个大胆些的则是轻佻地对着少女吹着口哨，而后和其他人一起哈哈大笑。</p><p>　　少女脸色涨得通红。</p><p>　　真……真是一群失礼的家伙!</p><p>　　“你们这帮该死的混球都给我安静!”</p><p>　　仿佛一声炸雷在耳边响起，凯瑟琳被吓了一跳。餐馆里也如同摁下了某种开关，霎时鸦雀无声。少女再看向那帮大汉时，他们已经老老实实地坐在那吃饭，刚才的一切都仿佛是一场幻觉。</p><p>　　最好不要让弗雷德老爹感到心情烦躁，这是所有在这用餐的人所深知的一点。</p><p>　　而声音的主人双手环抱胸前，看着面前两个点头哈腰的中年男人，脸色阴沉。</p><p>　　正是凯瑟琳在麻袋里看到的那张脸。</p><p>　　“所以你们到底付不付钱，那可不是什么值钱玩意。”弗雷德老爹用下巴指了指凯瑟琳。</p><p>　　少女顿时感觉自己被冒犯了，虽然她也说上来为什么……</p><p>　　脸上有着一道长疤的中年男人——不知道为什么眼圈还带着淤青——忍不住反驳道：“她是康德家的小姐，赎金可不止……”</p><p>　　他的同伴连忙拉住他，看着那人愈发阴沉的脸，陪笑道：“我们先把货出了，再付您饭钱……”</p><p>　　弗雷德老爹脸上带着看傻子的表情——虽然这在他那张可怖的脸上表现的颇为怪异：“你们两个最好快点给我个满意的答案，我的耐心是有限的。”</p><p>　　经过一番“友好”的交涉。最终，在交出了一堆零零散散的小物件做抵押之后，弗雷德老爹才放过了他们。那两人在得知可以离开后，便立马连滚带爬地冲出了餐馆，“货物”也没能带走，生怕慢一秒就再也没法离开似的——显然在凯瑟琳还没清醒的时候那两人便尝过了弗雷德老爹的手段。</p><p>　　凯瑟琳目瞪口呆。客人们则是一副习以为常的样子。虽然附近的佣兵们都知道这个老家伙并不好惹，但总会有些外地来的不开眼的家伙给他们无趣的生活添点乐子。</p><p>　　弗雷德老爹注视着那两人的身影消失在街道拐角，摇了摇头。</p><p>　　他转过身，看着凯瑟琳：“那么……下面该来谈谈你的问题了。”</p><p>　　“啊？”少女愣了一下，迷茫地看着面前的弗雷德老爹，似乎有些没反应过来，“谈……谈什么？”</p><p>　　此时她才有机会仔细观察这个救了她的人——一头灰白的头发，国字脸，有着硬朗的线条和坚毅的下巴，约莫五六十岁的样子。他穿着一身洗的白得发亮的厨师服，身体又高又壮，以至于少女不得不抬头才能看到他的脸。</p><p>　　“你是哪个安全区的？”弗雷德老爹从口袋里掏出一根雪茄，递到鼻前轻轻地嗅了嗅。</p><p>　　兴许是弗雷德老爹不容置疑的语气，凯瑟琳下意识地回答：“十……十二号城市……”她显得有些不知所措，手指不安地捏着衣角。</p><p>　　弗雷德老爹皱着眉，沉吟片刻，道：“嗯……待会我送你回去。”他把雪茄塞进口袋。</p><p>　　“我不回去!”少女突然大喊。</p><p>　　弗雷德老爹饶有兴致地看着她。</p><p>　　用餐的客人们纷纷侧过头，偷偷瞄着她。这时，凯瑟琳如梦初醒，连忙捂住嘴，脸也变得通红——在公共场合大喊大叫可是相当失礼的事情啊!</p><p>　　凯瑟琳连连弯腰，语无伦次地说：“抱……抱歉，我……我太激动了。我不是有意要喊那么大声的。”</p><p>　　弗雷德老爹并未在意这个城里人的那套礼仪，他问：“为什么不回去？安全区可比我们这种肮脏的臭水沟好太多了。”不等凯瑟琳回答，他又自顾自地说，“让我猜猜，是离家出走吧？一个离家出走的城里小姐？”</p><p>　　凯瑟琳脸上闪过一丝慌乱，连忙在身上摸索了一番，摸出一枚瓶盖大小的银白色金属块。她双手捧着金属块，递到费里德老爹面前，诚恳道：“谢谢您救了我，这是我的一点心意，还希望您能收下。”少女迟疑片刻，又开口说，“我还有一个不情之请，如果有人向您打听我的话，还请您不要告诉他们。”</p><p>　　眼前的男人没有动弹，凯瑟琳把金属块轻轻地放在了一旁的桌面上。</p><p>　　少女鞠了一躬，起身，转身欲离。</p><p>　　时间拖了太久了，父亲的手下肯定已经在各个安全区里侯着，就等着自己自投罗网呢。</p><p>　　绝对不能回去!凯瑟琳暗暗想道。</p><p>　　“等等。”</p><p>　　凯瑟琳停住了脚步，回过头，看着弗雷德老爹，脸上带着疑惑。</p><p>　　“请问有什么事吗？”</p><p>　　“你不回安全区？”</p><p>　　“是。”凯瑟琳老实回答。</p><p>　　“如果我是你我就不会在污染区乱逛……”弗雷德老爹冷笑，“我敢打赌，你离开这家店不超过两百米，那帮恶心的家伙就会像嗅到血腥味的鲨鱼一样，把你带走……绑去换赎金应该是最好的结果……”</p><p>　　凯瑟琳愣住了，她没想过这些。她从前从未来过污染区。</p><p>　　凯瑟琳不知所措地看着他。</p><p>　　“虽然我不知道你为什么跑出来，但现在，游戏结束了。你最好回去，我可以送你。”</p><p>　　“不，”凯瑟琳坚定地说，“我不会回去的。”</p><p>　　“那你想怎样？”他冷笑，“难不成还指望我会收留你吗？”</p><p>　　凯瑟琳不假思索地说：“我可以帮您干活。”</p><p>　　“你？干活？”弗雷德老爹上下打量着少女，似乎觉得这个词与她联系在一起是一件不可思议的事情，“你会做什么？诗朗诵吗？”他嗤笑一声，“我这可不需要这个，来这吃饭的可都是些没什么文化的家伙。”</p><p>　　少女的脸微微泛红，尴尬的无以复加。她确实只会那些。</p><p>　　凯瑟琳低着头，诚恳地说：“我可以学。”</p><p>　　弗雷德老爹盯着她，不知在想些什么。凯瑟琳被盯得有些发毛。终于，弗雷德老爹收回了目光。</p><p>　　“包吃住，没有工资。”</p><p>　　“好。”少女欢快地答道。</p><p>　　“我是这家店的老板，弗雷德。”他说。</p><p>　　“我叫凯瑟琳。谢谢您愿意收留我。”</p><p>　　“艾莉丝，过来，领我们的新员工去登记。”</p><p>　　一个看上去约莫三十几岁的女人从柜台后小跑过来，脸上带着温和的笑。</p><p>　　“跟我来，小姑娘……大家会很高兴认识你的。”</p><p>　　“等等。”弗雷德老爹叫住了正要跟上去的凯瑟琳，指了指金属块，“拿上你的东西，我不需要这个。”</p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小说 </tag>
            
            <tag> 儿时旧作 </tag>
            
            <tag> 科幻 </tag>
            
            <tag> 未完结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-CPP学习笔记（3）</title>
      <link href="/post/5dcb4efe.html"/>
      <url>/post/5dcb4efe.html</url>
      
        <content type="html"><![CDATA[<p>现代C++详解(98, 11, 14, 17)    </p><h2 id="Part1：课程介绍"><a href="#Part1：课程介绍" class="headerlink" title="Part1：课程介绍"></a>Part1：课程介绍</h2><h4 id="课程的总体概述"><a href="#课程的总体概述" class="headerlink" title="课程的总体概述"></a>课程的总体概述</h4><p><strong>一：为什么要出这门课？</strong></p><p>我发现市面上的C++课程基本都停留在C++98阶段，而且基础概念反复重复。</p><p>讲的东西对于专业的C++开发不过是入门，还差的很远很远。这就给了很多新手我已经对C++有了基本使用能力的错觉，我已经入门了。</p><p>C++可以说是一个大杂烩，它包含c语言面向过程的全部知识，又包括面向对象部分，还包括模板与泛型编程。<strong>很多新手在用c++的语法写c，这是非常不正确的，相当于抛弃了面向对象与模板，这些都是C++的精髓。面向对象与模板才是C++的核心，面向过程更多的是对C语言的一个妥协。</strong></p><p>要学好这三部分，就要把面向过程，面向对象，模板与泛型编程全部学好。</p><ol><li>学好面向过程部分，也就是c语言，需要从编译器的角度出发，每一行代码都要明白内存的变化。</li><li>面向对象部分需要在一定程度上理解内存与编译器，但核心已经不再是内存层面了。</li><li>模板与泛型不怎么需要了解底层，但也是一个非常复杂的模块。可以说，<strong>模板是C++特有的精髓部分，C++几乎所有的库，框架都离不开模板。</strong></li></ol><p>很多新手对于C++的理解太过单一，而且学的太浅了。</p><p>所以我出了这门课，讲的是企业级别的C++，会有一些难度，但这基本就是现代C++的全部知识点了。应该比市面上几乎所有的教程都全，而且很有深度的。</p><p><strong>二：课程内容介绍：企业中，C++11是必学的，后面的会了更好，不会也无所谓。</strong></p><p>这门课总共包含10个部分和三个附录，大致介绍一下：（重要的课程前面都加了*）</p><ol><li>Part1: 课程介绍：没什么实际知识点，就是一个介绍</li><li>Part2:  C++的基本特性，属于C++的基础知识，难以被划分到任意一个模块</li><li>Part3  类的特性，C++类的全部常用特性应该就这些，比较全了</li><li>Part4：智能指针，不仅要学习基础知识，使用场景更是核心，很多人根本知道什么时候    该用智能指针。</li><li>Part5：模板与泛型编程。<ol><li><strong>模板很重要，很多人对模板的重视程度不够。</strong></li><li>模板也是泛型编程的基础，泛型编程是一个常用的编程方式，新手对泛型编程可能比较迷糊，觉得不好理解，但它确实功能强大，是C++的核心之一。</li></ol></li><li>Part6：stl库：有了泛型编程的基础，就可以学习stl的实现原理。学习stl不仅要学习使    用方法，实现原理更加重要。可以说，对于stl，懂实现原理和只会使用完全是两个阶段。</li><li>Part7：io库：C++的io功能也很强大，很常用，必会</li><li>Part8：多线程：现代程序基本都是多线程程序，而C++自带的多线程又是现代C++程序实现多线程的主流方式，所以非常重要。</li><li>Part9：异常处理：能否合理的处理异常是衡量一个人水平的重要指标，对于大型程序非    常重要。</li><li>Part10：各种难以归类但很重要的知识点。</li><li>附录一：STL全部的算法</li><li>附录二：STL标准库提供的仿函数</li><li>附录三：STL各种容器的操作</li></ol><p>综上所述：13个部分，除了Part1的课程介绍和三个附录几乎全程重点。所以做了个目录，方便随时查看。</p><p><strong>三：对新手讲一下我推荐的学习C++的路线</strong></p><ol><li>C++语法学到差不多，就去学后面的东西，比如后端开发方向，就可以去学linux开发，网络开发，等有了应用场景，C++的语法就很好学了。比如，异常处理的很多语法单讲非常空洞，但放到具体环境中就很好理解了。我将异常处理放到最后也是因为只有有足够多的代码才可以体现出异常处理的意义。</li><li>一些理论性的东西建议往后放一放，比如操作系统，网络通信的理论部分。对于想做开发的朋友，推荐先实践，后理论。而数据结构，放到最后，它和开发的关系不怎么紧密，数据结构是体系成型的人用来提高的。</li><li>C++一大特点就是没有固定的生态，其他语言，比如java都是有自己对应生态的，直接学对应生态即可，导致了C++的以下特点。<ol><li>C++和底层关系紧密，因为没有固定生态，难以大规模分装，而且C++涉及很多偏向底层的大型项目（比如windows，游戏开发这类特别要求效率的项目），无法牺牲运行效率来换取开发效率。<strong>所以C++非常重视计算机网络和操作系统的理论知识。这也导致C++在很多环境下都是不可替代的。</strong></li><li>语言特性繁多，需要兼容各种使用场景，有很大的历史包袱。</li></ol></li></ol><p><strong>四：这门课就不做ppt了</strong></p><p>有图片就直接粘贴在文档中。ppt更多的是用来展示的，界面华丽，但信息密度太低了，对于这门课，ppt要做需要500页往上，不论我做起来，还是你们看起来，都费劲。</p><p><strong>五：直接开始</strong></p><p>其实时间是很宝贵的，工作的人对此体会应该更加深刻。所以我选择直接把文档写出来，而不是边讲边写文档，这样效率更高，节省时间。</p><h4 id="（-）开发环境介绍"><a href="#（-）开发环境介绍" class="headerlink" title="（*）开发环境介绍"></a>（*）开发环境介绍</h4><p>使用的开发环境就是vs2019，当然vs2017，vs2022也可以，再早就不推荐了，可能有些功能不支持。</p><p>接下来介绍一下vs的基础知识，老手完全可以跳过这一节。</p><h5 id="vs的介绍："><a href="#vs的介绍：" class="headerlink" title="vs的介绍："></a>vs的介绍：</h5><p>vs是一个功能极其强大的集成开发环境，说最强也没有问题，主要的缺点就是不能跨平台，只能在windows上运行。</p><p>而现在C++的主流开发平台是linux，所以很多人就说vs让开发者缺乏对C++执行过程的了解，linux上没有像vs那样强大的集成开发环境，比较分散，开发人员需要自己调度各种资源。</p><h5 id="vs的安装与卸载："><a href="#vs的安装与卸载：" class="headerlink" title="vs的安装与卸载："></a>vs的安装与卸载：</h5><ul><li><ol><li>vs安装：直接去microsoft官网下载就可以了，傻瓜版，我这里演示一下。注意只安装需要的模块就可以了，如果全安装要上百G。</li></ol></li></ul><p><strong>大致演示一下：</strong></p><p>如果没有vs，可以暂停，官网下载一下vs。</p><ul><li><ol><li><strong>（*）vs的卸载</strong>：这里特别注意，vs由微软官方推出，是<strong>直接关系操作系统内核</strong>的，如果乱弄是会玩坏操作系统的，最后就只能重装系统，所以强调一下如何卸载vs。</li></ol></li></ul><p><strong>演示一下：</strong></p><p><strong>其实卸载很简单，主要是不要乱弄，其它任何方式都可能会导致各种遗留问题，最后只能重装系统了。</strong></p><h5 id="vs项目的创建与vs的程序编译过程"><a href="#vs项目的创建与vs的程序编译过程" class="headerlink" title="vs项目的创建与vs的程序编译过程"></a>vs项目的创建与vs的程序编译过程</h5><ul><li><ol><li>vs项目的创建，我用vs2019来演示，C++项目大致分为两种<ol><li>控制台项目：程序在黑窗口运行</li><li>windows桌面应用程序：程序有图形窗口</li></ol></li></ol></li></ul><p>两种程序的区<strong>别就是使用的链接库不同</strong>，C++默认是不支持图形功能的，要实现图形功能，必须调用系统api，所以两种项目必须有两个链接库。</p><p>当然，两种库是可以随时替换的，不一定创建的控制台程序，就一定要当做控制台程序来编写。</p><p>我们这门课用的是<strong>空项目</strong>，能直接体现出C++的语法，没有其它因素的干扰。用的是控制台的链接库。</p><ul><li><ol><li>vs程序的编译过程。很多人说vs的编译过程不利于新人成长，这个说法其实有一定道理，这就和vs的项目目录结构有关了。<ol><li>vs的项目目录是一个解决方案下包括多个项目，vs是以文件组成的项目为最小编译单元的。也就是说vs无法单独编译一个项目中的一个cpp文件，会给新手一定的困扰。</li></ol></li></ol></li></ul><p>这些在老家伙中理所当然，常常被忽略的东西，经常给萌新带来困惑。</p><h5 id="vs的debug功能简介："><a href="#vs的debug功能简介：" class="headerlink" title="vs的debug功能简介："></a>vs的debug功能简介：</h5><p>暂时我们只要会断点功能就可以了，需要知道的是，为了支持调试功能，编译和链    接必须添加很多额外的东西，所以使用debug功能，必须以调试的方式进行编译。</p><h2 id="Part2：C-的基本特性"><a href="#Part2：C-的基本特性" class="headerlink" title="Part2：C++的基本特性"></a>Part2：C++的基本特性</h2><h4 id="（-）程序的执行过程"><a href="#（-）程序的执行过程" class="headerlink" title="（*）程序的执行过程"></a>（*）程序的执行过程</h4><p>程序被执行后就被称为一个进程，一个进程可以被划分为很多区域，这门课我们只需要理解以下的四个区就可以了。</p><ol><li><strong>代码区与常量区</strong>：进程按照代码区的代码执行，真正的常量也存储在这里，比如“abc”字符串，“1”，“88”等数字。这些是真正的常量。再看一下const关键字。const只不过是让编译器将变量视为常量罢了，和真正的常量有本质上的区别。</li><li><strong>栈区</strong>：函数的执行所需的空间，注意，当函数执行完毕，函数对应的栈内存全部销毁。</li><li><strong>堆区</strong>：进程用来灵活分配内存的地方，只有手动释放时才会销毁内存。</li><li><strong>静态变量区</strong>：用来存储静态变量与全局变量的区域<ol><li>静态变量：我们常常需要一些局部作用范围，生命周期却很长的变量</li><li>全局变量：重要性就不必说了，在c语言程序中经常用到，但在C++中不推荐使用，因为会破坏封装性。</li></ol></li></ol><p>具体的存储方式如图所示：</p><p><img src="https://pic.imgdb.cn/item/66ba0138d9c307b7e92e27d4.jpg" alt="code"></p><p>接下来用代码演示一下这几个区域。</p><p>堆区和栈区，是程序运行的主要地方。我们用一个最简单的程序来显示栈的用途。</p><p><strong>代码演示：</strong></p><p>至于堆区，主要意义在于灵活的生命周期，同样是刚才那个例子。</p><p>如果需要创建的对象有几十M，每次调用函数都需要创建一个这么大的对象，再复制到对应的容器中，那就太过耗费内存了。而且栈内存非常的小，通常不超过8M。</p><p>而使用堆内存，每调用一次函数就可以在堆内存中创建一个对象，容器中只要存储指针就可以了，极大的提高了程序效率。</p><p><strong>代码演示：</strong></p><p>而静态变量区：</p><p>有很多情况下，我们需要作用范围局限在函数之内，但生命周期却很长的变量，比如统计一个函数被调用的次数。</p><p>总结：栈区是函数执行的区域，堆区是函数内灵活分配内存的地方，二者缺一不可。</p><p>有很多人问为什么不能只在栈上运行程序，因为当函数运行结束时，栈是要销毁的，其上分配的内存全部失效。</p><p>也不能只在堆上运行程序，因为堆的唯一寻址方式就是指针，如果没有栈，根本无法使用堆。</p><p>提一下：栈区远远小于堆区，一般不超过8M，所以主要的内容都在对堆区上。堆区很大，虚拟内存剩下的都是堆区。</p><p><strong>注意：这节课对内存的划分比较粗糙，但新手理解到这里完全没有问题，这门课也够用了。</strong></p><p>程序执行的细节，还有剩下的区域是干什么的，我打算出一门叫做C++内存详解的课程，里面会详细讲解。包括pe文件头，内核区等。</p><h4 id="（-）new关键字及内存泄露"><a href="#（-）new关键字及内存泄露" class="headerlink" title="（*）new关键字及内存泄露"></a>（*）new关键字及内存泄露</h4><ol><li>new关键字是C++用来动态分配内存的主要方式。</li></ol><p><strong>代码演示：</strong></p><p>new可以直接分配单个变量的内存，也可以分配数组。</p><p>在分配单个对象的内存时。</p><p>当对象是普通变量时，可以分配对应的内存</p><p>当对象是类对象时，会调用构造函数，如果没有对应的构造函数，就会报错。</p><p>在分配数组对象内存时：</p><p>对于普通变量：可以使用“（）”将所有对象全部初始化为0。</p><p>对于类对象，有没有“（）”都一样，均使用默认构造函数，如果没有默认构造函数就会报错。</p><ol><li>内存泄露介绍：内存泄露是经常出现的常见bug。</li></ol><p><strong>代码演示：</strong></p><p>内存泄露会导致堆内存的逐渐被占用，最终内存用完程序崩溃。常见的情况就是项目测试没问题，上线几天就炸了。然后就会非常麻烦，排查困难，损失很大。</p><p><strong>内存泄露是最严重的错误之一，程序不怕报错，就怕一开始运行的好好的，突然就出现了莫名其妙的错误。</strong></p><p>这句话也引出了后面的两个部分。</p><p><strong>Part4的智能指针</strong>可以非常好的避免内存泄露的问题。</p><p><strong>Part9的异常处理</strong>部分可以恰当的处理程序出现的异常，让程序有错误就立马处理，或直接终止进程，或忽略，不要让异常莫名其妙。这是程序设计的重要理念。</p><h4 id="命名空间"><a href="#命名空间" class="headerlink" title="命名空间"></a>命名空间</h4><p>C++经常需要多个团队合作来完成大型项目。多个团队就常常出现起名重复的问题，C++就提供了命名空间来解决这个问题。</p><p>比如团队A和团队B都需要定义一个叫做Test的类。</p><p><strong>这里用代码简单演示：</strong></p><p>顺便提两点：<br>    命名空间的实现原理，C++最后都要转化为C来执行程序。在namespace A中定义的Test类，其实全名是A::Test。</p><p>C++所有特有的库（指c没有的库）,都使用了std的命名空间。比如最常用的iostream。</p><p>using关键字设计的目的之一就是为了简化命名空间的。using关键字在命名空间方面主要有两种用法。</p><ol><li>using 命名空间：：变量名。这样以后使用此变量时只要使用变量名就可以了。举个例子。</li><li>using namspce 命名空间。这样，每一个变量都会在该命名空间中寻找。举个例子。</li></ol><p><strong>（*）所以，头文件中一定不能使用using关键字。会导致命名空间的污染。</strong></p><p><strong>还是用刚才的代码演示。</strong></p><h4 id="（-）C-的标准输入输出简介"><a href="#（-）C-的标准输入输出简介" class="headerlink" title="（*）C++的标准输入输出简介"></a>（*）C++的标准输入输出简介</h4><p>输入输出简单来说就是数据在输入设备，内存，硬盘，输出设备之间移动的过程。</p><p>c语言设定了很多不相关的函数还实现这些过程。</p><p>比如printf就是让数据从内存到显示屏（显示屏就是输出设备）。scanf就是让数据从键盘（键盘是输入设备）到内存。此外还有从内存到磁盘的文件操作函数。</p><p>c语言的函数虽然简单方便，但彼此之间没有关联。C++有了继承功能，可以让子类与父类之间有关联性，极大的提高各种输入输出功能之间的耦合性。</p><p>于是C++用继承功能重写了输入输出功能，这就是io库，io库引入了“流”的概念，数据从一个地方到另一个地方，原本地方的数据就没了，叫做流很贴切。</p><p>io库是一个很大的部分，但现阶段我们只要会使用输入输出流，cout和cin就可以了。</p><p>cout可以让数据从内存流到输出设备，cin可以让数据从输入设备流到内存。</p><p><strong>代码演示：</strong></p><p><strong>等到Part7，io库会详细讲解。</strong></p><h4 id="4-5-const关键字介绍"><a href="#4-5-const关键字介绍" class="headerlink" title="4.5. const关键字介绍"></a>4.5. const关键字介绍</h4><p><strong>首先说一下：这一课是后面加的，原先的目录上没有这一课，所以就叫做4.5课了。后面觉得讲一下const关键字还是很有意义的。很多人对const修饰的变量和真正的常量分不清。</strong></p><p>const关键字介绍：const是让编译期将变量视为常量，用const修饰的变量和真正的常量有本质的区别。</p><p>代码演示：</p><ol><li>真正的常量存储在常量区或代码区，比如“abcdefg”这个字符串就存储在常量区，而“3”，“100”这些数字就存储在代码区中，这些都是真正的常量，无法用任何方式修改。</li><li>const修饰的变量仍然存储在堆区或栈区中，从内存分布的角度讲，和普通变量没有区别。const修饰的变量并非不可更改的，C++本身就提供了mutable关键字（这个关键字在Part3就会讲的）用来修改const修饰的变量，从汇编的角度讲，const修饰的变量也是可以修改的。</li></ol><h4 id="（-）-auto关键字的使用"><a href="#（-）-auto关键字的使用" class="headerlink" title="（**） auto关键字的使用"></a>（**） auto关键字的使用</h4><p>auto是C++11新加入的关键字，就是为了简化一些写法。</p><p><strong>代码演示：</strong></p><p>使用auto推断类型确实简单方便，但有个基本要求，就是在使用auto时清楚的知道编译器会给auto推断出什么类型。</p><p>为了学习auto的类型推断，我使用一个boost库来确定变量的具体类型。至于boost是什么，这里就不介绍了，大家可以去百度一下。</p><p>boost库的类型推断更加灵活方便，直观。而且Part10讲万能引用，完美转发时boost也是必须使用的，所以这里就提前使用boost了。其实这里采用vs默认提供的类型提示功能也可以。</p><p>首先下载，安装boost库，就直接视频演示了，不在文档中描述了。</p><p>这两个命令执行完毕，boost库也就编译好了。boost库很大，可以选择编译自己想要的模块，我就直接全部编译了。boost是很复杂的，不是几句话能说清楚，要深入理解可以去官网学习。</p><p>两个库，每一个编译都需要十几分钟，所以视频就暂停了。</p><p>这两个命令我放在一个boostCommand.txt的文件中，这个文件已经放在最终的文件包中。</p><p>auto有几个点需要注意：</p><p><strong>有些不好理解，可以多看几遍，或者带着问题学习下面的课程，Part2的所有知识都是反复用到的。</strong></p><ol><li>auto只能推断出类型，引用不是类型，所以auto无法推断出引用，要使用引用只能自己加引用符号。</li></ol><p><strong>代码演示：</strong></p><ol><li>auto关键字在推断引用的类型时：会直接将引用替换为引用指向的对象。其实引用一直是这样的，引用不是对象，任何使用引用的地方都可以直接替换成引用指向的对象。</li></ol><p><strong>代码演示：</strong></p><ol><li>auto关键字在推断类型时，如果没有引用符号，会忽略值类型的const修饰，而保留修饰指向对象的const，典型的就是指针。<strong>可能有些不好理解，看看代码就好说了。3和4的主要作用对象就是指针。</strong></li></ol><p><strong>代码演示：</strong></p><ol><li>auto关键字在推断类型时，如果有了引用符号，那么值类型的const和修饰指向对象的const都会保留。</li></ol><p><strong>代码演示：</strong></p><p>其实3，4为什么会出现这种情况，因为在传递值时，修改这个值并不会对原有的值造成影响。而传递引用时，修改这个值会直接对原有的值造成影响。</p><p>确实不太好理解，尤其是基础不扎实的人。不懂了可以多问问我。</p><ol><li>当然，我们可以在前面加上const，这样永远都有const的含义。</li></ol><p><strong>代码演示：</strong></p><ol><li>auto不会影响编译速度，甚至会加快编译速度。因为编译器在处理XX a = b时，当XX是传统类型时，编译期需要检查b的类型是否可以转化为XX。当XX为auto时，编译期可以按照b的类型直接给定变量a的类型，所以效率相差不大，甚至反而还有提升。</li><li>（*）最重要的一点，就是auto不要滥用，对于一些自己不明确的地方不要乱用auto，否则很可能出现事与愿违的结果，使用类型应该安全为先。</li><li>（*）auto主要用在与模板相关的代码中，一些简单的变量使用模板常常导致可读性下降，经验不足还会导致安全性问题。</li></ol><p><strong>注意：auto的用法这里大致了解就可以了，Part10会有一节详细的讲auto的类型推断的，这节课是没有涉及右值引用的，那里会将这一部分。而且现在没有讲模板，难以讲出auto关键字的主要用法。</strong></p><h4 id="（-）静态变量，指针和引用"><a href="#（-）静态变量，指针和引用" class="headerlink" title="（*）静态变量，指针和引用"></a>（*）静态变量，指针和引用</h4><p>变量的存储位置有三种，分别是静态变量区，栈区，堆区。</p><p>静态变量区在编译时就已经确定地址，存储全局变量与静态变量。</p><p><strong>代码演示：</strong></p><p>指针都是存储在栈上或堆上，不管在栈上还是堆上，都一定有一个地址。</p><p>本质上说，指针和普通变量没有区别。</p><p>在32位系统中，int变量和指针都是32位。指针必须和“&amp;”，“*”这两个符号一起使用才有意义。</p><p>&amp;a代表的a这个变量的地址，a代表的a对应地址存储的值，*a代表对应地址存储的值作为地址对应的值，这句话可能不好理解。</p><p><strong>代码演示：</strong></p><p>所以指针才可以灵活的操作内存，但这也带来了严重的副作用，比如指针加加减减就可以操作内存，所以引用被发明了，引用就是作用阉割的指针（可以视为“类型*const”，所以引用必须上来就赋初值，不能设置为空），编译器不将其视作对象，操作引用相当于操作引用指向的对象。<strong>也就从根本是杜绝了引用篡改内存的能力。</strong></p><p><strong>新手如果不懂内存，就直接将引用视为指向对象的别名就可以了。</strong></p><p><strong>要真正理解指针，引用是需要学习c语言对应汇编的，只要懂了汇编，一目了然。不懂汇编就只能这样理解了。</strong></p><h4 id="（-）左值，右值，左值引用，右值引用"><a href="#（-）左值，右值，左值引用，右值引用" class="headerlink" title="（**）左值，右值，左值引用，右值引用"></a>（**）左值，右值，左值引用，右值引用</h4><p><strong>首先说一点：在学这节课时不要去想左值，右值，左值引用，右值引用有什么意义。以后会反复使用的，这些概念都很重要。</strong></p><h5 id="左值和右值"><a href="#左值和右值" class="headerlink" title="左值和右值"></a>左值和右值</h5><p>左值右值从C++11开始就是一个很重要的概念了，但想要真正理解左值，右值不是一件容易的事。</p><p>尤其新人要彻底理解左值右值就更加困难了，所以我推荐新手将这些概念死死记住，带着疑惑学习下面的课程，积累的多了，自然就明白了。后面左值，右值的概念会被反复提及。</p><p><strong>C++任何一个对象要么是左值，要么是右值。</strong></p><p>比如int i = 10，i和10都是对象</p><p><strong>左值：拥有地址属性的对象就叫左值，</strong>左值来源于c语言的说法，能放在“=”左面的就是左值，注意，左值也可以放在“=”右面。</p><p><strong>右值：不是左值的对象就是右值。或者说无法操作地址的对象就叫做右值。</strong>一般来说，判断一个对象是否为右值，就看它是不是左值，有没有地址属性，不是左值，那就是右值。</p><p><strong>比如临时对象，就都是右值，临时对象的地址属性无法使用。</strong></p><p><strong>注意：左值也可以放在“=”右面，但右值绝对不可以放在等号左面</strong></p><p><strong>接下来就是大量举例了，说明那些是左值，哪些是右值。</strong></p><p><strong>代码演示。</strong></p><h5 id="引用的分类"><a href="#引用的分类" class="headerlink" title="引用的分类"></a>引用的分类</h5><ul><li><ol><li>普通左值引用：就是一个对象的别名，只能绑定左值，无法绑定常量对象。</li><li>const左值引用：可以对常量起别名，可以绑定左值和右值。</li><li><strong>右值引用</strong>（暂时不要去管右值引用有什么用，只要记住语法就可以了，实际用途下一课就会讲到）：只能绑定右值的引用。</li><li>万能引用：这节课不讲，等到part10涉及模板时再讲，这是一个很重要，但需要模板等基础的概念。</li></ol></li></ul><p><strong>代码演示：</strong></p><h4 id="（-）move函数，临时对象"><a href="#（-）move函数，临时对象" class="headerlink" title="（**）move函数，临时对象"></a>（**）move函数，临时对象</h4><p><strong>首先说一点：这节课是第7课的继续，是对右值基础的补充，右值的具体应用要等到Part3的移动语义那里才能完全体现。</strong></p><h5 id="move函数："><a href="#move函数：" class="headerlink" title="move函数："></a>move函数：</h5><ul><li><ol><li>右值看重对象的值而不考虑地址，move函数可以对一个左值使用，使操作系统不再在意其地址属性，将其完全视作一个右值。</li><li>move函数让操作的对象失去了地址属性，<strong>所以我们有义务保证以后不再使用该变量的地址属性，简单来说就是不再使用该变量，因为左值对象的地址是其使用时无法绕过的属性。</strong></li></ol></li></ul><p><strong>代码演示：</strong></p><p><strong>move函数的具体意义现阶段无需在意，Part3讲移动语义时会体现move函数意义的。</strong></p><h5 id="临时对象："><a href="#临时对象：" class="headerlink" title="临时对象："></a>临时对象：</h5><p><strong>右值都是不体现地址的对象。那么，还有什么能比临时对象更加没有地址属性呢？右值引用主要负责处理的就是临时对象。</strong></p><p>程序执行时生成的中间对象就是临时对象，注意，所有的临时对象都是右值对象，因为临时对象产生后很快就可能被销毁，使用的是它的值属性。</p><p><strong>代码演示：</strong></p><h5 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h5><p>右值和右值引用这里只介绍语法，等到Part3的第11课，会学习移动构造，右值引用会真正体现出提高程序性效率的功能。</p><h4 id="（-）可调用对象"><a href="#（-）可调用对象" class="headerlink" title="（**）可调用对象"></a>（**）可调用对象</h4><p>如果一个对象可以使用调用运算符“()”，()里面可以放参数，这个对象就是可调用对象。</p><p>（*）<strong>注意：可调用对象的概念新手只要记住就可以了，后面会反复用到，这个概念很重要。</strong></p><p>可调用对象的分类：</p><h5 id="函数："><a href="#函数：" class="headerlink" title="函数："></a>函数：</h5><p>函数自然可以调用()运算符，是最典型的可调用对象。</p><h5 id="仿函数："><a href="#仿函数：" class="headerlink" title="仿函数："></a>仿函数：</h5><p>具有operator()函数的类对象（<strong>知道有这么个东西就可以了，具体实现过程Part3会讲</strong>），此时类对象可以当做函数使用，因此称为仿函数。</p><h5 id="lambda表达式："><a href="#lambda表达式：" class="headerlink" title="lambda表达式："></a>lambda表达式：</h5><p>就是匿名函数，普通的函数在使用前需要找个地方将这个函数定义，于是C++提供了lambda表达式，需要函数时直接在需要的地方写一个lambda表达式，省去了定义函数的过程，增加开发效率。</p><p><strong>注意：lambda表达式很重要，现代C++程序中，lambda表达式是大量使用的。</strong></p><p><strong>lambda表达式的格式：</strong>最少是“[] {}”，完整的格式为“[] () -&gt;ret {}”。</p><p>代码演示：</p><p>lambda各个组件介绍</p><ol><li>[]代表捕获列表：表示lambda表达式可以访问前文的哪些变量。<ol><li>[]表示不捕获任何变量。</li><li>[=]：表示按值捕获所有变量。</li><li>[&amp;]：表示按照引用捕获所有变量。</li></ol></li></ol><p>=，&amp;也可以混合使用，比如</p><ul><li><ol><li>[=, &amp;i]：表示变量i用引用传递，除i的所有变量用值传递。</li><li>[&amp;, i]：表示变量i用值传递，除i的所有变量用引用传递。</li></ol></li></ul><p>当然，也可以捕获单独的变量</p><ul><li><ol><li>[i]：表示以值传递的形式捕获i</li><li>[&amp;i]：表示以引用传递的方式捕获i</li></ol></li></ul><ol><li>()代表lambda表达式的参数，函数有参数，lambda自然也有。</li><li>-&gt;ret表示指定lambda的返回值，如果不指定，lambda表达式也会推断出一个返回值的。</li><li>{}就是函数体了，和普通函数的函数体功能完全相同。</li></ol><p>l<strong>ambda后面会广泛使用，现在只要理解基础就可以了。</strong></p><p>C++的可调用对象主要就这三个，当然，这三个也可以衍生出很多写法。</p><p>最常见的就是函数指针，函数指针的本质就是利用指针调用函数，本质还是函数。</p><p>函数指针要细分也可以分为指向类成员函数的指针，指向普通函数的指针。</p><p>这些在这里就不演示了。</p><h2 id="Part3：类"><a href="#Part3：类" class="headerlink" title="Part3：类"></a>Part3：类</h2><p><strong>首先提一下：类的权限修饰就不讲了，相信大家对于这个已经很了解了，如果不了解，就百度一下吧，非常简单，易懂，直接问我也可以。</strong></p><h4 id="（-）类介绍，构造函数，析构函数"><a href="#（-）类介绍，构造函数，析构函数" class="headerlink" title="（*）类介绍，构造函数，析构函数"></a>（*）类介绍，构造函数，析构函数</h4><ol><li>类介绍：<ol><li>面试的时候经常会听到一个问题，谈一下对面向对象和面向过程的理解。我来说一下我对这两个概念的理解<ol><li>面向对象和面向过程是一个相对的概念。</li><li>面向过程是按照计算机的工作逻辑来编码的方式，最典型的面向过程的语言就是c语言了，c语言直接对应汇编，汇编又对应电路。</li><li>面向对象则是按照人类的思维来编码的一种方式，C++就完全支持面向对象功能，可以按照人类的思维来处理问题。</li><li>举个例子，要把大象装冰箱，按照人类的思路自然是分三步，打开冰箱，将大象装进去，关上冰箱。</li></ol></li></ol></li></ol><p>要实现这三步，我们就要首先有人，冰箱这两个对象。人有给冰箱发指令的能    力，冰箱有能够接受指令并打开或关闭门的能力。</p><p>但是从计算机的角度讲，计算机只能定义一个叫做人和冰箱的结构体。人有手这个部位，冰箱有门这个部位。然后从天而降一个函数，是这个函数让手打开了冰箱，又是另一个函数让大象进去，再是另一个函数让冰箱门关上。</p><p>从开发者的角度讲，面向对象显然更利于程序设计。用面色过程的开发方式，程序一旦大了，各种从天而降的函数会非常繁琐，一些用纯c写的大型程序，实际上也是模拟了面向对象的方式。</p><p>那么，如何用面向过程的c语言模拟出面向对象的能力呢？类就诞生了，在类中可以定义专属于类的函数，让类有了自己的动作。回到那个例子，人的类有了让冰箱开门的能力，冰箱有了让人打开的能力，不再需要天降神秘力量了。</p><p><strong>总结：到现在，大家应该可以理解类的重要性了吧，这是面向对象的基石，也可以说是所有现代程序的基石。</strong></p><ol><li>构造函数：<br>类再怎么吹，它也是通过面向过程的机器实现的，类相当于定义了一个新类型，该类型生成在堆或栈上的对象时内存排布和c语言相同。但是c++规定，C++有在类对象创建时就在对应内存将数据初始化的能力，这就是构造函数。</li></ol><p><strong>用excel表格演示一下：</strong></p><p>构造函数有以下类型。</p><ol><li>普通构造函数：写法代码演示</li><li>复制构造函数：用另一个对象来初始化对象对应的内存，代码演示</li><li>移动构造函数：也是用另一个对象来初始化对象，具体内容会在Part3第13节详细讲解。</li><li>默认构造函数：当类没有任何构造函数时，编译期会为该类生成一个默认的的构造函数，在最普通的类中，默认构造函数什么都没做，对象对应的内存没有被初始化。</li></ol><p><strong>代码演示。</strong></p><p>总结：构造函数就是C++提供的<strong>必须有的</strong>在对象创建时初始化对象的方法，（默认的什么都不做也是一种初始化的方式）</p><ol><li>析构函数：</li></ol><p>析构函数介绍：当类对象被销毁时，就会调用析构函数。栈上对象的销毁时机就是函数栈销毁时，代码演示。堆上的对象销毁时机就是该堆内存被手动释放时，如果用new申请的这块堆内存，那调用delete销毁这块内存时就会调用析构函数。</p><p><strong>代码演示：</strong></p><p>总结，当类对象销毁时有一些我们必须手动操作的步骤时，析构函数就派上了用场。所以，几乎所有的类我们都要写构造函数，析构函数却未必需要。</p><h4 id="（-）this，常成员函数与常对象"><a href="#（-）this，常成员函数与常对象" class="headerlink" title="（*）this，常成员函数与常对象"></a>（*）this，常成员函数与常对象</h4><ol><li>this关键字：<ol><li>this是什么：<ol><li>编译器将this解释为指向函数所作用的对象的指针，这句话新手有些不好理解，用代码演示一下就好说了。C++类的本质就是C语言的结构体外加几个类外的函数，C++最后都要转化为C语言来实现，类外的函数就是通过this来指向这个类的。</li></ol></li></ol></li></ol><p><strong>代码演示：</strong></p><ul><li><ul><li><ol><li>当然，这么说并非完全准确，this是一个关键字，只是我们将它当做指针理解罢了。</li></ol></li></ul></li></ul><p>this有很多功能是单纯的指针无法满足的。比如每个类函数的参数根本没有名    叫this的指针。这不过是编译器赋予的功能罢了。</p><ol><li>常成员函数和常对象</li></ol><p><strong>首先说一下：常成员函数和常对象很多人并不在意，确实，都写普通变量也可以。但是，我还是要提一点，在大型程序中，尽量加上const关键字可以减少很多不必要的错误。</strong></p><p><strong>这一点，开发过大型程序的人应该深有体会，没开发过大型程序的人也不必在意，记住多用const，这是一个很好的习惯。</strong></p><ul><li><ol><li>const关键字含义：普通的const在Part2的第4.5节就已经讲完了。所以这里说一下<strong>常成员函数和常对象。</strong></li></ol></li></ul><p>常成员函数就是无法修改成员变量的函数。可以理解为将this指针指向对象用const修饰的函数。</p><p>常对象就是用const修饰的对象，定义好之后就再也不需要更改成员变量的值了。常对象在大型程序中还是很有意义的。</p><p><strong>代码演示：</strong></p><ul><li><ol><li>常成员函数注意事项：</li></ol></li></ul><p>因为类的成员函数已经将this指针省略了，只能在函数后面加const关键字来实现无法修改类成员变量的功能了</p><ul><li><ul><li><ol><li>注意：常函数无法调用了普通函数，否则常函数的这个“常”字还有什么意义。</li><li><strong>成员函数能写作常成员函数就尽量写作常成员函数，可以减少出错几率。</strong></li><li>同名的常成员函数和普通成员函数是可以重载的，常量对象会优先调用常成员函数，普通对象会优先调用普通成员函数</li></ol></li></ul></li></ul><p><strong>代码演示。</strong></p><ul><li><ol><li>常对象注意事项：<ol><li>常对象不能调用普通函数，这一点之前其实已经讲过了。</li><li>常函数在大型程序中真的很重要，很多时候我们都需要创建好就不再改变的对象。</li></ol></li><li>总结：<strong>再说一遍，毕竟重要的话说三遍吗！常成员函数和常对象要多用，这真的是一个非常好的习惯，写大项目可以少出很多bug，</strong></li></ol></li></ul><h4 id="inline，mutable，default，delete"><a href="#inline，mutable，default，delete" class="headerlink" title="inline，mutable，default，delete"></a>inline，mutable，default，delete</h4><p><strong>这一节是Part3少有的不带“*”的课程。</strong></p><p><strong>inline和mutable只要知道有这么个关键字就可以了。</strong></p><p><strong>default和delete关键字是需要掌握的，但是比较简单，也就放在这里了。</strong></p><ol><li>inline关键字<ol><li>inline关键字的有什么作用：<ol><li>在函数声明或定义中函数返回类型前加上关键字inline就可以把函数指定为内联函数。关键字inline必须与函数定义放在一起才能使函数成为内联，仅仅将inline放在函数声明前不起任何作用。</li><li>内联函数的作用，普通函数在调用时需要给函数分配栈空间以供函数执行，压栈等操作会影响成员运行效率，于是C++提供了内联函数将函数体放到需要调用函数的地方，用空间换效率。</li></ol></li><li>i<strong>nline关键字的注意事项：inline关键字只是一个建议，开发者建议编译器将成员函数当做内联函数，一般适合搞内联的情况编译器都会采纳建议。</strong></li><li>Inline关键字的总结。使用inline关键字就是一种提高效率，但加大编译后文件大小的方式，<strong>现在随着硬件性能的提高，inline关键字用的越来越少了</strong>。</li></ol></li><li>mutable关键字<ol><li>mutable关键字的作用：<ol><li>Mutable意为可变的，与const相对，被mutable修饰的成员变量，永远处于可变的状态，即便处于一个常函数中，该变量也可以被更改。</li></ol></li></ol></li></ol><p><strong>代码演示：</strong></p><p><strong>这个关键字在现代C++中使用情况并不多，一般来说只有在统计函数调用次数时才会用到。</strong></p><ul><li><ol><li>mutable关键字的注意事项<ol><li>mutable是一种万不得已的写法，一个程序不得不使用mutable关键字时，可以认为这部分程序是一个糟糕的设计。</li><li>mutable不能修饰静态成员变量和常成员变量。</li></ol></li><li>总结：mutable关键字是一种没有办法的办法，设计时应该尽量避免，只有在统计函数调用次数这类情况下才推荐使用。这个关键字也称不上是重点。</li></ol></li></ul><ol><li>default关键字<ol><li>default关键字的作用：default关键字的作用很简单。<ol><li>在编译时不会生成默认构造函数时便于书写。</li><li>也可以对<strong>默认复制构造函数，默认的赋值运算符和默认的析构函数</strong>使用，表示使用的是系统默认提供的函数，这样可以使代码更加明显。</li><li><strong>现代C++中，哪怕没有构造函数，也推荐将构造函数用default关键字标记，可以让代码看起来更加直观，方便。</strong></li></ol></li></ol></li></ol><p><strong>代码演示：</strong></p><p><strong>总结：default关键字还是推荐使用的，在现代C++代码中，如果需要使用一些默认的函数，推荐用default标记出来。</strong></p><ol><li>delete关键字<ol><li>Delete关键字的作用：C++会为程序生成默认构造函数，默认复制构造函数，默认重载赋值运算符（重载部分会详细讲解）。</li></ol></li></ol><p>在很多情况下，我们并不希望这些默认的函数被生成，在C++11以前，只能有将此    函数声明为私有函数或是将函数只声明不定义两种方式。</p><p>C++11于是提供了delete关键字，只要在函数最后加上“=delete”就可以明确告诉    编译期不要默认生成该函数。</p><p><strong>代码演示：</strong></p><p><strong>总结：delete关键字还是推荐使用的，在现代C++代码中，如果不希望一些函数默认生成，就用delete表示，这个功能还是很有用的，比如在单例模式中，</strong></p><h4 id="友元类与友元函数"><a href="#友元类与友元函数" class="headerlink" title="友元类与友元函数"></a>友元类与友元函数</h4><p><strong>抱歉：我在录视频时看错课数了，这应该是第4课的，所以这节课就又当第4课，又当第5课了，下一课还是第六课：</strong></p><ol><li>友元的介绍：友元就是可以让另一个类或函数访问私有成员的简单写法。</li></ol><p><strong>代码演示：</strong></p><ol><li>注意：<ol><li>友元会破坏封装性，一般不推荐使用，所带来的方便写几个接口函数就解决了。</li><li><strong>(*)某些运算符的重载必须用到友元的功能，这才是友元的真正用途，具体怎么重载下一课就会讲。</strong></li></ol></li><li>总结：<strong>友元平常并不推荐使用，新手不要再纠结友元的语法了，只要可以用友元写出必须用友元的重载运算符就可以了，重载运算符下一课就会讲。</strong></li></ol><h4 id="（-）重载运算符"><a href="#（-）重载运算符" class="headerlink" title="（**）重载运算符"></a>（**）重载运算符</h4><p>重载运算符在整个C++中拥有非常重要的地位，这一节非常重要。</p><ol><li>重载运算符的作用：<ol><li>很多时候我们想让类对象也能像基础类型的对象一样进行作基础操作，比如“+”，“-”，“*”，“\”，也可以使用某些运算符“=”，“()”，“[]”,“&lt;&lt;”，“&gt;&gt;”。但是一般的类即使编译器可以识别这些运算符，类对象也无法对这些运算符做出应对，我们必须对类对象定义处理这些运算符的方式。</li><li>C++提供了定义这些行为的方式，就是“operator 运算符”来定义运算符的行为，operator是一个关键字，告诉编译器我要重载运算符了。</li></ol></li><li>注意：<ol><li>我们只能重载C++已有的运算符，所有无法将“**”这个运算符定义为指数的形式，因为C++根本没有“**”这个运算符。</li><li>C++重载运算符不能改变运算符的元数，“元数”这个概念就是指一个运算符对应的对象数量，比如“+”必须为“a + b”，也就是说“+”必须有两个对象，那么“+”就是二元运算符。比如“++”运算符，必须写为“a++”，也就是一元运算符。</li></ol></li><li>重载运算符举例</li></ol><p><strong>以下全部用代码演示：</strong></p><ul><li><ol><li>一元运算符重载<ol><li>“++”，“--”,</li><li>“[]”</li><li>“()”</li><li>“&lt;&lt;”，“&gt;&gt;”</li></ol></li><li>二元运算符重载<ol><li>“+”，“-”，“*”，“/”</li><li>“=”，</li><li>“&gt;”，“&lt;”，“==”</li></ol></li></ol></li></ul><p>至于唯一的三元运算符“?:”，不能重载</p><ul><li><ol><li>类类型转化运算符：“operator 类型”</li><li>特殊的运算符：new，delete，new[]，delete[]</li></ol></li></ul><p>注意：“=”类会默认进行重载，如果不需要可以用“delete关键字进行修饰”。</p><p><strong>总结：重载运算符非常重要，C++类中几乎都要定义各种各种的重载运算符。</strong></p><h4 id="（-）普通继承及其实现原理"><a href="#（-）普通继承及其实现原理" class="headerlink" title="（*）普通继承及其实现原理"></a>（*）普通继承及其实现原理</h4><p><strong>C++面向对象的三大特性：分装，继承，多态。分装就是类的权限管理，很简单，就不讲了。继承这节课讲，继承很重要，有些地方也是需要重点理解的。</strong></p><ol><li>C++继承介绍：C++非继承的类相互是没有关联性的，假设现在需要设计医生，教师，公务员三个类，需要定义很多重复的内容而且相互没有关联，调用也没有规律。如果这还算好，那一个游戏有几千件物品，调用时也要写几千个函数。这太要命了。于是继承能力就应运而生了。</li></ol><p><strong>代码演示：</strong></p><ol><li>C++继承原理：C++的继承可以理解为在创建子类成员变量之前先创建父类的成员变量，实际上，C语言就是这么模仿出继承功能的。</li></ol><p><strong>用excel表格演示一下：</strong></p><ol><li>C++继承的注意事项。<ol><li>C++子类对象的构造过程。先调用父类的构造函数，再调用子类的构造函数，也就是说先初始化父类的成员，再初始化子类的成员。</li><li>若父类没有默认的构造函数，子类的构造函数又未调用父类的构造函数，则无法编译。</li><li>C++子类对象的析构过程。先调用父类的析构函数，再调用子类的析构函数。</li></ol></li></ol><p><strong>演示一下：</strong></p><p>总结：面向对象三大特性的继承就这么简单，很多人觉得类继承很复杂，其实完全不是这样的，只要明白子类在内存上其实就相当于把父类的成员变量放在子类的成员变量前面罢了。构造和析构过程也是为了这个机制而设计的。</p><h4 id="（-）虚函数及其实现原理，override关键字"><a href="#（-）虚函数及其实现原理，override关键字" class="headerlink" title="（**）虚函数及其实现原理，override关键字"></a>（**）虚函数及其实现原理，override关键字</h4><ol><li>虚函数介绍：<ol><li>虚函数就是面向对象的第三大特点：多态。多态非常的重要，它完美解决了上一课设计游戏装备类的问题，我们可以只设计一个函数，函数参数是基类指针，就可以调用子类的功能。比如射击游戏，所有的枪都继承自一个枪的基类，人类只要有一个开枪的函数就可以实现所有枪打出不同的子弹。</li><li>父类指针可以指向子类对象，这个是自然而然的，因为子类对象的内存前面就是父类成员，类型完全匹配。（<strong>不要死记硬背，尽量理解原理</strong>）</li><li>当父类指针指向子类对象，且子类重写父类某一函数时。父类指针调用该函数，就会产生以下的可能<ol><li><strong>该函数为虚函数：父类指针调用的是子类的成员函数。</strong></li><li><strong>该函数不是虚函数：父类指针调用的是父类的成员函数。</strong></li></ol></li></ol></li></ol><p><strong>代码演示</strong>：</p><ol><li>虚函数的注意事项：<ol><li>子父类的虚函数必须完全相同，为了防止开发人员一不小心将函数写错，于是C++11添加了override关键字。</li></ol></li></ol><p><strong>代码演示：</strong></p><ul><li><ol><li><strong>(*) 父类的析构函数必须为虚函数：这一点很重要，当父类对象指向子类对象时，容易使独属于子类的内存泄露。会造成内存泄露的严重问题。</strong></li></ol></li></ul><p><strong>代码演示</strong></p><ol><li>overide关键字的作用：前面已经说过了，为了防止开发人员将函数名写错了，加入了override关键字。</li><li><strong>虚函数实现多态的原理介绍</strong><ol><li>动态绑定和静态绑定：<ol><li>静态绑定：程序在编译时就已经确定了函数的地址，比如非虚函数就是静态绑定。</li><li>动态绑定：程序在编译时确定的是程序寻找函数地址的方法，只有在程序运行时才可以真正确定程序的地址，比如虚函数就是动态绑定。</li></ol></li><li>虚函数是如何实现动态绑定的呢？<ol><li>每个有虚函数的类都会有一个虚函数表，对象其实就是指向虚函数表的指针，编译时编译器只告诉了程序会在运行时查找虚函数表的对应函数。每个类都会有自己的虚函数表，所以当父类指针引用的是子类虚函数表时，自然调用的就是子类的函数。</li></ol></li></ol></li></ol><p><strong>代码演示：</strong></p><ol><li>总结：虚函数是C++类的重要特性之一，很简单，但使用频率非常高，至于如何实现的也要掌握。</li></ol><h4 id="静态成员变量与静态函数"><a href="#静态成员变量与静态函数" class="headerlink" title="静态成员变量与静态函数"></a>静态成员变量与静态函数</h4><ol><li>静态成员变量：<ol><li>Part2的第六节课就讲过C语言的静态成员变量，在编译期就已经在静态变量区明确了地址，所以生命周期为程序从开始运行到结束，作用范围为与普通的成员变量相同。这些对于类的静态成员变量同样适用。</li></ol></li></ol><p><strong>代码演示：</strong></p><ul><li><ol><li>类的静态成员变量因为创建在静态变量区，所以直接属于类，也就是我们可以直接通过类名来调用，当然通过对象调用也可以。</li></ol></li></ul><p><strong>代码演示：</strong></p><ol><li>静态成员变量的注意项：<ol><li>静态成员变量必须在类外进行初始化，否则会报未定义的错误，不能用构造函数进行初始化。因为静态成员变量在静态变量区，只有一份，而且静态成员变量在编译期就要被创建，成员函数那都是运行期的事情了</li></ol></li><li>静态成员函数的特点：静态成员函数就是为静态成员变量设计的，就是为了维持封装性。</li></ol><p><strong>代码演示：</strong></p><h4 id="（-）纯虚函数"><a href="#（-）纯虚函数" class="headerlink" title="（*）纯虚函数"></a>（*）纯虚函数</h4><ol><li>纯虚函数介绍：<ol><li>还是那个枪械射击的例子，基础的枪类有对应的对象吗？没有。它唯一的作用就是被子类继承。</li><li>基类的openfire函数实现过程有意义吗？没有。它就是用来被重写的。</li><li>所以纯虚函数的语法诞生了，只要将一个虚函数写为纯虚函数，那么该类将被认为无实际意义的类，无法产生对象。纯虚函数也不用去写实际部分。写了编译期也会自动忽略。</li></ol></li></ol><p><strong>代码演示：</strong></p><ol><li>纯虚函数的注意事项：<ol><li>没什么注意事项，这个语法非常简单。</li></ol></li><li>总结：纯虚函数的特点就是语法简单，却经常使用，必会。</li></ol><h4 id="RTTI："><a href="#RTTI：" class="headerlink" title="RTTI："></a>RTTI：</h4><p><strong>RTTI使用频率不是很高，但仍然有一定的意义，应当掌握。</strong></p><ol><li>RTTI介绍：<ol><li>RTTI（Run Time Type Identification）即通过运行时类型识别，程序能够通过基类的指针或引用来检查这些指针或引用所指向的对象的实际派生类。</li><li>C++为了支持多态，C++的指针或引用的类型可能与它实际指向对象的类型不相同，这时就需要rtti去判断类的实际类型了，<strong>rtti是C++判断指针或引用实际类型的唯一方式。</strong></li></ol></li><li>RTTI的使用场景：<strong>可能有很多人会疑惑RTTI的作用，所以单独拿出来说一下。</strong><ol><li>异常处理：这是RTTI最主要的使用场景，具体作用在异常处理章节会详细讲解。</li><li>IO操作：具体作用等到IO章节会详细讲解。</li></ol></li><li>RTTI的使用方式：RTTI的使用过程就两个函数<ol><li>typeid函数：typeid函数返回的一个叫做type_info的结构体，该结构体包括了所指向对象的实际信息，其中name()函数就可以返回函数的真实名称。type_info结构体其他函数没什么用.</li></ol></li></ol><p>代码演示：</p><ul><li><ol><li>dynamic_cast函数：C++提供的将父类指针转化为子类指针的函数。</li></ol></li></ul><p>代码演示：</p><ol><li>RTTI的注意事项：<ol><li><strong>当使用typeid函数时，父类和子类必须有虚函数（父类有了虚函数，子类自然会有虚函数），否则类型判断会出错。</strong></li></ol></li><li>RTTI总结：就是C++在运行阶段判断对象实际类型的唯一方式。</li></ol><h4 id="多继承"><a href="#多继承" class="headerlink" title="多继承"></a>多继承</h4><p><strong>首先提一下：多继承了解一下就可以了。</strong></p><ol><li>多继承的概念<ol><li>就是一个类同时继承多个类，在内存上，该类对象前面依次为第一个继承的类，第二个继承的类，依次类推。</li></ol></li></ol><p><strong>代码演示：</strong></p><ol><li>多继承的注意点：<ol><li>多继承最需要注意的点就是重复继承的问题，这个问题下一个将会详细讲解。</li><li>多继承会使整个程序的设计更加复杂，平常不推荐使用。C++语言中用到多继承的地方主要就是借口模式。相较于C++，java直接取消了多继承的功能，添加了借口。</li></ol></li><li>多继承的总结：多<strong>继承这个语法虽然在某些情况下使代码写起来更加简洁，但会使程序更加复杂难懂，一般来说除了借口模式不推荐使用。</strong></li></ol><h4 id="虚继承及其实现原理"><a href="#虚继承及其实现原理" class="headerlink" title="虚继承及其实现原理"></a>虚继承及其实现原理</h4><ol><li>虚继承的概念：虚继承就是为了避免多重继承时产生的二义性问题。虚继承的问题用语言不好描述，但用代码非常简单，所以直接写代码了。</li></ol><p><strong>代码演示：</strong></p><ol><li>虚继承的实现原理介绍：<ol><li>使用了虚继承的类会有一个虚继承表，表中存放了父类所有成员变量相对于类的偏移地址。</li><li>按照刚才的代码，B1，B2类同时有一个虚继承表，当C类同时继承B1和B2类时，每继承一个就会用虚继承表进行比对，发现该变量在虚继承表中偏移地址相同，就只会继承一份。</li></ol></li><li>虚继承的注意点：没什么需要注意的，语法简单。</li><li>虚继承的总结：这个语法就是典型的语法简单，但在游戏开发领域经常使用的语法，其它领域使用频率会低很多。</li></ol><h4 id="（-）移动构造函数与移动赋值运算符"><a href="#（-）移动构造函数与移动赋值运算符" class="headerlink" title="（**）移动构造函数与移动赋值运算符"></a>（**）移动构造函数与移动赋值运算符</h4><ol><li>对象移动的概念：<ol><li>对一个体积比较大的类进行大量的拷贝操作是非常消耗性能的，因此C++11中加入了“对象移动”的操作</li><li>所谓的对象移动，其实就是把该对象占据的内存空间的访问权限转移给另一个对象。比如一块内存原本属于A，在进行“移动语义”后，这块内存就属于B了。</li></ol></li><li>移动语义为什么可以提高程序运行效率。因为我们的各种操作经常会进行大量的“复制构造”，“赋值运算”操作。这两个操作非常耗费时间。移动构造是直接转移权限，这是不是就快多了。</li></ol><p><strong>注意：在进行转移操作后，被转移的对象就不能继续使用了，所以对象移动一般都是对临时对象进行操作（因为临时对象很快就要销毁了）。</strong></p><p><strong>代码演示：</strong></p><p>注意这里的右值引用不能是const的，因为你用右值引用函数参数就算为了让其绑定到一个右值上去的！就是说这个右值引用是一定要变的，但是你一旦加了const就没法改变该右值引用了。</p><ol><li><strong>默认移动构造函数和默认移动赋值运算符</strong></li></ol><p>会默认生成移动构造函数和移动赋值运算符的条件：</p><p><strong>只有一个类没有定义任何自己版本的拷贝操作（拷贝构造，拷贝赋值运算符），且类的每个非静态成员都可以移动，系统才能为我们合成。</strong></p><p><strong>可以移动的意思就是可以就行移动构造，移动赋值。所有的基础类型都是可以移动的，有移动语义的类也是可以移动的。</strong></p><h2 id="Part4：智能指针"><a href="#Part4：智能指针" class="headerlink" title="Part4：智能指针"></a>Part4：智能指针</h2><h4 id="（-）智能指针概述"><a href="#（-）智能指针概述" class="headerlink" title="（*）智能指针概述"></a>（*）智能指针概述</h4><ol><li>为什么要有智能指针：在Part2的第二节课已经讲过，直接使用new和delete运算符极其容易导致内存泄露，而且非常难以避免。于是人们发明了智能指针这种可以自动回收内存的工具。</li><li>智能指针一共就三种：普通的指针可以单独一个指针占用一块内存，也可以多个指针共享一块内存。<ol><li>共享型智能指针：shared_ptr，同一块堆内存可以被多个shared_ptr共享。</li><li>独享型智能指针：unique_ptr，同一块堆内存只能被一个unique_ptr拥有。</li><li>弱引用智能指针：weak_ptr，也是一种共享型智能指针，可以视为对共享型智能指针的一种补充</li></ol></li><li><strong>（*）智能指针注意事项：</strong></li></ol><p><strong>智能指针和裸指针不要混用，接下来的几节课会反复强调这一点。（这一点太重要了，所以上来就提了）</strong></p><h4 id="（-）shared-ptr"><a href="#（-）shared-ptr" class="headerlink" title="（*）shared_ptr"></a>（*）shared_ptr</h4><ol><li><strong>shared_ptr的工作原理</strong><ol><li>我们在动态分配内存时，堆上的内存必须通过栈上的内存来寻址。也就是说栈上的指针（堆上的指针也可以指向堆内存，但终究是要通过栈来寻址的）是寻找堆内存的唯一方式。</li><li>所以我们可以给堆内存添加一个引用计数，有几个指针指向它，它的引用计数就是几，当引用计数为0是，操作系统会自动释放这块堆内存。</li></ol></li><li><strong>Shared_ptr的常用操作</strong><ol><li><strong>shared_ptr的初始化</strong><ol><li><strong>使用new运算符初始化</strong></li></ol></li></ol></li></ol><p><strong>代码演示：</strong></p><p>一般来说不推荐使用new进行初始化，因为C++标准提供了专门创建shared_ptr的函数“make_shared”，该函数是经过优化的，效率更高。</p><ul><li><ul><li><ol><li><strong>使用make_shared函数进行初始化：</strong></li></ol></li></ul></li></ul><p><strong>代码演示：</strong></p><p><strong>注意：千万不要用裸指针初始化shared_ptr，容易出现内存泄露的问题。</strong></p><ul><li><ul><li><ol><li><strong>当然使用复制构造函数初始化也是没有问题的。</strong></li></ol></li></ul></li></ul><p>代码演示:</p><ul><li><ol><li><strong>shared_ptr的引用计数：</strong></li></ol></li></ul><p>智能指针就是通过引用计数来判断释放堆内存时机的。</p><p>use_count()函数可以得到shared_ptr对象的引用计数。</p><p><strong>代码演示：</strong></p><ol><li><strong>智能指针可以像普通指针那样使用，”share_ptr”早已对各种操作进行了重载，就当它是普通指针就可以了。</strong></li></ol><p><strong>代码演示：</strong></p><ol><li><strong>Shared_ptr的常用函数</strong><ol><li>unique函数：判断该shared_ptr对象是否独占若独占，返回true。否则返回false。</li></ol></li></ol><p>代码演示：</p><ul><li><ol><li>reset函数：<ol><li>当reset函数有参数时，改变此shared_ptr对象指向的内存。</li><li>当reset函数无参数时，将此shared_ptr对象置空，也就是将对象内存的指针设置为nullptr。</li></ol></li></ol></li></ul><p>代码演示：</p><ul><li><ol><li><strong>get函数，强烈不推荐使用：</strong></li></ol></li></ul><p>代码演示：</p><p><strong>如果一定要使用，那么一定不能delete返回的指针。</strong></p><ul><li><ol><li>swap函数：交换两个智能指针所指向的内存<ol><li>std命名空间中全局的swap函数</li><li>shared_ptr类提供的swap函数</li></ol></li></ol></li></ul><ol><li><strong>关于智能指针创建数组的问题。</strong></li></ol><p><strong>代码演示：</strong></p><ol><li><strong>用智能指针作为参数传递时直接值传递就可以了。</strong>shared_ptr的大小为固定的8或16字节（也就是两倍指针的的大小，32位系统指针为4个字节，64位系统指针为8个字节，shared_ptr中就两个指针），所以直接值传递就可以了。</li></ol><p>代码演示：</p><ol><li><strong>shared_ptr总结：</strong>在现代程序中，当想要共享一块堆内存时，优先使用shared_ptr，可以极大的减少内存泄露的问题。</li></ol><h4 id="（-）weak-ptr"><a href="#（-）weak-ptr" class="headerlink" title="（*）weak_ptr"></a>（*）weak_ptr</h4><ol><li><strong>weak_ptr介绍：</strong><ol><li>这个智能指针是在C++11的时候引入的标准库，它的出现完全是为了弥补shared_ptr天生有缺陷的问题，其实shared_ptr可以说近乎完美。</li><li>只是通过引用计数实现的方式也引来了引用成环的问题，这种问题靠它自己是没办法解决的，所以在C++11的时候将shared_ptr和weak_ptr一起引入了标准库，用来解决循环引用的问题。</li></ol></li><li><strong>shared_ptr的循环引用问题：</strong></li></ol><ol><li><strong>weak_ptr的作用原理：</strong>weak_ptr的对象需要绑定到shared_ptr对象上，作用原理是weak_ptr不会改变shared_ptr对象的引用计数。只要shared_ptr对象的引用计数为0，就会释放内存，weak_ptr的对象不会影响释放内存的过程。</li></ol><p>重新回到刚才的代码：</p><ol><li>weak_ptr的总结：<strong>weak_ptr使用较少，就是为了处理shared_ptr循环引用问题而设计的。</strong></li></ol><h4 id="（-）unique-ptr"><a href="#（-）unique-ptr" class="headerlink" title="（*）unique_ptr"></a>（*）unique_ptr</h4><ol><li><strong>uniqe_ptr介绍：</strong>独占式智能指针，在使用智能指针时，我们一般优先考虑独占式智能指针，因为消耗更小。如果发现内存需要共享，那么再去使用“shared_ptr”。</li><li><strong>unique_ptr的初始化</strong>：和shared_ptr完全类似<ol><li>使用new运算符进行初始化</li></ol></li></ol><p>代码演示：</p><ul><li><ol><li>使用make_unique函数进行初始化</li></ol></li></ul><p>代码演示：</p><ol><li><strong>unique_ptr的常用操作</strong><ol><li>unque_ptr禁止复制构造函数，也禁止赋值运算符的重载。否则独占便毫无意义。、</li></ol></li></ol><p><strong>代码演示：</strong></p><ul><li><ol><li>unqiue_ptr允许移动构造，移动赋值。移动语义代表之前的对象已经失去了意义，移动操作自然不影响独占的特性。</li></ol></li></ul><p><strong>代码演示：</strong></p><ul><li><ol><li>reset函数：<ol><li>不带参数的情况下：释放智能指针的对象，并将智能指针置空。</li><li>带参数的情况下：释放智能指针的对象，并将智能指针指向新的对象。</li></ol></li></ol></li></ul><p><strong>代码演示：</strong></p><ol><li><strong>将unque_ptr的对象转化为shared_ptr对象，</strong>当unique_ptr的对象为一个右值时，就可以将该对象转化为shared_ptr的对象。</li></ol><p><strong>这个使用的并不多，需要将独占式指针转化为共享式指针常常是因为先前设计失误。</strong></p><p><strong>注意：shared_ptr对象无法转化为unique_ptr对象。</strong></p><p><strong>代码演示：</strong></p><h4 id="（-）智能指针的使用范围"><a href="#（-）智能指针的使用范围" class="headerlink" title="（**）智能指针的使用范围"></a>（**）智能指针的使用范围</h4><p>这节课一共就几句话，但仍然是两个（*），足以说明如何使用智能指针的重要性。</p><ol><li><strong>能使用智能指针就尽量使用智能指针，那么哪些情况属于不能使用智能指针的情况   呢？</strong></li></ol><p>有些函数必须使用C语言的指针，这些函数又没有替代，这种情况下，才使用普通的指针，其它情况一律使用智能指针。</p><p>必须使用C语言指针的情况包括：</p><ol><li><strong>网络传输函数</strong>，比如windows下的send，recv函数，只能使用c语言指针，无法替代.</li><li><strong>c语言的文件操作部分</strong>。这方面C++已经有了替代品，C++的文件操作完全支持智能指针，<strong>所以在做大型项目时，推荐使用C++的文件操作功能（Part7会详细讲解）。</strong></li></ol><p><strong>除了以上两种情况，剩下的均推荐使用智能指针。</strong></p><ol><li><strong>我们应该使用哪个智能指针呢？</strong></li><li><strong>优先使用unique_ptr，内存需要共享时再使用shared_ptr。</strong></li><li><strong>当使用shared_ptr时，如果出现了循环引用的情况，再去考虑使用weak_ptr。</strong></li><li><strong>总结：智能指针部分就这样了，东西真的不多，但都非常重要，很常用的。</strong></li></ol><h2 id="Part5：模板与泛型编程"><a href="#Part5：模板与泛型编程" class="headerlink" title="Part5：模板与泛型编程"></a>Part5：模板与泛型编程</h2><h4 id="（-）模板介绍，类模板与模板实现原理"><a href="#（-）模板介绍，类模板与模板实现原理" class="headerlink" title="（*）模板介绍，类模板与模板实现原理"></a>（*）模板介绍，类模板与模板实现原理</h4><ol><li><strong>模板的重要性</strong>：<strong>模板是C++最重要的模块之一，很多人对模板的重视不够，这一章一定要好好学，所有课时都是重点。</strong></li></ol><p><strong>C++的三大模块，面向过程，面向对象，模板与泛型。面向过程就是C语言，面向对象就是类，现在轮到模板与泛型了。</strong></p><ol><li><strong>模板的介绍：</strong><ol><li>模板能够实现一些其他语法难以实现的功能，但是理解起来会更加困难，容易导致新手摸不着头脑。</li><li>模板分为类模板和函数模板，函数模板又分为普通函数模板和成员函数模板。</li></ol></li><li><strong>类模板基础：</strong></li></ol><p>这节课讲一下类模板，函数模板下一课再讲</p><ul><li><ol><li>类模板的写法与使用十分固定</li></ol></li></ul><p><strong>代码演示：注意，这段代码非常有代表性，在下一课补完后，一定要掌握，多看几遍。</strong></p><ol><li><strong>模板的实现原理：</strong></li></ol><p>模板需要编译两次，在第一次编译时仅仅检查最基本的语法，比如括号是否匹配。等函数真正被调用时，才会真正生成需要的类或函数。</p><p>所以这直接导致了一个结果，就是不论是模板类还是模板函数，声明与实现都必须放在同一个文件中。因为在程序在编译期就必须知道函数的具体实现过程。如果实现和声明分文件编写，需要在链接时才可以看到函数的具体实现过程，这当然会报错。</p><p>于是人们发明了.hpp文件来存放模板这种声明与实现在同一文件的情况。</p><h4 id="（-）initializer-list与typename"><a href="#（-）initializer-list与typename" class="headerlink" title="（*）initializer_list与typename"></a>（*）initializer_list与typename</h4><ol><li>initializer_list的用法<ol><li>initializer_list介绍：initializer_list其实就是初始化列表，我们可以用初始化列表初始化各种容器，比如“vector”，“数组”。</li></ol></li></ol><p>代码演示：</p><ul><li><ol><li>这节课的主要任务是在上一课的代码中加入initializer_list。</li></ol></li></ul><p><strong>代码演示：</strong></p><ol><li>typename的用法<ol><li>在定义模板时表示这个一个待定的类型</li></ol></li></ol><p><strong>代码演示：</strong></p><ul><li><ol><li>在类外表明自定义类型时使用</li></ol></li></ul><p><strong>代码演示：</strong></p><p><strong>在C++的早期版本，为了减少关键字数量，用class来表示模板的参数，但是后来因为第二个原因，不得不引入typename关键字。</strong></p><h4 id="（-）函数模板，成员函数模板"><a href="#（-）函数模板，成员函数模板" class="headerlink" title="（*）函数模板，成员函数模板"></a>（*）函数模板，成员函数模板</h4><ol><li>普通函数模板的写法与类模板类似</li></ol><p><strong>代码演示：</strong></p><p><strong>在现代C++中，函数模板一直普遍使用，一定要掌握。</strong></p><ol><li>成员函数模板</li></ol><p><strong>代码演示：</strong></p><p>成员函数模板使用情况也不少，需要掌握的</p><h4 id="（-）默认模板参数"><a href="#（-）默认模板参数" class="headerlink" title="（*）默认模板参数"></a>（*）默认模板参数</h4><p>默认模板参数：</p><ol><li>默认模板参数是一个经常使用的特性，比如在定义vector对象时，我们就可以使用        默认分配器。</li><li>模板参数就和普通函数的默认参数一样，一旦一个参数有了默认参数，它之后的参        数都必须有默认参数<ol><li>函数模板使用默认模板参数</li></ol></li></ol><p><strong>代码演示：</strong></p><ul><li><ol><li>类模板使用模板参数</li></ol></li></ul><p><strong>代码演示：</strong></p><p>类模板使用模板参数的注意点：</p><h4 id="（-）模板的重载，全特化和偏特化"><a href="#（-）模板的重载，全特化和偏特化" class="headerlink" title="（*）模板的重载，全特化和偏特化"></a>（*）模板的重载，全特化和偏特化</h4><ol><li>模板的重载<ol><li>函数模板是可以重载的（类模板不能被重载），通过重载可以应对更加复杂的情况。比如在处理char*和string对象时，虽然都可以代表字符串，但char*在复制时直接拷贝内存效率明显更高，string就不得不依次调用构造函数了。所以在一些比较最求效率的程序中对不同的类型进行不同的处理还是非常有意义的。</li></ol></li></ol><p><strong>代码演示：</strong></p><p>其实函数模板的重载和普通函数的重载没有什么区别。</p><p>在讲完类模板的特化后就能知道重载和特化的区别了，这一点暂时不用在意。</p><ol><li>模板的特化<ol><li>模板特化的意义：函数模板可以重载以应对更加精细的情况。类模板不能重载，但可以特化来实现类似的功能。</li><li>模板的特化也分为两种，全特化和偏特化。模板的全特化：就是指模板的实参列表与与相应的模板参数列表一一对应。</li></ol></li></ol><p>这么说可能有些繁琐，直接看代码其实并不复杂，</p><p><strong>代码演示：</strong></p><ul><li><ol><li>模板的偏特化：偏特化就是介于普通模板和全特化之间，只存在部分类型明确化，而非将模板唯一化。</li></ol></li></ul><p><strong>代码演示：</strong></p><ul><li><ol><li><strong>其实对于函数模板来说，特化与重载可以理解为一个东西。</strong></li></ol></li></ul><p><strong>总结：函数模板的重载，类模板的特化。还是比较重要的知识点，应当掌握，在一些比较复杂的程序中，模板重载与特化是经常使用的。</strong></p><h2 id="Part6：stl标准库"><a href="#Part6：stl标准库" class="headerlink" title="Part6：stl标准库"></a>Part6：stl标准库</h2><h4 id="（-）stl介绍与6大模块介绍"><a href="#（-）stl介绍与6大模块介绍" class="headerlink" title="（*）stl介绍与6大模块介绍"></a>（*）stl介绍与6大模块介绍</h4><ol><li>stl的介绍：<ol><li>stl就是（standard template library）的简称，定义在std命名空间中，定义了C++常用的容器与算法等。</li></ol></li></ol><p>可以说stl极大的提高了我们的程序开发效率。</p><p><strong>在C++开发中，可以说：不会用stl的人，会用stl但不懂stl实现原理的人，既会使用stl，又懂得stl实现原理的人是完完全全的三个档次。</strong></p><ul><li><ol><li>泛型编程的概念：用模板进行编程，可以实现一些其它方式难以实现的功能，但对于新手来说，泛型编程可能会难以理解，摸不着头脑。</li></ol></li></ul><p>也就是说，模板是学习泛型编程的基础。</p><p><strong>注意：泛型编程不属于面向对象编程的范畴，泛型编程和面向对象编程是并列的。</strong></p><ul><li><ol><li>stl作为泛型编程的最典型代表，它实现了其它编程方式难以实现的效果，比如将整个模板库分为六个部分，每个部分可以单独设计。举个最简单的例子，vector和map在数据结构方面完全不一样，但stl可以设计出“迭代器”这个模块，让该模块可以在不同的数据结构中按照同样的方式运行。这种技术没有泛型编程是难以实现的。</li></ol></li></ul><ol><li>学习stl的注意事项<ol><li><strong>学习stl一定要有全局观念，不要局限于单个容器，重点在于明白六大组件之间的联系。</strong></li><li><strong>当然，如果只是单纯为了应付当前的业务，单独学一下某个容器的用法也没有问题。</strong></li></ol></li><li>SLT的六大容器介绍：<ol><li>容器（container）：是一种数据结构，也就是真正用来存储数据的地方。分为三类<ol><li>顺序式容器：</li><li>关联式容器：</li><li>无序式容器：其实无序式容器也是一种关联式容器，但是既然C++标准委员会将无序容器与关联式容器平行的列了出来，那么我们这里也就让无序式容器和关联式容器平行吧。</li></ol></li><li>迭代器（iterator）：提供了可以访问任何容器的方法。</li><li>算法（alogorithm）：用来操作容器中的数据的模板函数。</li><li>仿函数（functor）</li><li>适配器（adaptor）</li><li>分配器（allocator）</li></ol></li></ol><p>这一课只要知道有这六大模块就可以了。至于这六大模块是干什么的，后面慢慢介绍。</p><h4 id="（-）容器"><a href="#（-）容器" class="headerlink" title="（*）容器"></a>（*）容器</h4><p><strong>容器的各项操作我已经单独列出来的了，就在附页3。这里只介绍最核心的操作。</strong></p><p><strong>这门课就不讲基础的数据结构了，这些东西建议熟练之后用来提升自己。数组，链表，树，哈希表如果不明白，可以去百度一下，新手了解概念就可以了。</strong></p><ol><li>顺序容器（sequence container）：每个元素都有固定的位置，<strong>位置取决于插入时间和地点，与元素的值无关</strong><ol><li>vector：<strong>将元素置于一个动态数组中，可以随机存储元素（也就是用索引直接存取）。</strong></li></ol></li></ol><p>数组尾部添加或删除元素非常迅速。但在中部或头部就比较费时。</p><p><strong>代码演示：</strong></p><ul><li><ol><li>deque：“double end queue”的缩写，也就是双端队列。<strong>deque的实现相比于vector有些复杂，但本质仍然是优化过的动态数组，只不过相比于单纯的动态数组，在前面添加或删除元素非常快了。</strong></li></ol></li></ul><p><strong>可以随机存储元素。</strong>头部和尾部添加或删除元素都非常快（略慢与vector）。但在    中间插入元素比较费时（和vector差不多）。</p><p><strong>代码演示：</strong></p><ul><li><ol><li>list：本质就是链表，所以自然具有了链表的属性。</li></ol></li></ul><p><strong>不能随机存取元素（也就是list无法用索引存取元素）</strong>。在任何位置插入和删除元    素都比较迅速。（在任何位置插入删除元素的时间相同，在元素头部操作慢于deque，在元素尾部操作慢于deque和vector）</p><p><strong>代码演示：</strong></p><ul><li><ol><li>string：没什么好说的，就是把普通字符串封装了一下</li></ol></li></ul><p>代码演示：</p><ul><li><ol><li>forward_list：单项链表，简单来说就是受限的list，凡是list不支持的功能，它都不支持。做各种支持的操作效率都会高于list，最典型的就排序算法了，forword_list要优于list。<ol><li>ForwordList 只提供前向迭代器，而不是双向迭代器。因此它也不支持反向迭代器。</li><li>ForwordList不提供成员函数 size()。</li><li>ForwordList 没有指向最末元素的锚点。基于这个原因，不提供用以处理最末元素的成员 back(),push_back(),pop_back()。</li></ol></li></ol></li></ul><ol><li>关联容器（associated container）：<strong>元素位置取决于元素的值，和插入顺序无关。</strong><ol><li>set/multiset：使用“红黑树”实现，是一种高度平衡的二叉树，如果大家不了解红黑树，可以去百度一下。了解个大概就可以了。<strong>二叉树的本质决定了set/multiset的元素存取值取决于元素本身的值，和插入顺序无关。</strong></li></ol></li></ol><p>内部元素的值依据元素的值自动排列，与插入顺序无关。set内部相同数值的元素只能出现一次，multiset内部相同数值的元素可出现多次。容器用二叉树实现，便于查找。</p><p><strong>代码演示：</strong></p><ul><li><ol><li>map/multimap：使用“红黑树”实现，是一种高度平衡的二叉树。</li></ol></li></ul><p>内部元素是成对的“key/value”，也就是“键值/实值”，内部元素依据其键值自动排序，map内部相同的键值只能出现一次，multimap则可以出现多次。</p><p><strong>代码演示：</strong></p><ol><li>无序式容器（unordered container）：<ol><li>unordered_map/unordered_multimap：使用“哈希表”实现的，由于哈希表的特性，实现了真正的无序。如果不理解为什么使用“哈希表”就是真正无序的，可以去百度一下“哈希表”，或者干脆直接记住就可以了。</li></ol></li></ol><p>使用方法也是“key/value”，和map/multimap类似。</p><ul><li><ol><li>unordered_set/unorder_multiset：同样使用“哈希表”实现的。自然具有了哈希表实现的容器的特点。</li></ol></li></ul><p>使用方法和setl/multiset类似。</p><ol><li>关联式容器和无序式容器的对比：<ol><li><strong>关联式容器都是有序的，对于那些对顺序有要求的操作，关联式容器效率会高很多。（比如增加元素，删除元素）</strong></li><li><strong>无序容器都是真正的无序，在查找数据方面有着优势。（比如修改特定元素，查找元素）</strong></li><li><strong>从内存消耗的角度讲，无序容器要高于关联容器不过这并不重要。</strong></li></ol></li></ol><p><strong>一句话来说，如果从这两类容器中选一个使用的话。如果是增加，删除元素比较频繁，就使用关联式容器。如果修改元素，查找元素比较平凡，就使用无序容器。</strong></p><ol><li><strong>我们在处理数据时应该选择什么容器呢？</strong><ol><li><strong>在我们需要使用存储“key/value”的容器时，只能使用map/multimap/unoredered_map/unordered_multimap。如果增加删除频繁，就使用map/multimap，修改，查找频繁，就使用unordered_map/unoredered_multimap。</strong></li></ol></li></ol><p><strong>在真正的大型项目中，常常会对这两种容器进行测试，普通练习靠感觉就可以了</strong></p><ul><li><ol><li><strong>在处理普通元素：</strong><ol><li><strong>当元素需要频繁插入删除时，选择顺序容器。</strong><ol><li><strong>如果在尾部插入删除，选择vector</strong></li><li><strong>在头部，尾部插入删除，选择deque</strong></li><li><strong>在中间插入，删除，选择list</strong></li></ol></li><li><strong>当元素需要频繁查找时，选择.set/multiset/unorder_set/unorder_multiset。</strong><ol><li><strong>频繁增加，删除时，选set，</strong></li><li><strong>频繁查找，修改时，选ordered_set</strong></li></ol></li></ol></li></ol></li></ul><p><strong>我们发现，对于普通元素，容器的选择不怎么容易判断。</strong></p><p><strong>其实在真正的大型项目中，要对各种容器进行测试的，普通练习一般选择vector或set就可以了。这两个使用是比较频繁的，</strong></p><h4 id="（-）迭代器"><a href="#（-）迭代器" class="headerlink" title="（*）迭代器"></a>（*）迭代器</h4><ol><li>迭代器介绍：<strong>迭代器提供了一种可以顺序访问容器各个元素的方法，可以让我们无视不同容器存储方式的不同，用同一的方式访问数据。经过前面对容器的学习，相信大家已经体会到这一点了。</strong></li><li>迭代器的作用：能够让迭代器与容器，算法在设计，使用时互不干扰，又能无缝耦合起来。使用迭代器可以灵活操作各种容器算法，而不需要考虑不同容器间的差异。</li></ol><h4 id="（-）算法"><a href="#（-）算法" class="headerlink" title="（*）算法"></a>（*）算法</h4><ol><li>stl的算法可以分为九个种类，具体有什么已经在“<strong>附录一</strong>”中完全列举了。<ol><li>查找算法：</li><li>排序算法：</li><li>删除和替换算法：</li><li>排列组合算法：</li><li>算数算法：</li><li>生成和异变算法：</li><li>关系算法：</li><li>集合算法：</li><li>堆算法：</li></ol></li></ol><p><strong>在这里只列举一些比较常用的，剩下的那些大家如果使用可以在“附录一”中查找。</strong></p><p><strong>代码演示：</strong></p><h4 id="仿函数"><a href="#仿函数" class="headerlink" title="仿函数"></a>仿函数</h4><ol><li>仿函数定义：就是一个可以调用“()”运算符的类对象，在Part2的第10节，Part3的第五节就已经详细介绍过仿函数了。将operator()重载的类的对象就是仿函数。</li></ol><p>简单来说，就是我们在用算法时最后一个参数需要一个可调用对象，stl本身已经帮我们定义了很多可调用对象，不用我们自己再去定义了。</p><h4 id="适配器与分配器"><a href="#适配器与分配器" class="headerlink" title="适配器与分配器"></a>适配器与分配器</h4><ol><li>什么是容器适配器：“适配器是使一种事物的行为类似于另外一种事物行为的一种机制”。适配器对容器进行包装，使其表现出另外一种行为。例如：stack<int> 实现了栈的功能，内部默认使用deque<int>容器来存储数据。</li><li>STL的适配器有哪些：标准库提供了三种顺序容器适配器，没有关联型容器的适配器。分别是queue（队列），priority_queue（优先级队列），stack（栈）。</li><li>适配器的使用：<ol><li>要使用适配器，首先需要引入对应的头文件<ol><li>要使用stack，                  需要#include<stack></li><li>要使用queue或priority_queue，  需要#include<queue></li></ol></li></ol></li></ol><p>代码演示：</p><ul><li><ol><li>容器适配器必须有匹配的容器：如图所示</li></ol></li></ul><div class="table-container"><table><thead><tr><th>种类</th><th>默认顺序容器</th><th>可用顺序容器</th><th>说明</th></tr></thead><tbody><tr><td>stack</td><td>deque</td><td>vector, deque,list</td><td></td></tr><tr><td>queue</td><td>deque</td><td>list,deque</td><td>基础容器必须提供push_front()y运算</td></tr><tr><td>priority_queue</td><td>vector</td><td>vector, deque</td><td>基础容器必须提供随机访问的功能</td></tr></tbody></table></div><p>代码演示：</p><ul><li><ol><li>适配器的初始化：<ol><li>普通的初始化方式：             stack<int>  stk。</li><li>覆盖默认容器类型的初始化方式： stack<int, vector<int>&gt;    stk</li></ol></li></ol></li></ul><ol><li>分配器提一下就可以了。在分配动态内存时，直接使用new，delete容易产生内存碎片化的问题，不同的分配器有不同的分配内存的方法，可以大幅提高程序对堆内存的使用效率，我们直接使用默认的分配器就可以了</li></ol><h2 id="Part7：io库"><a href="#Part7：io库" class="headerlink" title="Part7：io库"></a>Part7：io库</h2><h4 id="io库介绍"><a href="#io库介绍" class="headerlink" title="io库介绍"></a>io库介绍</h4><ol><li>io就是input，output的简写，也就是输入输出功能。在Part2的第4节课，就已经介绍过io功能的本质，数据在内存，磁盘，输入输出设备之间移动就是io功能。</li></ol><p><img src="https://pic.imgdb.cn/item/66ba0139d9c307b7e92e27fc.jpg" alt="code"></p><ol><li>io库组成部分：<ol><li>C++定义了ios这个基类来定义输入输出的最基本操作，这个类的具体功能我们无需了解，只需了解C++io库所有的类都继承自这个类即可。</li><li>istream，ostream这两个类直接继承自ios类。<ol><li>ostream类定义了从内存到输出设备（比如显示器）的功能，我们最常使用的cout就是ostream类的对象。</li><li>istream类定义了从输入设备比如键盘）到内存的功能，我们最常用的cin就是istream类的对象。</li><li><strong>iostream文件定义了ostream和istream类的对象，就是cout和cin。所以我们只要简单的引入iostream这个头文件，就可以方便的使用这两个对象</strong></li></ol></li></ol></li></ol><p><strong>注意：这个输入，输入时相对于内存来说的，输入到内存，是istream。</strong></p><ul><li><ol><li>ifstream，ofstream类分别继承自istream类和ostream类。<ol><li>ifstream定义了从磁盘到内存的功能。因为istream重载了“&lt;&lt;”运算符，所以ifstream对象也可以用“&lt;&lt;”运算符来将文件数据写入内存。除了“=”的所有重载运算符都是可以被继承的。</li><li>ofstream定义了从内存到磁盘的功能。与ifstream同理，也可以用“&gt;&gt;”操作数据流。</li><li><strong>fstream文件引入了ifstream和ofstream，所以我们只要引入ftream这个头文件，就可以使用文件流功能了。</strong></li></ol></li></ol></li></ul><p>注意：这个输入输出同样是相对内存来说的。</p><p>内存与输入输出设备的数据流动，磁盘与内存的数据流动已经介绍完了。磁盘和输入输出设备直接无法直接交互，必须通过内存。</p><p>io库还为我们额外定义了字符串的输入输出类，因为对字符串的操作极为频繁，所以这个库还是很有意义的。</p><ul><li><ol><li>istringstream，ostringstream分别继承自istream类和ostream类<ol><li>istringstream定义了从指定字符串到特定内存的功能。与ifstream同理，也可以用“&lt;&lt;”运算符操作数据。</li><li>ostringstream定义了从特定内存到指定字符串的功能。可以用“&gt;&gt;”操作数据。</li><li><strong>sstream头文件就引入了istringstream和ostringstream，所以我们只要引入sstream这个头文集，就可以使用字符串与内存直接交互数据的功能。</strong></li></ol></li></ol></li></ul><p>所以我们使用io库主要就三个头文件，iostream，fstream，sstream。接下来三节课会对这三个文件的使用依次讲解。</p><h4 id="（-）io库的注意事项"><a href="#（-）io库的注意事项" class="headerlink" title="（*）io库的注意事项"></a>（*）io库的注意事项</h4><p><strong>提示：这节课的介绍，这节课都是一些理论性的东西，有疑惑很正常，可以带着疑惑去学下一节课，有了代码就好理解了。</strong></p><ol><li><strong>io对象无法使用拷贝构造函数和赋值运算符</strong></li></ol><p>代码演示：</p><p>所以我们使用流对象无法使用值传递，一般使用引用进行传递。</p><ol><li><strong>Io对象的状态</strong><ol><li><strong>io操作是非常容易出现错误的操作，一些错误是可以修复的，另一部分则发生在系统更深处，已经超出了应用程序可以修正的范围。</strong></li></ol></li></ol><p>比如我们使用cin向一个int类型的数中输入一个字符串，会使cin这个对象出现错误。</p><p><strong>代码演示：</strong></p><p><strong>所以我们在使用io对象时都应该判断io对象的状态。</strong></p><p><strong>比如：while(cin &gt;&gt; val) 或if(cin &gt;&gt; val)（不要只用这两个进行控制，最好搭配iostate来使用）</strong></p><p><strong>代码演示：</strong></p><ul><li><ol><li>我们需要知道流对象错误的原因，因为不同的错误需要不同的处理方法。</li></ol></li></ul><p>io库定义了iostate类型，可以完整的表示io对象当前的状态。在不同的平台中，    iostate实现方法略有区别，在vs中直接用int来代表iostate类型，将不同的位置1    以表示不同的状态。可以与位操作符一起使用来一次检测或设置多个标志位。</p><p>可以用<strong>rdstat函数</strong>来获得io对象当前用iostat类型来表示的状态：</p><p><strong>代码演示：</strong></p><ul><li><ol><li>iostata类型有以下状态<ol><li>badbit状态，系统级错误，一旦表示badbit的位被置为1，流对象就再也无法使用了。</li><li>failbit状态，代表可恢复错误，比如想读取一个数字却读取了一个字符，这种错误就是可以恢复的。当badbit位被置1时，failbit位也会被置1。</li><li>eofbit状态，当到达文件结束位置时，eofbit和failbit位都会被置1。</li><li>goodbit状态，表示流对象没有任何错误。</li></ol></li></ol></li></ul><p>只要badbit，failbit，eofbit有一位被置为1，则检测流状态的条件就会失败。</p><ul><li><ol><li>标准库还定义了一组成员函数来查询这些标志位的状态<ol><li>good()函数在所有错误位均未置1的情况下返回true。</li><li>bad()，fail()，eof()函数在对应位被置1的情况下返回true。因为badbit位被置1或eofbit位被置1时，failbit位也会被置为1。所以用fail()函数可以准确判断出流对象是否出现错误。</li><li>实际上，我们将流对象当做条件使用的代码就等价于“!fail()”</li></ol></li><li>流对象的管理<ol><li>rdstate函数，返回一个iostate值，对应当前流状态</li><li>setstate(flag) 函数，将流对象设置为想要的状态</li><li>clear函数：是一个重载的函数。<ol><li>clear()，将所有位置0，也就是goodbit状态。</li><li>clear(flag)，将对应的条件状态标志位复位。</li></ol></li><li>ignore函数：</li></ol></li></ol></li></ul><p>作用：提取输入字符并丢弃他们。</p><p>函数原型：istream&amp; ignore (streamsize n = 1, int delim = EOF)</p><pre><code>             读取到前n个字符或在读这n个字符进程中遇到delim字符就停止，把读取的这些东西丢掉</code></pre><p>代码演示：</p><h4 id="内存与输入输出设备的交互（iostream）"><a href="#内存与输入输出设备的交互（iostream）" class="headerlink" title="内存与输入输出设备的交互（iostream）"></a>内存与输入输出设备的交互（iostream）</h4><ol><li><strong>getline：</strong></li></ol><p>其实iostream已经没什么好讲的了，比较常用的就是这个getline了，getline其实并不复杂，不过是按行接收数据罢了，<strong>因为存储在string对象中，所以不容易出现格式错误，但仍然可能出现系统错误，所以在企业级程序中，还是应当对bad的情况进行处理。</strong></p><p>代码演示：</p><ol><li><strong>get:</strong></li></ol><p>还有个不怎么常用的get函数。get函数的用法和getline类似，只不过get是以字符的格式进行接收。<strong>在企业级代码中仍然需要对bad的情况进行处理。</strong></p><p><strong>剩下的也没什么了，iostream常见的用法在上一课已经讲过了，iostream就这些了。</strong></p><h4 id="（-）内存与磁盘的交互（fstream）"><a href="#（-）内存与磁盘的交互（fstream）" class="headerlink" title="（*）内存与磁盘的交互（fstream）"></a>（*）内存与磁盘的交互（fstream）</h4><ol><li>fstream相对于iostream。多了很多自己独有的操作<ol><li>i<strong>o库默认没有给ifstream和ofstream类提供对象，需要我们自己去定义。</strong></li><li>fstream对象创建方式有三种<ol><li>可以使用默认构造函数进行定义。例如： ifstream fstrm，</li></ol></li></ol></li></ol><p>代码演示：</p><ul><li><ul><li><ol><li>也可以在创建流对象时打开想要打开的文件。例如ifstream fstrm(s)。s可以是字符串，也可以是c风格的字符串指针。文件的mode依赖于流对象的类型。</li></ol></li></ul></li></ul><p>代码演示：</p><ul><li><ul><li><ol><li>也可以在打开文件时就指定文件的mode。例如ifstream fstrm(s, mode)</li></ol></li></ul></li></ul><p>代码演示：</p><ul><li><ol><li>fstrm.open(s)函数，打开名为s的文件，并将文件与fsrm绑定，s可以是一个string，也可以是一个c风格的字符串指针。</li></ol></li></ul><p>代码演示：</p><ul><li><ol><li>fstrm.close()函数，关闭文件。<strong>注意，一定不要忘了。</strong></li></ol></li></ul><p>代码演示：</p><ul><li><ol><li>fstrm.is_open()函数，返回一个bool值，指出与fstrm关联的文件是否成功打开且尚未关闭。</li></ol></li></ul><p>代码演示：</p><p><strong>如果新手只看这些描述，可能会很迷糊，所以我接下来要写一段代码，大家只要把这段代码记住，文件部分就没有问题了。</strong></p><p><strong>这段代码的目的是：让客户输入文件名称，如果文件不存在，就让客户重新输入文件名称，如果文件存在，就将文件全部内容输出。</strong></p><ol><li>文件模式：<ol><li>in以读的方式打开</li><li>out以写的方式打开</li><li>app在进行写操作时定位到文件末尾</li><li>ate打开文件后立即定位到文件末尾</li><li>trunc截断文件（也就是文件已有的全部删除，重新开始写）</li><li>binary以二进制方式打开文件</li></ol></li><li>文件模式需要强调以下几点<ol><li>与ifstream关联的文件默认in模式打开。</li><li>与ofstream关联的文件默认out模式打开</li><li>与fstream关联的文件默认in和out模式打开</li><li>默认情况下，即使我们没有指定trunc，以out模式打开的文件也会被截断。为了保持以out模式打开的文件的内容，我们必须同时指定app模式或in模式。</li><li>只可以对ifstream或fstream的对象设定in的模式</li><li>只可以对ofstream或fstream的对象设定out的模式</li><li>只有当out模式被设置时才可以设置trunc模式</li><li>ate和binary模式可以应用与任何类型的文件流对象，且可以与任何其它文件模式组合使用。</li></ol></li></ol><p>代码演示：</p><ol><li><strong>总结：文件流这部分还是有一些东西的，新手理解起来可能有些困难，没办法，用的多了就好了。其实常用的就那么几点。</strong></li></ol><h4 id="内存之中对于字符串的操作（sstream）"><a href="#内存之中对于字符串的操作（sstream）" class="headerlink" title="内存之中对于字符串的操作（sstream）"></a>内存之中对于字符串的操作（sstream）</h4><ol><li>string流介绍：string流可以向string对象写入数据，也可以从string对象读取数据。与文件操作类似，只不过数据交互变成了从内存到内存。</li></ol><p>代码演示：string流默认包含一个string对象，当然，我们也可以指定。</p><ol><li>string流有哪些<ol><li>istringstream从string对象读取数据</li><li>ostringstream向string对象写数据</li><li>stringstream既可以从string对象读取数据，也可以向string对象写数据</li></ol></li><li>string流对象继承自iostream对象，除了继承得来的操作，string流对象还有自己的成员来管理流相关的string。<ol><li>对于string流，io库是没有像cout，cin这样的自定流对象的。流对象需要我们自己去定义<ol><li>sstream strm：sstream代表一个string流对象的类型，以下同理。strm是一个未绑定的stringstream对象。</li><li>Sstream strm(s)：strm是一个绑定了s的拷贝的string流对象。s是一个string对象</li></ol></li><li>strm.str()：返回strm所保存的string的拷贝。</li><li>strm.str(s)：将s拷贝到strm中，返回void</li></ol></li><li>string流对象的作用<ol><li><strong>对数据类型进行转化，也就是string和其它类型的转化，这是string流对象最重要的功能。</strong><ol><li>string转化为int等类型。</li></ol></li></ol></li></ol><p><strong>代码演示：</strong></p><ul><li><ul><li><ol><li>int等类型转化为string。</li></ol></li></ul></li></ul><p><strong>代码演示：</strong></p><ul><li><ol><li>用于对空格分隔的字符串的切分，</li></ol></li></ul><p><strong>代码演示：</strong></p><h2 id="Part8：多线程"><a href="#Part8：多线程" class="headerlink" title="Part8：多线程"></a>Part8：多线程</h2><p><strong>注意：多线程的东西其实有很多，这门课只讲常用的部分，把这些学会基本就够用了。</strong></p><h4 id="多线程基本概念介绍"><a href="#多线程基本概念介绍" class="headerlink" title="多线程基本概念介绍"></a>多线程基本概念介绍</h4><ol><li><strong>多线程的重要性：</strong><ol><li>对于一个专业的C++开发来说，多线程是必须掌握的模块。</li><li>现代程序都是多线程程序了。因为单核处理器的性能早已经达到了瓶颈，只能往多核方向发展。现代的个人计算机都是4核起步，工作站，服务器就更不用说了。</li><li>工作站可以理解为处理能力更强的大型个人计算机，常见的12核，16核。服务器有48核的，甚至更多。</li><li>对于一个计算机来说，是不是说核越多好呢？不是，多核会导致单核的工作性能下降。当核数多到一定程度后，反而总体运行效率下降了。不过，这并不影响现代计算机核数越来越多的趋势。</li><li>传统的单线程程序同时只能在一个核上运行，这是不是太浪费资源了。计算机有8个核，你就用了一个，暴殄天物啊。多线程程序可以使用多个核，极大提高程序运行效率。现在网络通信，音频，视频，游戏服务都是多线程程序。</li></ol></li><li><strong>并发与并行的概念介绍：</strong><ol><li>一句话来说：并行是同时在不同的处理器上处理不同的任务，并发是“同时”在一个处理器上处理多个任务。</li></ol></li></ol><p>解释一下：</p><ul><li><ul><li><ol><li>并行是指有多个处理器。每个处理器各执行一个线程，互不抢占cpu资源，如果线程数量多于CPU，也没有办法，只能将处理器的时间划分为多个时间段，再将时间段分配给各个线程。</li><li>并发是指只有一个处理器，但多个线程被轮换快速执行，使得宏观上有了同时执行的效果。作用原理是将单处理器的时间划分为多个时间段，再分配给不同的线程。同一时间段只能有一个线程在运行，其它线程均处于挂起状态。</li></ol></li></ul></li></ul><ol><li><strong>进程的概念：</strong><ol><li>进程的概念在面向进程设计的操作系统（就是unix，也包括后面衍生出的linux，mac）和面向线程设计的操作系统（说的就是windows）上有很大区别，两种设计方式的共同点与不同点还是需要理解的。<ol><li>进程是计算机中的程序对某些数据集合的一次运行活动，是系统进行资源分配和调度的最基本单位，是操作系统的结构基础。再用大白话说一遍，一个可执行程序执行起来，就是一个进程。当然，一个程序要执行起来需要各种资源，这些资源就是数据集合。</li><li>在面向进程设计的计算机结构中，进程是程序的基本执行单位，进程包括程序执行的所有资源，同时自己也可以执行。</li><li>在面向线程设计的计算机结构中，线程才是程序的基本执行单位，进程不过是线程的容器罢了。进程就像一个仓库，里面存放了程序的所有资源，进程中的线程才是真正执行程序的单元。</li></ol></li></ol></li><li><strong>线程的概念：</strong><ol><li>linux的线程和windows的线程还是有很大区别的。</li><li>linux的线程就是一种轻量级的进程，只有依靠进程才可以存在。也模拟出了windows线程的方式，让线程成为真正的执行单元。</li><li>windows的线程就简单多了，真正执行程序的最小单元。</li></ol></li><li><strong>总结：</strong><br>说了这么多：其实对进程，线程只是个介绍，这里面水很深。而且windows多线程和linux多线程的区别并不影响我们学习C++11的多线程，C++标准任何平台通用。</li></ol><p><strong>现代C++程序，C++11的多线程功能才是主流，C++11的多线程就是windows模式的，进程为一个仓库，线程才是程序执行的最小单元。linux同样完美支持了这些功能。</strong></p><h4 id="（-）线程的创建"><a href="#（-）线程的创建" class="headerlink" title="（*）线程的创建"></a>（*）线程的创建</h4><ol><li>主线程介绍：一个程序执行起来就是一个进程。而main函数就是主线程，一旦主线程执行完毕，主线程结束，整个进程就会结束。</li><li>子线程介绍：在一个线程执行时，我们可以创建出另外一个线程。两个线程各自执行，互补干涉。注意，当主线程执行完毕，就会强制结束所有子线程，然后进程结束，从这个角度来说，可以认为子线程是主线程的辅助线程。<strong>但是要明白主线程和子线程是平级的，只不过主线程执行完毕后会给所有子线程发送一个信号，使所有子线程强制结束。</strong></li><li>子线程的创建方式：很简单，直接使用thread类就可以了。</li></ol><p><strong>代码演示：</strong></p><p><strong>括号中只要是一个可调用对象就没有问题了。</strong></p><ol><li><strong>子线程创建后如果就不管了，那么会出现非常严重的问题。</strong><ol><li>有些子线程负责对部分数据的处理，主线程必须要等到子线程处理完毕才能继续执行，所以join函数就诞生了。</li></ol></li></ol><p><strong>代码演示</strong>：</p><p>使用了join函数后，主线程就会处于挂起状态，直到子线程执行完毕才可以继续执行。</p><ul><li><ol><li>有些子线程和主线程完全分离，各自执行各自的。但主线程执行完毕，<strong>子线程就会立马被强制结束，容易导致各种bug，查都不知道从哪里开始查。</strong>于是deatch函数就诞生了。</li></ol></li></ul><p><strong>代码演示：</strong></p><p>detach()函数可以让<strong>子线程被C++运行库接管</strong>，就算主线程执行完毕，子线程也会由C++运行时库清理相关资源。保证不会出现各种意想不到的bug。</p><h4 id="（-）传递线程参数"><a href="#（-）传递线程参数" class="headerlink" title="（*）传递线程参数"></a>（*）传递线程参数</h4><ol><li>传递子线程函数的参数：直接传递即可，注意：传递参数分为三种方式，值传递，引用传递，指针传递。</li></ol><p>代码演示：</p><ol><li>传递参数注意事项：<ol><li>在使用detach时不要传递指针，或者说在设置子线程函数时，不要设置指针参数。因为值传递和引用传递并未直接传递地址，而指针传递却直接传递地址。所以当使用deatch时，传指针就会导致错误，指针已经被系统回收，所以不要千万不要传指针。</li></ol></li></ol><p><strong>代码演示：</strong></p><ul><li><ol><li><strong>在使用detach时不要使用隐式类型转化，因为很有可能子线程参数还没来的及将参数转化为自己的类型，主线程就已经执行完毕了。</strong></li></ol></li></ul><ol><li><strong>总结：</strong><ol><li><strong>普通类型在传递子线程函数参数时，直接值传递即可。</strong></li><li><strong>类类型传递引用就可以了，类类型传递引用会首先调用一次复制构造函数生成一个临时变量，故而导致地址不相同。如果采用值传递，需要两次复制构造函数，开销更大。</strong></li></ol></li><li><strong>std::ref的用法：</strong></li></ol><p>根据刚才的演示，使用普通的引用传递会调用一次复制构造函数，导致函数无法对引用对象进行修改，于是std::ref诞生了，它可以使子线程在传递参数时不再调用复制构造函数。</p><p>代码演示：</p><h4 id="（-）线程id的概念："><a href="#（-）线程id的概念：" class="headerlink" title="（*）线程id的概念："></a>（*）线程id的概念：</h4><ol><li>线程id定义：每个线程都有自己的id，不管是主线程还是子线程都有自己的id。直接使用std::this_thread::get_id()就可以获得当前线程的id。</li></ol><p>代码演示：</p><ol><li>注意：线程是依附于进程存在的，所以不同的进程可以有相同的线程id。</li></ol><p>这一课很简单，但这个知识点不知道往哪里放，就单独拿出来了。</p><h4 id="（-）数据共享与数据保护"><a href="#（-）数据共享与数据保护" class="headerlink" title="（*）数据共享与数据保护"></a>（*）数据共享与数据保护</h4><ol><li>多个线程的执行顺序是乱的，具体执行方法和处理器的调度机制有关系。从开发者的角度讲，就是没有规律的。</li></ol><p>代码演示：</p><ol><li>在讲数据保护问题之前，为了帮助大家理解数据保护问题，这里额外扩展一些关于汇编的知识。科班的同学应该很熟悉，给非科班的人介绍一下。</li></ol><p>一个进程运行时，数据存储在内存中。如果一个数据要进行运算，必须先将数据拷贝到寄存器中。比如要对栈上的一个int i进行“++”操作，需要将i的值拷贝到寄存器中，将该值自加后再拷贝到原来的内存。</p><p>如果此时有两个线程均进行的是这样的操作，可能出现两个进程都拷贝了i原来的值到寄存器，然后各种加一，再拷贝到i对应内存的情况，最终导致i这个变量只自加了一次。</p><p>这是同时写数据的情况，那么一读一写呢？这也是有问题的，谁知道读数据时写数据步骤已经到了哪里，谁知道读出来的是个什么东西。</p><ol><li>数据保护问题：<ol><li>数据保护问题总共有三种情况：<ol><li>至少两个线程对共享数据均进行读操作，完全不会出现数据安全问题。</li><li>至少两个线程对共享数据均进行写操作，会出现数据安全问题，需要数据保护。</li><li>至少两个线程对共享数据有的进行读，有的进行写，也会出现数据安全问题，需要进行数据保护。</li></ol></li></ol></li></ol><p>代码演示：</p><p>数据保护的方法一共就两种：互斥锁，原子操作。</p><ol><li><strong>互斥锁：</strong><ol><li>互斥锁的作用原理很简单，对共享数据加锁，当一个线程对这块数据进行操作时，别的线程就无法对该区域数据进行操作。</li></ol></li></ol><p>代码演示：</p><ul><li><ol><li>这种方式的互斥锁有个弊端，就是lock()之后容易忘记unlock()，就和指针类似。于是和智能指针类似，也有了lock_guard，用来防止开发人员忘了解锁。</li></ol></li></ul><p>代码演示：</p><ol><li>原子操作：（使用频率远远不及互斥锁）<ol><li>原子操作的原理：将一个数据设置为原子状态，使得该数据处于无法被分割的状态，意思就是处理器在处理被设置为原子状态的数据时，其它处理器无法处理该段数据，该处理器也会保证在处理完该数据之前不会处理其他数据。</li></ol></li></ol><p>代码演示：</p><p>总结：在编写多线程代码时，数据保护是一个必须考虑，非常常用的功能。互斥锁的使用频率是远远高于原子操作，原子操作看似简单，但当需要保护的数据很多时，就会极其复杂。</p><p><strong>所以：对于单个数据，可以使用原子操作，其它的使用互斥锁就可以了。</strong></p><h4 id="（-）死锁"><a href="#（-）死锁" class="headerlink" title="（*）死锁"></a>（*）死锁</h4><p>死锁就像两个人在互相等对方。A说，等B来了就去B现在所在的地方；B说，等A来了我就去A所在的地方，结果就是A和B都在等对面过来才能去对面。这就导致了一个死循环，放在多线程中，就是死锁。</p><p>举个例子：</p><p>解决方法也很简单。</p><ol><li>只要让两个锁顺序一致就可以了。</li></ol><p><strong>代码演示：</strong></p><ol><li>但是让两个锁顺序一致常常是说起来容易，做起来难。于是C++11提供了std::lock。这个模板可以保证多个互斥锁绝对不会出现死锁的问题。同时提供了std::adopt_lock的功能来避免忘记释放锁的问题。</li></ol><p><strong>总结：死锁是一个比较常见的bug，面试时也经常询问死锁相关的知识。</strong></p><p>这一节课上完，多线程的主体部分就讲完了，后面都是使用频率较低的东西，也就是个补充。所以前六节课必须学会，每一课都是重点。后面的我就不讲了。</p><h2 id="Part9：异常处理"><a href="#Part9：异常处理" class="headerlink" title="Part9：异常处理"></a>Part9：异常处理</h2><p><strong>异常处理的前情提要：很多人不喜欢使用异常处理，认为它麻烦，应对可能出现的错误要写那么多代码，会非常麻烦。</strong></p><p><strong>但实际上不是这样的，我们只需要在一些开发人员难以控制，比较容易出错的地方对异常进行处理就可以了，需要进行异常处理的地方并不多。</strong></p><p>举几个例子。</p><ol><li>接收传递过来的被除数，我们难以判断被除数是否为0，此时异常处理就很有意义了。</li><li>接收文件名，如果文件不存在，我们可以按照之前的写法要求重发一遍，也可以直接报异常，异常就是文件不存在。</li><li>我们在动态分配内存时，经常出现内存不足的情况（在大型程序中，这是非常常见）。比如我们需要动态分配一个未知大小的数组，数组大小等待传入。使用new操作符会直接抛出bad_alloc的异常。</li></ol><p>对new的处理非常重要，大家如果做专业的C++开发，会经常用到。</p><p>此外使用智能指针时如果内存分配不够也会抛出bad_alloc的异常</p><ol><li>有个vector，我们需要接受一个参数，然后取出参数对应的数组元素。此时就经常出现数组的越界问题。</li></ol><p><strong>最常用的基本就这些例子了，剩下的也都和这些类似。</strong></p><p><strong>异常处理这一章东西不多，一会儿把这些例子演示一下就可以了。</strong></p><h4 id="异常处理的介绍："><a href="#异常处理的介绍：" class="headerlink" title="异常处理的介绍："></a>异常处理的介绍：</h4><ol><li><strong>异常是程序在执行期间产生的问题（编译期出现的错误在写代码时开发环境就有提示）</strong>。C++的异常是指程序运行时发生的特殊情况。</li><li>异常提供了一种转移程序控制权的方式。C++的异常处理涉及到三个关键字：try，catch，throw。<ol><li>throw：当问题出现时，程序会抛出一个异常。这是通过throw关键字来完成的。</li><li>catch：在你想要处理问题的地方，通过异常处理程序捕获异常。catch关键字用于捕获异常。</li><li>try：try块中的代码标识将被激活的特定异常。它后面通常跟着一个或多个catch块。</li></ol></li></ol><p>如果有一个块抛出一个异常，捕获异常的方法会使用try和catch关键字。try块中放可能抛出异常的代码，try块中的代码被称为保护代码。常见的异常处理格式如图所示。</p><p><img src="https://pic.imgdb.cn/item/66ba0139d9c307b7e92e2831.png" alt="code"></p><ol><li>抛出异常：throw语句可以在代码块的任何地方抛出异常，throw抛出的表达式的结果决定了抛出的异常的类型。</li></ol><p>代码演示：</p><h4 id="C-的标准异常"><a href="#C-的标准异常" class="headerlink" title="C++的标准异常"></a>C++的标准异常</h4><ol><li>C++提供了一系列标准的异常，定义在头文件“<exception>”中，它们是以父子层次结构组织起来的，如下图所示。</li></ol><p><strong>图只要有个大致印象就可以了， 不需要全背住</strong></p><p><img src="https://pic.imgdb.cn/item/66ba0139d9c307b7e92e2823.jpg" alt="code"></p><p><img src="https://pic.imgdb.cn/item/66ba0139d9c307b7e92e280d.png" alt="code"></p><ol><li>别看图很复杂，异常种类有很多，但经常使用的其实就几个。<ol><li>bad_alloc错误，使用new分配内存失败就会抛出bad_alloc错误。</li><li>out_of_range错误，在使用at时，容器越界就会抛出这个错误，这也是“at”比“[]”更加优秀的原因。</li><li>runtime_error错误，运行时错误，只有在程序运行时才能检测到的错误。这是一个相对的概念，和logic_error形成对比。logic_error可以读代码读出来，runtime_error就不行。</li></ol></li></ol><p>我们也经常将一些读代码无法判断的异常标识为runtime_error。</p><ul><li><ol><li>... 错误，可以接受任何错误，我们一般都会在catch最后加上“...”，这样就可以接受所有类型的异常了。</li></ol></li></ul><p><strong>代码演示:</strong></p><p><strong>剩下的异常，我也用代码演示一下，这些异常使用频率比较低，但在某些情况下也是需要使用的。</strong></p><ol><li>自定义异常类型，其实需要自定义异常类型的情况真的非常少，这里就不介绍了，其实和标准异常也是一样的。</li></ol><h2 id="Part10：各种难以归类但有使用价值的知识点"><a href="#Part10：各种难以归类但有使用价值的知识点" class="headerlink" title="Part10：各种难以归类但有使用价值的知识点"></a>Part10：各种难以归类但有使用价值的知识点</h2><h4 id="万能引用与引用折叠"><a href="#万能引用与引用折叠" class="headerlink" title="万能引用与引用折叠"></a>万能引用与引用折叠</h4><ol><li>万能引用的概念：<ol><li>C++11除了带来了右值引用，还带来了万能引用，也就是既能当做左值，又能当做右值的引用。</li></ol></li></ol><p>注意：万能引用是既可以被编译期处理为左值引用，又可以被编译期处理为右值引用。<strong>不是既是左值引用又是右值引用，不违背C++一个引用不是左值引用，就是右值引用的基本说法，万能引用会在编译期被当做左值引用或右值引用处理。</strong></p><ol><li>万能引用的格式：万能引用的格式有两种<ol><li>模板型：</li></ol></li></ol><p>template<typename T></p><p>void func(T&amp;&amp; parm)</p><p>代码演示：</p><p><strong>这个T&amp;&amp; 就是万能引用类型。</strong></p><p><strong>注意：只有T&amp;&amp; 是万能引用类型</strong></p><p><strong>以下的写法均不是万能引用：</strong></p><p><strong>const T&amp;&amp; parm       这就是普通的右值引用。</strong></p><p><strong>vector<T> &amp;&amp; parm    这也是右值引用。</strong></p><p><strong>template<typename T></strong></p><p><strong>class MyVector<br>    ｛</strong></p><p><strong>public:</strong></p><p><strong>void push_back(T&amp;&amp; elem)</strong></p><p><strong>｝</strong></p><p><strong>注意：此时T&amp;&amp; 不是万能引用，因为T影响的是MyVector的类型。</strong></p><p><strong>只有这样写，才是万能引用。</strong></p><p><strong>template<typename T></strong></p><p><strong>class MyVector<br>    ｛</strong></p><p><strong>public:</strong></p><p><strong>template<typename T2></strong></p><p><strong>void push_back(T2&amp;&amp; elem)</strong></p><p><strong>｝</strong></p><p><strong>此时T2&amp;&amp; 的类型完全独立于MyVector类了，每调用一次push_back函数，都要推断T2的类型。</strong></p><ul><li><ol><li>auto型：</li></ol></li></ul><p>auto &amp;&amp; var = var2；</p><p><strong>代码演示：</strong></p><p>这个auto&amp;&amp; 就是万能引用。</p><p><strong>const auto&amp;&amp; var 就不是万能引用了。</strong></p><ol><li>万能引用的作用，就是当参数为左值时。T&amp;&amp;为左值。当参数为右值时，T&amp;&amp; 为右值。就这么简单。</li></ol><p><strong>代码演示：</strong></p><ol><li>引用折叠：引用折叠其实概念很简单</li></ol><p>一个引用不是左值引用就是右值引用，当一个万能引用被认为左值引用时，类型应该是T&amp; &amp;&amp;，此时类型就会折叠为T&amp;。</p><p>简单来说，就是引用符号太多了，折叠为“&amp;”或“&amp;&amp;”</p><p><strong>看代码：</strong></p><h4 id="完美转发"><a href="#完美转发" class="headerlink" title="完美转发"></a>完美转发</h4><ol><li>C++完美转发的定义：完美转发是什么呢？说到底，它描述的其实就是一个参数传递的过程，能够将一个传递到一个函数的参数，再通过该函数原封不动的传递给另一个函数（<strong>这里的原封不动不单是指参数的值，更包括参数的类型，参数的限定符</strong>）</li></ol><p>光用语言描述确实描述不清楚，所以。</p><p><strong>代码演示：</strong></p><ol><li>我们发现以前的传递参数的方法都无法在万能引用中解决完美转发的问题。</li></ol><p><strong>代码演示：</strong></p><ol><li>于是C++提供了forward模板来解决完美转发的问题，forward模板可以使参数推断出它原来的类型，实现了完美转发。</li><li><strong>总结：完美转发就是一个专门配合万能引用的知识点，专门用来在使用万能引用的地方原封不动的传递参数。其实记住它是和万能引用配合使用的就掌握的差不多了，</strong></li></ol><p><strong>最后再说一点，其实Part10原本还是打算讲一些东西的，后来想了想，这些都是比较复杂的东西了，新手根本用不到，用的到的人也都是一些老家伙了，完全有了自己查找资料的能力，所以像萃取这种知识就没有讲。</strong></p><p><strong>这些东西，绝对够新手看了，非常的全，也非常实用。</strong></p><h2 id="附页1：STL全部的算法"><a href="#附页1：STL全部的算法" class="headerlink" title="附页1：STL全部的算法"></a>附页1：STL全部的算法</h2><p><strong>注意：我这个文档的主要功能还是给STL的算法分个类，要查看算法严格的描述，还是去微软官网查看吧，官方文档又准又全。</strong></p><h4 id="lt-一-gt-查找算法-13个-：判断容器中是否包含某个值"><a href="#lt-一-gt-查找算法-13个-：判断容器中是否包含某个值" class="headerlink" title="&lt;一&gt;查找算法(13个)：判断容器中是否包含某个值"></a>&lt;一&gt;查找算法(13个)：判断容器中是否包含某个值</h4><h5 id="adjacent-find"><a href="#adjacent-find" class="headerlink" title="adjacent_find:"></a>adjacent_find:</h5><p>在iterator对标识元素范围内，查找一对相邻重复元素，找到则返回指向这对元素的第一个元素forwardIterator。否则返回最后一个元素的forwardIterator。</p><h5 id="binary-search"><a href="#binary-search" class="headerlink" title="binary_search:"></a>binary_search:</h5><p>在有序序列中查找value，找到返回true。重载的版本实用指定的比较函数对象或函数指针来判断相等。</p><h5 id="count"><a href="#count" class="headerlink" title="count:"></a>count:</h5><p>利用等于操作符，把标志范围内的元素与输入值比较，返回相等元素个数。</p><h5 id="count-if"><a href="#count-if" class="headerlink" title="count_if:"></a>count_if:</h5><p>利用输入的操作符，对标志范围内的元素进行操作，返回结果为true的个数。</p><h5 id="equal-range"><a href="#equal-range" class="headerlink" title="equal_range:"></a>equal_range:</h5><p><strong>注意，必须对有序容器进查找，下面的lower_bound和upper_bound也是同理。</strong></p><p> 功能类似equal，返回一对iterator，第一个表示lower_bound，第二个表示upper_bound。</p><p>find利用底层元素的等于操作符，对指定范围内的元素与输入值进行比较。当匹配时，结束搜索，返回该元素的一个InputIterator。</p><h5 id="find-end"><a href="#find-end" class="headerlink" title="find_end:"></a>find_end:</h5><p> 在指定范围内查找”由输入的另外一对iterator标志的第二个序列”的最后一次出现。找到则返回最后一对的第一个迭代器，否则返回输入的”另外一对”的第一个迭代器。重载版本使用用户输入的操作符代替等于操作。</p><h5 id="find-first-of"><a href="#find-first-of" class="headerlink" title="find_first_of:"></a>find_first_of:</h5><p> 在指定范围内查找”由输入的另外一对iterator标志的第二个序列”中任意一个元素的第一次出现。重载版本中使用了用户自定义操作符。</p><h5 id="find-if"><a href="#find-if" class="headerlink" title="find_if:"></a>find_if:</h5><p>   使用输入的函数代替等于操作符执行find。</p><h5 id="lower-bound"><a href="#lower-bound" class="headerlink" title="lower_bound:"></a>lower_bound:</h5><p>   返回一个iterator，指向在有序序列范围内的可以插入指定值而不破坏容器顺序的第一个位置。重载函数使用自定义比较操作。</p><h5 id="upper-bound"><a href="#upper-bound" class="headerlink" title="upper_bound:"></a>upper_bound:</h5><p>  返回一个iterator，指向在有序序列范围内插入value而不破坏容器顺序的最后一个位置，该位置标志一个大于value的值。重载函数使用自定义比较操作。</p><h5 id="search"><a href="#search" class="headerlink" title="search:"></a>search:</h5><p><strong>这两个是真的不好描述，去微软官网查看一下吧，简单，比我在这里总结的强多了。</strong></p><p>search_n:</p><h4 id="lt-二-gt-排序和通用算法-14个-：提供元素排序策略"><a href="#lt-二-gt-排序和通用算法-14个-：提供元素排序策略" class="headerlink" title="&lt;二&gt;排序和通用算法(14个)：提供元素排序策略"></a>&lt;二&gt;排序和通用算法(14个)：提供元素排序策略</h4><h5 id="inplace-merge"><a href="#inplace-merge" class="headerlink" title="inplace_merge:"></a>inplace_merge:</h5><h5 id="merge"><a href="#merge" class="headerlink" title="merge:"></a>merge:</h5><h5 id="nth-element"><a href="#nth-element" class="headerlink" title="nth_element:"></a>nth_element:</h5><h5 id="partial-sort"><a href="#partial-sort" class="headerlink" title="partial_sort:"></a>partial_sort:</h5><h5 id="partial-sort-copy"><a href="#partial-sort-copy" class="headerlink" title="partial_sort_copy:"></a>partial_sort_copy:</h5><h5 id="partition"><a href="#partition" class="headerlink" title="partition:"></a>partition:</h5><h5 id="random-shuffle"><a href="#random-shuffle" class="headerlink" title="random_shuffle:"></a>random_shuffle:</h5><h5 id="reverse"><a href="#reverse" class="headerlink" title="reverse:"></a>reverse:</h5><h5 id="reverse-copy"><a href="#reverse-copy" class="headerlink" title="reverse_copy:"></a>reverse_copy:</h5><h5 id="rotate"><a href="#rotate" class="headerlink" title="rotate:"></a>rotate:</h5><h5 id="rotate-copy"><a href="#rotate-copy" class="headerlink" title="rotate_copy:"></a>rotate_copy:</h5><h5 id="sort"><a href="#sort" class="headerlink" title="sort:"></a>sort:</h5><h5 id="stable-sort"><a href="#stable-sort" class="headerlink" title="stable_sort:"></a>stable_sort:</h5><h5 id="stable-partition"><a href="#stable-partition" class="headerlink" title="stable_partition:"></a>stable_partition:</h5><h4 id="lt-三-gt-删除算法-15个"><a href="#lt-三-gt-删除算法-15个" class="headerlink" title="&lt;三&gt;删除算法(15个)"></a>&lt;三&gt;删除算法(15个)</h4><h5 id="copy"><a href="#copy" class="headerlink" title="copy:"></a>copy:</h5><h5 id="copy-backward"><a href="#copy-backward" class="headerlink" title="copy_backward:"></a>copy_backward:</h5><h5 id="iter-swap"><a href="#iter-swap" class="headerlink" title="iter_swap:"></a>iter_swap:</h5><h5 id="remove"><a href="#remove" class="headerlink" title="remove:"></a>remove:</h5><h5 id="remove-copy"><a href="#remove-copy" class="headerlink" title="remove_copy:"></a>remove_copy:</h5><h5 id="remove-if"><a href="#remove-if" class="headerlink" title="remove_if:"></a>remove_if:</h5><h5 id="remove-copy-if"><a href="#remove-copy-if" class="headerlink" title="remove_copy_if:"></a>remove_copy_if:</h5><h5 id="replace"><a href="#replace" class="headerlink" title="replace:"></a>replace:</h5><h5 id="replace-copy"><a href="#replace-copy" class="headerlink" title="replace_copy:"></a>replace_copy:</h5><h5 id="replace-if"><a href="#replace-if" class="headerlink" title="replace_if:"></a>replace_if:</h5><h5 id="replace-copy-if"><a href="#replace-copy-if" class="headerlink" title="replace_copy_if:"></a>replace_copy_if:</h5><h5 id="swap"><a href="#swap" class="headerlink" title="swap:"></a>swap:</h5><h5 id="swap-range"><a href="#swap-range" class="headerlink" title="swap_range:"></a>swap_range:</h5><h5 id="unique"><a href="#unique" class="headerlink" title="unique:"></a>unique:</h5><h5 id="unique-copy"><a href="#unique-copy" class="headerlink" title="unique_copy:"></a>unique_copy:</h5><h4 id="lt-四-gt-排列组合算法-2个-：提供计算给定集合按一定顺序的所有可能排列组合"><a href="#lt-四-gt-排列组合算法-2个-：提供计算给定集合按一定顺序的所有可能排列组合" class="headerlink" title="&lt;四&gt;排列组合算法(2个)：提供计算给定集合按一定顺序的所有可能排列组合"></a>&lt;四&gt;排列组合算法(2个)：提供计算给定集合按一定顺序的所有可能排列组合</h4><h5 id="next-permutation"><a href="#next-permutation" class="headerlink" title="next_permutation:"></a>next_permutation:</h5><h5 id="prev-permutation"><a href="#prev-permutation" class="headerlink" title="prev_permutation:"></a>prev_permutation:</h5><h4 id="lt-五-gt-算术算法-4个"><a href="#lt-五-gt-算术算法-4个" class="headerlink" title="&lt;五&gt;算术算法(4个)"></a>&lt;五&gt;算术算法(4个)</h4><h5 id="accumulate"><a href="#accumulate" class="headerlink" title="accumulate:"></a>accumulate:</h5><h5 id="partial-sum"><a href="#partial-sum" class="headerlink" title="partial_sum:"></a>partial_sum:</h5><h5 id="inner-product"><a href="#inner-product" class="headerlink" title="inner_product:"></a>inner_product:</h5><h5 id="adjacent-difference"><a href="#adjacent-difference" class="headerlink" title="adjacent_difference:"></a>adjacent_difference:</h5><h4 id="lt-六-gt-生成和异变算法-6个"><a href="#lt-六-gt-生成和异变算法-6个" class="headerlink" title="&lt;六&gt;生成和异变算法(6个)"></a>&lt;六&gt;生成和异变算法(6个)</h4><h5 id="fill"><a href="#fill" class="headerlink" title="fill:"></a>fill:</h5><h5 id="fill-n"><a href="#fill-n" class="headerlink" title="fill_n:"></a>fill_n:</h5><h5 id="for-each"><a href="#for-each" class="headerlink" title="for_each:"></a>for_each:</h5><h5 id="generate"><a href="#generate" class="headerlink" title="generate:"></a>generate:</h5><h5 id="generate-n"><a href="#generate-n" class="headerlink" title="generate_n:"></a>generate_n:</h5><h5 id="transform"><a href="#transform" class="headerlink" title="transform:"></a>transform:</h5><h4 id="lt-七-gt-关系算法-8个"><a href="#lt-七-gt-关系算法-8个" class="headerlink" title="&lt;七&gt;关系算法(8个)"></a>&lt;七&gt;关系算法(8个)</h4><h5 id="equal"><a href="#equal" class="headerlink" title="equal:"></a>equal:</h5><h5 id="includes"><a href="#includes" class="headerlink" title="includes:"></a>includes:</h5><h5 id="lexicographical-compare"><a href="#lexicographical-compare" class="headerlink" title="lexicographical_compare:"></a>lexicographical_compare:</h5><h5 id="max"><a href="#max" class="headerlink" title="max:"></a>max:</h5><h5 id="max-element"><a href="#max-element" class="headerlink" title="max_element:"></a>max_element:</h5><h5 id="min"><a href="#min" class="headerlink" title="min:"></a>min:</h5><h5 id="min-element"><a href="#min-element" class="headerlink" title="min_element:"></a>min_element:</h5><h5 id="mismatch"><a href="#mismatch" class="headerlink" title="mismatch:"></a>mismatch:</h5><h4 id="lt-八-gt-集合算法-4个"><a href="#lt-八-gt-集合算法-4个" class="headerlink" title="&lt;八&gt;集合算法(4个)"></a>&lt;八&gt;集合算法(4个)</h4><h5 id="set-union"><a href="#set-union" class="headerlink" title="set_union:"></a>set_union:</h5><h5 id="set-intersection"><a href="#set-intersection" class="headerlink" title="set_intersection:"></a>set_intersection:</h5><h5 id="set-difference"><a href="#set-difference" class="headerlink" title="set_difference:"></a>set_difference:</h5><h5 id="set-symmetric-difference"><a href="#set-symmetric-difference" class="headerlink" title="set_symmetric_difference:"></a>set_symmetric_difference:</h5><h4 id="lt-九-gt-堆算法-4个"><a href="#lt-九-gt-堆算法-4个" class="headerlink" title="&lt;九&gt;堆算法(4个)"></a>&lt;九&gt;堆算法(4个)</h4><h5 id="make-heap"><a href="#make-heap" class="headerlink" title="make_heap:"></a>make_heap:</h5><h5 id="pop-heap"><a href="#pop-heap" class="headerlink" title="pop_heap:"></a>pop_heap:</h5><h5 id="push-heap"><a href="#push-heap" class="headerlink" title="push_heap:"></a>push_heap:</h5><h5 id="sort-heap"><a href="#sort-heap" class="headerlink" title="sort_heap:"></a>sort_heap:</h5><h2 id="附页2：STL标准库提供的仿函数"><a href="#附页2：STL标准库提供的仿函数" class="headerlink" title="附页2：STL标准库提供的仿函数"></a>附页2：STL标准库提供的仿函数</h2><h4 id="算术类仿函数"><a href="#算术类仿函数" class="headerlink" title="算术类仿函数"></a>算术类仿函数</h4><h5 id="加："><a href="#加：" class="headerlink" title="加："></a>加：</h5><p>plus<T></p><h5 id="减："><a href="#减：" class="headerlink" title="减："></a>减：</h5><p>minus<T></p><h5 id="乘："><a href="#乘：" class="headerlink" title="乘："></a>乘：</h5><p>multiplies<T></p><h5 id="除："><a href="#除：" class="headerlink" title="除："></a>除：</h5><p>divides<T></p><h5 id="模取："><a href="#模取：" class="headerlink" title="模取："></a>模取：</h5><p>modulus<T></p><h5 id="取负："><a href="#取负：" class="headerlink" title="取负："></a>取负：</h5><p>negate<T></p><h4 id="关系运算类仿函数"><a href="#关系运算类仿函数" class="headerlink" title="关系运算类仿函数"></a>关系运算类仿函数</h4><h5 id="等于："><a href="#等于：" class="headerlink" title="等于："></a>等于：</h5><p>equal_to<T></p><h5 id="不等于："><a href="#不等于：" class="headerlink" title="不等于："></a>不等于：</h5><p>not_equal_to<T></p><h5 id="大于："><a href="#大于：" class="headerlink" title="大于："></a>大于：</h5><p>greater<T></p><h5 id="大于等于："><a href="#大于等于：" class="headerlink" title="大于等于："></a>大于等于：</h5><p>greater_equal<T></p><h5 id="小于："><a href="#小于：" class="headerlink" title="小于："></a>小于：</h5><p>less<T></p><h5 id="小于等于："><a href="#小于等于：" class="headerlink" title="小于等于："></a>小于等于：</h5><p>less_equal<T></p><h4 id="逻辑运算仿函数"><a href="#逻辑运算仿函数" class="headerlink" title="逻辑运算仿函数"></a>逻辑运算仿函数</h4><h5 id="逻辑与："><a href="#逻辑与：" class="headerlink" title="逻辑与："></a>逻辑与：</h5><p>logical_and<T></p><h5 id="逻辑或："><a href="#逻辑或：" class="headerlink" title="逻辑或："></a>逻辑或：</h5><p>logical_or<T></p><h5 id="逻辑否："><a href="#逻辑否：" class="headerlink" title="逻辑否："></a>逻辑否：</h5><p>logical_no<T></p><h2 id="附页3：STL各种容器的操作："><a href="#附页3：STL各种容器的操作：" class="headerlink" title="附页3：STL各种容器的操作："></a>附页3：STL各种容器的操作：</h2><p><strong>注意：</strong></p><ol><li><strong>不需要死记硬背，用的多了自然就会了。</strong></li><li><strong>容器的各种函数最好的方式就是打开vs，函数所有的参数都有显示，看不懂就去微软官网查一查。</strong></li></ol><h4 id="vector的各种函数"><a href="#vector的各种函数" class="headerlink" title="vector的各种函数"></a>vector的各种函数</h4><h5 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h5><ol><li>vector()：创建一个空的vector</li><li>vector(const std::allocator<T>&amp; al)：使用指定的分配器来分配内存。<strong>allocator就是一个内存分配器，vector已经指定了默认的分配器了，不需要我们去主动调用，以后设计allocator直接忽略就可以了，其实这个构造函数只不过是用指定的分配器去创建一个空的vector罢了。</strong></li><li>vector(std::vector<T>&amp;&amp; right, const std::allocator<T>&amp; al)：就是移动构造函数，第二个参数表示我们指定分配器。</li><li>vector(const std::vector<T>&amp; vec, const std::alloctor<T>&amp; al)：就是复制构造函数，分配器可以自己指定，当然，一般来说，vector默认的分配器就够用了。</li><li>vector(std::initializer_list<T>&amp; initList, const std::allocator<T>&amp; al)：就是使用initializer_list来初    始化容器，第二个参数表示我们可以指定分配器。</li><li>vector(iter first, iter last, const std::allocator<T>&amp; al)：就是容器初始有迭代器[first, last)的内容（<strong>这里使用deque，list的迭代器也可以</strong>），第三个参数还是表示我们可以指定分配器。</li><li>vector(const size_t count, const std::alloctor<T>&amp; al)：创建一个vector，元素个数为count。元素均为默认值，如果是普通类型，则赋值为0。如果是类类型，则均使用默认构造函数进行初始化。</li><li>vector(const size_t count，const T&amp; t)：创建一个vector，元素个数为count，且值均为t。</li></ol><h5 id="增加函数"><a href="#增加函数" class="headerlink" title="增加函数"></a>增加函数</h5><ol><li>void push_back(const T&amp; value)：向容器尾部增加一个元素value。</li><li>void push_back(T&amp;&amp; value)：向容器尾部增加一个元素value，这不过这次以右值引用的形式添加。</li><li>std::vector<T>::iterator insert(std::vector<T>::const_iterator&amp; where, std::initializer_list<T> initList)：在where迭代器指定的地方添加initList，<strong>返回值为指向新添加的第一个元素的迭代器，insert函数虽然有很多重载，但返回值是完全类似的，所以接下来insert函数的返回值就不介绍了。</strong></li><li>std::vector<T>::iterator insert(std::vector<T>::const_iterator&amp; where, iter first, iter last)：将迭代器[first, last)添加到迭代器where指定的位置。</li><li>std::vector<T>::iterator insert(std::vector<T>::const_iterator&amp; where, size_t count, const int&amp; value)：在where处插入count个value。</li><li>std::vector<T>::iterator insert(std::vector<T>::const_iterator&amp; where, const T&amp; value)：在where处插入value。</li><li>std::vector<T>::iterator insert(std::vector<T>::const_iterator&amp; where, T&amp;&amp; value)：在where处插入value，只不过这次以右值引用的形式插入了。</li></ol><h5 id="删除函数"><a href="#删除函数" class="headerlink" title="删除函数"></a>删除函数</h5><ol><li>std::vector<T>::iterator erase(std::vector<T>::const_iterator where)：删除容器迭代器指向的元素。<strong>返回指向被删除元素后面的那个元素的迭代器。</strong></li><li>iterator erase(iterator first, iterator last)：删除容器中[first, last)中的元素。<strong>返回指向被删除元素后面的那个元素的迭代器。</strong></li><li>void pvoid op_back()：删除容器中最后一个元素。</li><li>clear()：删除容器中所有元素。</li></ol><h5 id="遍历函数"><a href="#遍历函数" class="headerlink" title="遍历函数"></a>遍历函数</h5><ol><li>T&amp; at(const size_t pos)：返回pos位置元素的引用。</li><li>const T&amp; at(const size_t pos) const：at函数的常量版本。</li><li>T&amp; front()：返回首元素的引用。</li><li>const T&amp; front() const：front函数的常量版本。</li><li>T&amp; back()：返回尾元素的引用。</li><li>const T&amp; back() const：back函数的常量版本。</li><li>std::vector<T>::iterator begin()：返回指向容器第一个元素的迭代器。</li><li>std::vector<T>::const_iterator begin() const：begin函数的常量版本。</li><li>std::vector<T>::const_iterator cbegin() const：可以主动调用的begin函数的常量版本。</li><li>std::vector<T>::iterator end()：返回指向容器最后一个元素的下一个元数的迭代器。</li></ol><p>end()函数也有两个常量版本，和begin类似，就不写了。</p><ol><li>std::vector<T>::reverse_iterator rbegin()：反向迭代器，指向最后一个元素。</li></ol><p>同样有两个常量版本。</p><ol><li>reverse_iterator rend()：反向迭代器，指向第一个元素之前的元素。</li></ol><p>同样有两个常量版本。</p><h5 id="判断函数"><a href="#判断函数" class="headerlink" title="判断函数"></a>判断函数</h5><ol><li>bool empty() const：判断容器是否为空，若未空，则返回true，否则返回false。</li></ol><h5 id="大小函数"><a href="#大小函数" class="headerlink" title="大小函数"></a>大小函数</h5><ol><li>size_t size() const：返回当前容器中元素的个数。</li><li>size_t capacity() const：返回当前容器不扩张所能容纳的最大元素数量。</li><li>size_t max_size() const：返回当前机器可以存储的元素数量最大值。</li></ol><h5 id="其它函数"><a href="#其它函数" class="headerlink" title="其它函数"></a>其它函数</h5><ol><li>void swap(std::vector<T> &amp; vec)：交换两个同类型容器的的数据。</li><li>void assign(int n, const T&amp; x)：将容器设置为n个x。</li><li>void assign(const_iterator first, const iterator last)：将当前容器的元素设置为[first, last)。</li></ol><p>first,last都是迭代器，可以不是vector类型的迭代器，deque，list类型也可以。</p><ol><li>void assign(const std::initialize_list<T> initList)：将容器元素设置为initialize_list的元素。</li><li>void res(size_t newSize)：将容器的容量设置为newSIze。</li></ol><h4 id="deque的各种函数："><a href="#deque的各种函数：" class="headerlink" title="deque的各种函数："></a>deque的各种函数：</h4><p>deque的各种函数与vector类似，我就不再重复一遍了。</p><p>这里只介绍vector不同的地方：</p><ol><li>deque支持在容器前面插入删除，操作。也就是支持以下的三个函数<ol><li>void push_front(const T&amp; value）；</li><li>void push_front(T&amp;&amp; value)；</li><li>void pop_front()；</li></ol></li></ol><h4 id="list的各种函数"><a href="#list的各种函数" class="headerlink" title="list的各种函数"></a>list的各种函数</h4><p>list和deque类似，只讲一下和deque不同的部分。list都用支持在前面，后面增加，删除。</p><p>list和deque在函数上的唯一区别就是不支持随机缩影，也<strong>就是不支持at函数</strong>。</p><h4 id="string的各种函数"><a href="#string的各种函数" class="headerlink" title="string的各种函数"></a>string的各种函数</h4><p>string虽然也是顺序容器，但因为本质是对字符串的封装，所以和其它容器在用法上有较大区别。</p><ol><li>获取封装字符串的函数。<ol><li>const char* c_str() const：返回string对象内部的函数的指针<strong>。注意，c_str()函数返回的直接就是string对象内部的指针，也就是说string对象指向的对象发生了改变，返回的对象也会发生改变的。</strong></li></ol></li></ol><p><strong>代码演示一下：</strong></p><ul><li><ol><li>const char* data()const：返回string对象内部的函数指针。和c_str()函数的区别就是返回的字符串后面没有’\0’。</li><li>size_t copy(char* const ptr, size_t count, const size_t off) const：</li></ol></li></ul><p>讲string对象的一部分复制到ptr数组中。</p><p>ptr表示复制到哪个数组。</p><p>count表示复制string对象的几个字符</p><p>off表示从string的哪个字符开始复制。</p><ol><li>字符串比较函数。</li></ol><p>compare函数：这个函数重载比较多，用的时候在vs中查看一下就可以了。可以用string对象的任意部分与另一个字符串进行比较，</p><p>其它函数就和vector类似了，同样支持随机选取，支持容器末尾插入。</p><h4 id="forward-list"><a href="#forward-list" class="headerlink" title="forward_list:"></a>forward_list:</h4><p>和list差不多，只不过是没有size()函数，没有push_back和pop_back函数。</p><h4 id="关联容器的函数和顺序容器有差别的也就那么几个"><a href="#关联容器的函数和顺序容器有差别的也就那么几个" class="headerlink" title="关联容器的函数和顺序容器有差别的也就那么几个"></a>关联容器的函数和顺序容器有差别的也就那么几个</h4><p>在讲map，set时基本已经讲过了，这里就不单独讲了。</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> C/C++ </tag>
            
            <tag> 基础语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【诗词鉴赏】雨霖铃·寒蝉凄切</title>
      <link href="/post/23039749.html"/>
      <url>/post/23039749.html</url>
      
        <content type="html"><![CDATA[<div class='poem'><div class='poem-title'>雨霖铃·寒蝉凄切</div><div class='poem-author'>[宋]柳永</div><p>寒蝉凄切，对长亭晚，骤雨初歇。<br>都门帐饮无绪，留恋处，兰舟催发。<br>执手相看泪眼，竟无语凝噎。<br>念去去，千里烟波，暮霭沉沉楚天阔。<br>多情自古伤离别，更那堪，冷落清秋节！</p><p>今宵酒醒何处？杨柳岸，晓风残月。<br>此去经年，应是良辰好景虚设。<br> 便纵有千种风情，更与何人说！</p></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>.</p></div></div><div class="tag link"><a class="link-card" title="雨霖铃·寒蝉凄切" href="https://www.bilibili.com/video/BV16X4y1U7TH/"><div class="left"><img src="https://pic.imgdb.cn/item/66b818e0d9c307b7e9cca75c.jpg"/></div><div class="right"><p class="text">雨霖铃·寒蝉凄切</p><p class="url">https://www.bilibili.com/video/BV16X4y1U7TH/</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> 诗词鉴赏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗词鉴赏 </tag>
            
            <tag> 宋词 </tag>
            
            <tag> 柳永 </tag>
            
            <tag> 雨霖铃·寒蝉凄切 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-CPP学习笔记（2）</title>
      <link href="/post/ebc6996.html"/>
      <url>/post/ebc6996.html</url>
      
        <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="课程视频" href="https://www.bilibili.com/video/BV1nV411T7U3"><div class="left"><img src="https://pic.imgdb.cn/item/66b44b5cd9c307b7e9982e42.jpg"/></div><div class="right"><p class="text">课程视频</p><p class="url">https://www.bilibili.com/video/BV1nV411T7U3</p></div></a></div><h1 id="C-核心编程"><a href="#C-核心编程" class="headerlink" title="C++核心编程"></a>C++核心编程</h1><p>本阶段主要针对C++==面向对象==编程技术做详细讲解，探讨C++中的核心和精髓。</p><h2 id="1-内存分区模型"><a href="#1-内存分区模型" class="headerlink" title="1 内存分区模型"></a>1 内存分区模型</h2><p>C++程序在执行时，将内存大方向划分为<strong>4个区域</strong></p><ul><li>代码区：存放函数体的二进制代码，由操作系统进行管理的</li><li>全局区：存放全局变量和静态变量以及常量</li><li>栈区：由编译器自动分配释放, 存放函数的参数值,局部变量等</li><li>堆区：由程序员分配和释放,若程序员不释放,程序结束时由操作系统回收</li></ul><p><strong>内存四区意义：</strong></p><p>不同区域存放的数据，赋予不同的生命周期, 给我们更大的灵活编程</p><h3 id="1-1-程序运行前"><a href="#1-1-程序运行前" class="headerlink" title="1.1 程序运行前"></a>1.1 程序运行前</h3><p>​    在程序编译后，生成了exe可执行程序，<strong>未执行该程序前</strong>分为两个区域</p><p>​    <strong>代码区：</strong></p><p>​        存放 CPU 执行的机器指令</p><p>​        代码区是<strong>共享</strong>的，共享的目的是对于频繁被执行的程序，只需要在内存中有一份代码即可</p><p>​        代码区是<strong>只读</strong>的，使其只读的原因是防止程序意外地修改了它的指令</p><p>​    <strong>全局区：</strong></p><p>​        全局变量和静态变量存放在此.</p><p>​        全局区还包含了常量区, 字符串常量和其他常量也存放在此.</p><p>​        ==该区域的数据在程序结束后由操作系统释放==.</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//全局变量</span></span><br><span class="line"><span class="type">int</span> g_a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> g_b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//全局常量</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> c_g_a = <span class="number">10</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> c_g_b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//局部变量</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印地址</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;局部变量a地址为： &quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;局部变量b地址为： &quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;全局变量g_a地址为： &quot;</span> &lt;&lt;  (<span class="type">int</span>)&amp;g_a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;全局变量g_b地址为： &quot;</span> &lt;&lt;  (<span class="type">int</span>)&amp;g_b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//静态变量</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> s_a = <span class="number">10</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> s_b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;静态变量s_a地址为： &quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;s_a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;静态变量s_b地址为： &quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;s_b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;字符串常量地址为： &quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;<span class="string">&quot;hello world&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;字符串常量地址为： &quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;<span class="string">&quot;hello world1&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;全局常量c_g_a地址为： &quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;c_g_a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;全局常量c_g_b地址为： &quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;c_g_b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> c_l_a = <span class="number">10</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> c_l_b = <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;局部常量c_l_a地址为： &quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;c_l_a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;局部常量c_l_b地址为： &quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;c_l_b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打印结果：</p><p><img src="https://pic.imgdb.cn/item/66b448a4d9c307b7e9962d23.jpg" alt="code"></p><p>总结：</p><ul><li>C++中在程序运行前分为全局区和代码区</li><li>代码区特点是共享和只读</li><li>全局区中存放全局变量、静态变量、常量</li><li>常量区中存放 const修饰的全局常量  和 字符串常量</li></ul><h3 id="1-2-程序运行后"><a href="#1-2-程序运行后" class="headerlink" title="1.2 程序运行后"></a>1.2 程序运行后</h3><p>​    <strong>栈区：</strong></p><p>​        由编译器自动分配释放, 存放函数的参数值,局部变量等</p><p>​        注意事项：不要返回局部变量的地址，栈区开辟的数据由编译器自动释放</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> * <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">return</span> &amp;a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> *p = <span class="built_in">func</span>();</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    <strong>堆区：</strong></p><p>​        由程序员分配释放,若程序员不释放,程序结束时由操作系统回收</p><p>​        在C++中主要利用new在堆区开辟内存</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span>* <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span>* a = <span class="keyword">new</span> <span class="built_in">int</span>(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> *p = <span class="built_in">func</span>();</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>总结：</strong></p><p>堆区数据由程序员管理开辟和释放</p><p>堆区数据利用new关键字进行开辟内存</p><h3 id="1-3-new操作符"><a href="#1-3-new操作符" class="headerlink" title="1.3 new操作符"></a>1.3 new操作符</h3><p>​    C++中利用==new==操作符在堆区开辟数据</p><p>​    堆区开辟的数据，由程序员手动开辟，手动释放，释放利用操作符 ==delete==</p><p>​    语法：<code>new 数据类型</code></p><p>​    利用new创建的数据，会返回该数据对应的类型的指针</p><p><strong>示例1： 基本语法</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span>* <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span>* a = <span class="keyword">new</span> <span class="built_in">int</span>(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> *p = <span class="built_in">func</span>();</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用delete释放堆区数据</span></span><br><span class="line"><span class="keyword">delete</span> p;</span><br><span class="line"></span><br><span class="line"><span class="comment">//cout &lt;&lt; *p &lt;&lt; endl; //报错，释放的空间不可访问</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>示例2：开辟数组</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//堆区开辟数组</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>* arr = <span class="keyword">new</span> <span class="type">int</span>[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">arr[i] = i + <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//释放数组 delete 后加 []</span></span><br><span class="line"><span class="keyword">delete</span>[] arr;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-引用"><a href="#2-引用" class="headerlink" title="2 引用"></a>2 引用</h2><h3 id="2-1-引用的基本使用"><a href="#2-1-引用的基本使用" class="headerlink" title="2.1 引用的基本使用"></a>2.1 引用的基本使用</h3><p><strong>作用： </strong>给变量起别名</p><p><strong>语法：</strong> <code>数据类型 &amp;别名 = 原名</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> &amp;b = a;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">b = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2-引用注意事项"><a href="#2-2-引用注意事项" class="headerlink" title="2.2 引用注意事项"></a>2.2 引用注意事项</h3><ul><li>引用必须初始化</li><li>引用在初始化后，不可以改变</li></ul><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="comment">//int &amp;c; //错误，引用必须初始化</span></span><br><span class="line"><span class="type">int</span> &amp;c = a; <span class="comment">//一旦初始化后，就不可以更改</span></span><br><span class="line">c = b; <span class="comment">//这是赋值操作，不是更改引用</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c = &quot;</span> &lt;&lt; c &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-引用做函数参数"><a href="#2-3-引用做函数参数" class="headerlink" title="2.3 引用做函数参数"></a>2.3 引用做函数参数</h3><p><strong>作用：</strong>函数传参时，可以利用引用的技术让形参修饰实参</p><p><strong>优点：</strong>可以简化指针修改实参</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 值传递</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">mySwap01</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> temp = a;</span><br><span class="line">a = b;</span><br><span class="line">b = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2. 地址传递</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">mySwap02</span><span class="params">(<span class="type">int</span>* a, <span class="type">int</span>* b)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> temp = *a;</span><br><span class="line">*a = *b;</span><br><span class="line">*b = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3. 引用传递</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">mySwap03</span><span class="params">(<span class="type">int</span>&amp; a, <span class="type">int</span>&amp; b)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> temp = a;</span><br><span class="line">a = b;</span><br><span class="line">b = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">mySwap01</span>(a, b);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a:&quot;</span> &lt;&lt; a &lt;&lt; <span class="string">&quot; b:&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">mySwap02</span>(&amp;a, &amp;b);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a:&quot;</span> &lt;&lt; a &lt;&lt; <span class="string">&quot; b:&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">mySwap03</span>(a, b);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a:&quot;</span> &lt;&lt; a &lt;&lt; <span class="string">&quot; b:&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>总结：通过引用参数产生的效果同按地址传递是一样的。引用的语法更清楚简单</p></blockquote><h3 id="2-4-引用做函数返回值"><a href="#2-4-引用做函数返回值" class="headerlink" title="2.4 引用做函数返回值"></a>2.4 引用做函数返回值</h3><p>作用：引用是可以作为函数的返回值存在的</p><p>注意：<strong>不要返回局部变量引用</strong></p><p>用法：函数调用作为左值</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回局部变量引用</span></span><br><span class="line"><span class="function"><span class="type">int</span>&amp; <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>; <span class="comment">//局部变量</span></span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回静态变量引用</span></span><br><span class="line"><span class="function"><span class="type">int</span>&amp; <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> a = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//不能返回局部变量的引用</span></span><br><span class="line"><span class="type">int</span>&amp; ref = <span class="built_in">test01</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ref = &quot;</span> &lt;&lt; ref &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ref = &quot;</span> &lt;&lt; ref &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果函数做左值，那么必须返回引用</span></span><br><span class="line"><span class="type">int</span>&amp; ref2 = <span class="built_in">test02</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ref2 = &quot;</span> &lt;&lt; ref2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ref2 = &quot;</span> &lt;&lt; ref2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test02</span>() = <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ref2 = &quot;</span> &lt;&lt; ref2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ref2 = &quot;</span> &lt;&lt; ref2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    </p><h3 id="2-5-引用的本质"><a href="#2-5-引用的本质" class="headerlink" title="2.5 引用的本质"></a>2.5 引用的本质</h3><p>本质：<strong>引用的本质在c++内部实现是一个指针常量.</strong></p><p>讲解示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//发现是引用，转换为 int* const ref = &amp;a;</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span>&amp; ref)</span></span>&#123;</span><br><span class="line">ref = <span class="number">100</span>; <span class="comment">// ref是引用，转换为*ref = 100</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//自动转换为 int* const ref = &amp;a; 指针常量是指针指向不可改，也说明为什么引用不可更改</span></span><br><span class="line"><span class="type">int</span>&amp; ref = a; </span><br><span class="line">ref = <span class="number">20</span>; <span class="comment">//内部发现ref是引用，自动帮我们转换为: *ref = 20;</span></span><br><span class="line">    </span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ref:&quot;</span> &lt;&lt; ref &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line"><span class="built_in">func</span>(a);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结论：C++推荐用引用技术，因为语法方便，引用本质是指针常量，但是所有的指针操作编译器都帮我们做了</p><h3 id="2-6-常量引用"><a href="#2-6-常量引用" class="headerlink" title="2.6 常量引用"></a>2.6 常量引用</h3><p><strong>作用：</strong>常量引用主要用来修饰形参，防止误操作</p><p>在函数形参列表中，可以加==const修饰形参==，防止形参改变实参</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引用使用的场景，通常用来修饰形参</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showValue</span><span class="params">(<span class="type">const</span> <span class="type">int</span>&amp; v)</span> </span>&#123;</span><br><span class="line"><span class="comment">//v += 10;</span></span><br><span class="line">cout &lt;&lt; v &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//int&amp; ref = 10;  引用本身需要一个合法的内存空间，因此这行错误</span></span><br><span class="line"><span class="comment">//加入const就可以了，编译器优化代码，int temp = 10; const int&amp; ref = temp;</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>&amp; ref = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ref = 100;  //加入const后不可以修改变量</span></span><br><span class="line">cout &lt;&lt; ref &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数中利用常量引用防止误操作修改实参</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">showValue</span>(a);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-函数提高"><a href="#3-函数提高" class="headerlink" title="3 函数提高"></a>3 函数提高</h2><h3 id="3-1-函数默认参数"><a href="#3-1-函数默认参数" class="headerlink" title="3.1 函数默认参数"></a>3.1 函数默认参数</h3><p>在C++中，函数的形参列表中的形参是可以有默认值的。</p><p>语法：<code>返回值类型  函数名 （参数= 默认值）&#123;&#125;</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">func</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b = <span class="number">10</span>, <span class="type">int</span> c = <span class="number">10</span>)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a + b + c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1. 如果某个位置参数有默认值，那么从这个位置往后，从左向右，必须都要有默认值</span></span><br><span class="line"><span class="comment">//2. 如果函数声明有默认值，函数实现的时候就不能有默认参数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">func2</span><span class="params">(<span class="type">int</span> a = <span class="number">10</span>, <span class="type">int</span> b = <span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">func2</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ret = &quot;</span> &lt;&lt; <span class="built_in">func</span>(<span class="number">20</span>, <span class="number">20</span>) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ret = &quot;</span> &lt;&lt; <span class="built_in">func</span>(<span class="number">100</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-函数占位参数"><a href="#3-2-函数占位参数" class="headerlink" title="3.2 函数占位参数"></a>3.2 函数占位参数</h3><p>C++中函数的形参列表里可以有占位参数，用来做占位，调用函数时必须填补该位置</p><p><strong>语法：</strong> <code>返回值类型 函数名 (数据类型)&#123;&#125;</code></p><p>在现阶段函数的占位参数存在意义不大，但是后面的课程中会用到该技术</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//函数占位参数 ，占位参数也可以有默认参数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span>)</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is func&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">func</span>(<span class="number">10</span>,<span class="number">10</span>); <span class="comment">//占位参数必须填补</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-函数重载"><a href="#3-3-函数重载" class="headerlink" title="3.3 函数重载"></a>3.3 函数重载</h3><h4 id="3-3-1-函数重载概述"><a href="#3-3-1-函数重载概述" class="headerlink" title="3.3.1 函数重载概述"></a>3.3.1 函数重载概述</h4><p><strong>作用：</strong>函数名可以相同，提高复用性</p><p><strong>函数重载满足条件：</strong></p><ul><li>同一个作用域下</li><li>函数名称相同</li><li>函数参数<strong>类型不同</strong>  或者 <strong>个数不同</strong> 或者 <strong>顺序不同</strong></li></ul><p><strong>注意:</strong>  函数的返回值不可以作为函数重载的条件</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//函数重载需要函数都在同一个作用域下</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func 的调用！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func (int a) 的调用！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">double</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func (double a)的调用！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span> a ,<span class="type">double</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func (int a ,double b) 的调用！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">double</span> a ,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func (double a ,int b)的调用！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数返回值不可以作为函数重载条件</span></span><br><span class="line"><span class="comment">//int func(double a, int b)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;func (double a ,int b)的调用！&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">func</span>();</span><br><span class="line"><span class="built_in">func</span>(<span class="number">10</span>);</span><br><span class="line"><span class="built_in">func</span>(<span class="number">3.14</span>);</span><br><span class="line"><span class="built_in">func</span>(<span class="number">10</span>,<span class="number">3.14</span>);</span><br><span class="line"><span class="built_in">func</span>(<span class="number">3.14</span> , <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-3-2-函数重载注意事项"><a href="#3-3-2-函数重载注意事项" class="headerlink" title="3.3.2 函数重载注意事项"></a>3.3.2 函数重载注意事项</h4><ul><li>引用作为重载条件</li><li>函数重载碰到函数默认参数</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//函数重载注意事项</span></span><br><span class="line"><span class="comment">//1、引用作为重载条件</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span> &amp;a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func (int &amp;a) 调用 &quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">const</span> <span class="type">int</span> &amp;a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func (const int &amp;a) 调用 &quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//2、函数重载碰到函数默认参数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func2</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b = <span class="number">10</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func2(int a, int b = 10) 调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func2</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func2(int a) 调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">func</span>(a); <span class="comment">//调用无const</span></span><br><span class="line"><span class="built_in">func</span>(<span class="number">10</span>);<span class="comment">//调用有const</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//func2(10); //碰到默认参数产生歧义，需要避免</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-类和对象"><a href="#4-类和对象" class="headerlink" title="4 类和对象"></a><strong>4</strong> 类和对象</h2><p>C++面向对象的三大特性为：==封装、继承、多态==</p><p>C++认为==万事万物都皆为对象==，对象上有其属性和行为</p><p><strong>例如：</strong></p><p>​    人可以作为对象，属性有姓名、年龄、身高、体重…，行为有走、跑、跳、吃饭、唱歌…</p><p>​    车也可以作为对象，属性有轮胎、方向盘、车灯…,行为有载人、放音乐、放空调…</p><p>​    具有相同性质的==对象==，我们可以抽象称为==类==，人属于人类，车属于车类</p><h3 id="4-1-封装"><a href="#4-1-封装" class="headerlink" title="4.1 封装"></a>4.1 封装</h3><h4 id="4-1-1-封装的意义"><a href="#4-1-1-封装的意义" class="headerlink" title="4.1.1  封装的意义"></a>4.1.1  封装的意义</h4><p>封装是C++面向对象三大特性之一</p><p>封装的意义：</p><ul><li>将属性和行为作为一个整体，表现生活中的事物</li><li>将属性和行为加以权限控制</li></ul><p><strong>封装意义一：</strong></p><p>​    在设计类的时候，属性和行为写在一起，表现事物</p><p><strong>语法：</strong> <code>class 类名&#123;   访问权限： 属性  / 行为  &#125;;</code></p><p><strong>示例1：</strong>设计一个圆类，求圆的周长</p><p><strong>示例代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//圆周率</span></span><br><span class="line"><span class="type">const</span> <span class="type">double</span> PI = <span class="number">3.14</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1、封装的意义</span></span><br><span class="line"><span class="comment">//将属性和行为作为一个整体，用来表现生活中的事物</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//封装一个圆类，求圆的周长</span></span><br><span class="line"><span class="comment">//class代表设计一个类，后面跟着的是类名</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Circle</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:  <span class="comment">//访问权限  公共的权限</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//属性</span></span><br><span class="line"><span class="type">int</span> m_r;<span class="comment">//半径</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//行为</span></span><br><span class="line"><span class="comment">//获取到圆的周长</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">calculateZC</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//2 * pi  * r</span></span><br><span class="line"><span class="comment">//获取圆的周长</span></span><br><span class="line"><span class="keyword">return</span>  <span class="number">2</span> * PI * m_r;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过圆类，创建圆的对象</span></span><br><span class="line"><span class="comment">// c1就是一个具体的圆</span></span><br><span class="line">Circle c1;</span><br><span class="line">c1.m_r = <span class="number">10</span>; <span class="comment">//给圆对象的半径 进行赋值操作</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2 * pi * 10 = = 62.8</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;圆的周长为： &quot;</span> &lt;&lt; c1.<span class="built_in">calculateZC</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>示例2：</strong>设计一个学生类，属性有姓名和学号，可以给姓名和学号赋值，可以显示学生的姓名和学号</p><p><strong>示例2代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//学生类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setName</span><span class="params">(string name)</span> </span>&#123;</span><br><span class="line">m_name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setID</span><span class="params">(<span class="type">int</span> id)</span> </span>&#123;</span><br><span class="line">m_id = id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showStudent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; m_name &lt;&lt; <span class="string">&quot; ID:&quot;</span> &lt;&lt; m_id &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string m_name;</span><br><span class="line"><span class="type">int</span> m_id;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Student stu;</span><br><span class="line">stu.<span class="built_in">setName</span>(<span class="string">&quot;德玛西亚&quot;</span>);</span><br><span class="line">stu.<span class="built_in">setID</span>(<span class="number">250</span>);</span><br><span class="line">stu.<span class="built_in">showStudent</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>封装意义二：</strong></p><p>类在设计时，可以把属性和行为放在不同的权限下，加以控制</p><p>访问权限有三种：</p><ol><li>public        公共权限  </li><li>protected 保护权限</li><li>private      私有权限</li></ol><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//三种权限</span></span><br><span class="line"><span class="comment">//公共权限  public     类内可以访问  类外可以访问</span></span><br><span class="line"><span class="comment">//保护权限  protected  类内可以访问  类外不可以访问</span></span><br><span class="line"><span class="comment">//私有权限  private    类内可以访问  类外不可以访问</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//姓名  公共权限</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string m_Name;</span><br><span class="line"></span><br><span class="line"><span class="comment">//汽车  保护权限</span></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">string m_Car;</span><br><span class="line"></span><br><span class="line"><span class="comment">//银行卡密码  私有权限</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> m_Password;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">m_Name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">m_Car = <span class="string">&quot;拖拉机&quot;</span>;</span><br><span class="line">m_Password = <span class="number">123456</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Person p;</span><br><span class="line">p.m_Name = <span class="string">&quot;李四&quot;</span>;</span><br><span class="line"><span class="comment">//p.m_Car = &quot;奔驰&quot;;  //保护权限类外访问不到</span></span><br><span class="line"><span class="comment">//p.m_Password = 123; //私有权限类外访问不到</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-1-2-struct和class区别"><a href="#4-1-2-struct和class区别" class="headerlink" title="4.1.2 struct和class区别"></a>4.1.2 struct和class区别</h4><p>在C++中 struct和class唯一的<strong>区别</strong>就在于 <strong>默认的访问权限不同</strong></p><p>区别：</p><ul><li>struct 默认权限为公共</li><li>class   默认权限为私有</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">C1</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span>  m_A; <span class="comment">//默认是私有权限</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">C2</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> m_A;  <span class="comment">//默认是公共权限</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">C1 c1;</span><br><span class="line">c1.m_A = <span class="number">10</span>; <span class="comment">//错误，访问权限是私有</span></span><br><span class="line"></span><br><span class="line">C2 c2;</span><br><span class="line">c2.m_A = <span class="number">10</span>; <span class="comment">//正确，访问权限是公共</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-1-3-成员属性设置为私有"><a href="#4-1-3-成员属性设置为私有" class="headerlink" title="4.1.3 成员属性设置为私有"></a>4.1.3 成员属性设置为私有</h4><p><strong>优点1：</strong>将所有成员属性设置为私有，可以自己控制读写权限</p><p><strong>优点2：</strong>对于写权限，我们可以检测数据的有效性</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="comment">//姓名设置可读可写</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setName</span><span class="params">(string name)</span> </span>&#123;</span><br><span class="line">m_Name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">string <span class="title">getName</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_Name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取年龄 </span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_Age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//设置年龄</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setAge</span><span class="params">(<span class="type">int</span> age)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (age &lt; <span class="number">0</span> || age &gt; <span class="number">150</span>) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;你个老妖精!&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">m_Age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//情人设置为只写</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setLover</span><span class="params">(string lover)</span> </span>&#123;</span><br><span class="line">m_Lover = lover;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string m_Name; <span class="comment">//可读可写  姓名</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> m_Age; <span class="comment">//只读  年龄</span></span><br><span class="line"></span><br><span class="line">string m_Lover; <span class="comment">//只写  情人</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Person p;</span><br><span class="line"><span class="comment">//姓名设置</span></span><br><span class="line">p.<span class="built_in">setName</span>(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名： &quot;</span> &lt;&lt; p.<span class="built_in">getName</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//年龄设置</span></span><br><span class="line">p.<span class="built_in">setAge</span>(<span class="number">50</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;年龄： &quot;</span> &lt;&lt; p.<span class="built_in">getAge</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//情人设置</span></span><br><span class="line">p.<span class="built_in">setLover</span>(<span class="string">&quot;苍井&quot;</span>);</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;情人： &quot; &lt;&lt; p.m_Lover &lt;&lt; endl;  //只写属性，不可以读取</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>练习案例1：设计立方体类</strong></p><p>设计立方体类(Cube)</p><p>求出立方体的面积和体积</p><p>分别用全局函数和成员函数判断两个立方体是否相等。</p><p><img src="https://pic.imgdb.cn/item/66b448a4d9c307b7e9962d43.jpg" alt="code"></p><p><strong>练习案例2：点和圆的关系</strong></p><p>设计一个圆形类（Circle），和一个点类（Point），计算点和圆的关系。</p><p><img src="https://pic.imgdb.cn/item/66b448a4d9c307b7e9962d77.jpg" alt="code"></p><h3 id="4-2-对象的初始化和清理"><a href="#4-2-对象的初始化和清理" class="headerlink" title="4.2 对象的初始化和清理"></a>4.2 对象的初始化和清理</h3><ul><li>生活中我们买的电子产品都基本会有出厂设置，在某一天我们不用时候也会删除一些自己信息数据保证安全</li><li>C++中的面向对象来源于生活，每个对象也都会有初始设置以及 对象销毁前的清理数据的设置。</li></ul><h4 id="4-2-1-构造函数和析构函数"><a href="#4-2-1-构造函数和析构函数" class="headerlink" title="4.2.1 构造函数和析构函数"></a>4.2.1 构造函数和析构函数</h4><p>对象的<strong>初始化和清理</strong>也是两个非常重要的安全问题</p><p>​    一个对象或者变量没有初始状态，对其使用后果是未知</p><p>​    同样的使用完一个对象或变量，没有及时清理，也会造成一定的安全问题</p><p>c++利用了<strong>构造函数</strong>和<strong>析构函数</strong>解决上述问题，这两个函数将会被编译器自动调用，完成对象初始化和清理工作。</p><p>对象的初始化和清理工作是编译器强制要我们做的事情，因此如果<strong>我们不提供构造和析构，编译器会提供</strong></p><p><strong>编译器提供的构造函数和析构函数是空实现。</strong></p><ul><li>构造函数：主要作用在于创建对象时为对象的成员属性赋值，构造函数由编译器自动调用，无须手动调用。</li><li>析构函数：主要作用在于对象<strong>销毁前</strong>系统自动调用，执行一些清理工作。</li></ul><p><strong>构造函数语法：</strong><code>类名()&#123;&#125;</code></p><ol><li>构造函数，没有返回值也不写void</li><li>函数名称与类名相同</li><li>构造函数可以有参数，因此可以发生重载</li><li>程序在调用对象时候会自动调用构造，无须手动调用,而且只会调用一次</li></ol><p><strong>析构函数语法：</strong> <code>~类名()&#123;&#125;</code></p><ol><li>析构函数，没有返回值也不写void</li><li>函数名称与类名相同,在名称前加上符号  ~</li><li>析构函数不可以有参数，因此不可以发生重载</li><li>程序在对象销毁前会自动调用析构，无须手动调用,而且只会调用一次</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line"><span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person的构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//析构函数</span></span><br><span class="line">~<span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person的析构函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-2-构造函数的分类及调用"><a href="#4-2-2-构造函数的分类及调用" class="headerlink" title="4.2.2 构造函数的分类及调用"></a>4.2.2 构造函数的分类及调用</h4><p>两种分类方式：</p><p>​    按参数分为： 有参构造和无参构造</p><p>​    按类型分为： 普通构造和拷贝构造</p><p>三种调用方式：</p><p>​    括号法</p><p>​    显示法</p><p>​    隐式转换法</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1、构造函数分类</span></span><br><span class="line"><span class="comment">// 按照参数分类分为 有参和无参构造   无参又称为默认构造函数</span></span><br><span class="line"><span class="comment">// 按照类型分类分为 普通构造和拷贝构造</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//无参（默认）构造函数</span></span><br><span class="line"><span class="built_in">Person</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;无参构造函数!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//有参构造函数</span></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> a) &#123;</span><br><span class="line">age = a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;有参构造函数!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//拷贝构造函数</span></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">const</span> Person&amp; p) &#123;</span><br><span class="line">age = p.age;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;拷贝构造函数!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//析构函数</span></span><br><span class="line">~<span class="built_in">Person</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;析构函数!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、构造函数的调用</span></span><br><span class="line"><span class="comment">//调用无参构造函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Person p; <span class="comment">//调用无参构造函数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//调用有参的构造函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.1  括号法，常用</span></span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="comment">//注意1：调用无参构造函数不能加括号，如果加了编译器认为这是一个函数声明</span></span><br><span class="line"><span class="comment">//Person p2();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.2 显式法</span></span><br><span class="line">Person p2 = <span class="built_in">Person</span>(<span class="number">10</span>); </span><br><span class="line">Person p3 = <span class="built_in">Person</span>(p2);</span><br><span class="line"><span class="comment">//Person(10)单独写就是匿名对象  当前行结束之后，马上析构</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.3 隐式转换法</span></span><br><span class="line">Person p4 = <span class="number">10</span>; <span class="comment">// Person p4 = Person(10); </span></span><br><span class="line">Person p5 = p4; <span class="comment">// Person p5 = Person(p4); </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//注意2：不能利用 拷贝构造函数 初始化匿名对象 编译器认为是对象声明</span></span><br><span class="line"><span class="comment">//Person p5(p4);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="comment">//test02();</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-3-拷贝构造函数调用时机"><a href="#4-2-3-拷贝构造函数调用时机" class="headerlink" title="4.2.3 拷贝构造函数调用时机"></a>4.2.3 拷贝构造函数调用时机</h4><p>C++中拷贝构造函数调用时机通常有三种情况</p><ul><li>使用一个已经创建完毕的对象来初始化一个新对象</li><li>值传递的方式给函数参数传值</li><li>以值方式返回局部对象</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Person</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;无参构造函数!&quot;</span> &lt;&lt; endl;</span><br><span class="line">mAge = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> age) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;有参构造函数!&quot;</span> &lt;&lt; endl;</span><br><span class="line">mAge = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Person</span>(<span class="type">const</span> Person&amp; p) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;拷贝构造函数!&quot;</span> &lt;&lt; endl;</span><br><span class="line">mAge = p.mAge;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//析构函数在释放内存之前调用</span></span><br><span class="line">~<span class="built_in">Person</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;析构函数!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> mAge;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1. 使用一个已经创建完毕的对象来初始化一个新对象</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function">Person <span class="title">man</span><span class="params">(<span class="number">100</span>)</span></span>; <span class="comment">//p对象已经创建完毕</span></span><br><span class="line"><span class="function">Person <span class="title">newman</span><span class="params">(man)</span></span>; <span class="comment">//调用拷贝构造函数</span></span><br><span class="line">Person newman2 = man; <span class="comment">//拷贝构造</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Person newman3;</span></span><br><span class="line"><span class="comment">//newman3 = man; //不是调用拷贝构造函数，赋值操作</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2. 值传递的方式给函数参数传值</span></span><br><span class="line"><span class="comment">//相当于Person p1 = p;</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">doWork</span><span class="params">(Person p1)</span> </span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Person p; <span class="comment">//无参构造函数</span></span><br><span class="line"><span class="built_in">doWork</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3. 以值方式返回局部对象</span></span><br><span class="line"><span class="function">Person <span class="title">doWork2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p1;</span><br><span class="line">cout &lt;&lt; (<span class="type">int</span> *)&amp;p1 &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> p1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p = <span class="built_in">doWork2</span>();</span><br><span class="line">cout &lt;&lt; (<span class="type">int</span> *)&amp;p &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//test01();</span></span><br><span class="line"><span class="comment">//test02();</span></span><br><span class="line"><span class="built_in">test03</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-4-构造函数调用规则"><a href="#4-2-4-构造函数调用规则" class="headerlink" title="4.2.4 构造函数调用规则"></a>4.2.4 构造函数调用规则</h4><p>默认情况下，c++编译器至少给一个类添加3个函数</p><p>1．默认构造函数(无参，函数体为空)</p><p>2．默认析构函数(无参，函数体为空)</p><p>3．默认拷贝构造函数，对属性进行值拷贝</p><p>构造函数调用规则如下：</p><ul><li>如果用户定义有参构造函数，c++不在提供默认无参构造，但是会提供默认拷贝构造</li></ul><ul><li>如果用户定义拷贝构造函数，c++不会再提供其他构造函数</li></ul><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//无参（默认）构造函数</span></span><br><span class="line"><span class="built_in">Person</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;无参构造函数!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//有参构造函数</span></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> a) &#123;</span><br><span class="line">age = a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;有参构造函数!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//拷贝构造函数</span></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">const</span> Person&amp; p) &#123;</span><br><span class="line">age = p.age;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;拷贝构造函数!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//析构函数</span></span><br><span class="line">~<span class="built_in">Person</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;析构函数!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">18</span>)</span></span>;</span><br><span class="line"><span class="comment">//如果不写拷贝构造，编译器会自动添加拷贝构造，并且做浅拷贝操作</span></span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(p1)</span></span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2的年龄为： &quot;</span> &lt;&lt; p2.age &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//如果用户提供有参构造，编译器不会提供默认构造，会提供拷贝构造</span></span><br><span class="line">Person p1; <span class="comment">//此时如果用户自己没有提供默认构造，会出错</span></span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">10</span>)</span></span>; <span class="comment">//用户提供的有参</span></span><br><span class="line"><span class="function">Person <span class="title">p3</span><span class="params">(p2)</span></span>; <span class="comment">//此时如果用户没有提供拷贝构造，编译器会提供</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果用户提供拷贝构造，编译器不会提供其他构造函数</span></span><br><span class="line">Person p4; <span class="comment">//此时如果用户自己没有提供默认构造，会出错</span></span><br><span class="line"><span class="function">Person <span class="title">p5</span><span class="params">(<span class="number">10</span>)</span></span>; <span class="comment">//此时如果用户自己没有提供有参，会出错</span></span><br><span class="line"><span class="function">Person <span class="title">p6</span><span class="params">(p5)</span></span>; <span class="comment">//用户自己提供拷贝构造</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-5-深拷贝与浅拷贝"><a href="#4-2-5-深拷贝与浅拷贝" class="headerlink" title="4.2.5 深拷贝与浅拷贝"></a>4.2.5 深拷贝与浅拷贝</h4><p>深浅拷贝是面试经典问题，也是常见的一个坑</p><p>浅拷贝：简单的赋值拷贝操作</p><p>深拷贝：在堆区重新申请空间，进行拷贝操作</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//无参（默认）构造函数</span></span><br><span class="line"><span class="built_in">Person</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;无参构造函数!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//有参构造函数</span></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> age ,<span class="type">int</span> height) &#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;有参构造函数!&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">m_age = age;</span><br><span class="line">m_height = <span class="keyword">new</span> <span class="built_in">int</span>(height);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//拷贝构造函数  </span></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">const</span> Person&amp; p) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;拷贝构造函数!&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//如果不利用深拷贝在堆区创建新内存，会导致浅拷贝带来的重复释放堆区问题</span></span><br><span class="line">m_age = p.m_age;</span><br><span class="line">m_height = <span class="keyword">new</span> <span class="built_in">int</span>(*p.m_height);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//析构函数</span></span><br><span class="line">~<span class="built_in">Person</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;析构函数!&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (m_height != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> m_height;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> m_age;</span><br><span class="line"><span class="type">int</span>* m_height;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">18</span>, <span class="number">180</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(p1)</span></span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1的年龄： &quot;</span> &lt;&lt; p1.m_age &lt;&lt; <span class="string">&quot; 身高： &quot;</span> &lt;&lt; *p1.m_height &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2的年龄： &quot;</span> &lt;&lt; p2.m_age &lt;&lt; <span class="string">&quot; 身高： &quot;</span> &lt;&lt; *p2.m_height &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：如果属性有在堆区开辟的，一定要自己提供拷贝构造函数，防止浅拷贝带来的问题</p></blockquote><h4 id="4-2-6-初始化列表"><a href="#4-2-6-初始化列表" class="headerlink" title="4.2.6 初始化列表"></a>4.2.6 初始化列表</h4><p><strong>作用：</strong></p><p>C++提供了初始化列表语法，用来初始化属性</p><p><strong>语法：</strong><code>构造函数()：属性1(值1),属性2（值2）... &#123;&#125;</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="comment">////传统方式初始化</span></span><br><span class="line"><span class="comment">//Person(int a, int b, int c) &#123;</span></span><br><span class="line"><span class="comment">//m_A = a;</span></span><br><span class="line"><span class="comment">//m_B = b;</span></span><br><span class="line"><span class="comment">//m_C = c;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化列表方式初始化</span></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> c) :<span class="built_in">m_A</span>(a), <span class="built_in">m_B</span>(b), <span class="built_in">m_C</span>(c) &#123;&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PrintPerson</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;mA:&quot;</span> &lt;&lt; m_A &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;mB:&quot;</span> &lt;&lt; m_B &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;mC:&quot;</span> &lt;&lt; m_C &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> m_A;</span><br><span class="line"><span class="type">int</span> m_B;</span><br><span class="line"><span class="type">int</span> m_C;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function">Person <span class="title">p</span><span class="params">(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span></span>;</span><br><span class="line">p.<span class="built_in">PrintPerson</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-7-类对象作为类成员"><a href="#4-2-7-类对象作为类成员" class="headerlink" title="4.2.7 类对象作为类成员"></a>4.2.7 类对象作为类成员</h4><p>C++类中的成员可以是另一个类的对象，我们称该成员为 对象成员</p><p>例如：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span></span><br><span class="line">&#123;</span><br><span class="line">    A a；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>B类中有对象A作为成员，A为对象成员</p><p>那么当创建B对象时，A与B的构造和析构的顺序是谁先谁后？</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Phone</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Phone</span>(string name)</span><br><span class="line">&#123;</span><br><span class="line">m_PhoneName = name;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Phone构造&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">~<span class="built_in">Phone</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Phone析构&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">string m_PhoneName;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化列表可以告诉编译器调用哪一个构造函数</span></span><br><span class="line"><span class="built_in">Person</span>(string name, string pName) :<span class="built_in">m_Name</span>(name), <span class="built_in">m_Phone</span>(pName)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person构造&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">~<span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person析构&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">playGame</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; m_Name &lt;&lt; <span class="string">&quot; 使用&quot;</span> &lt;&lt; m_Phone.m_PhoneName &lt;&lt; <span class="string">&quot; 牌手机! &quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">string m_Name;</span><br><span class="line">Phone m_Phone;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//当类中成员是其他类对象时，我们称该成员为 对象成员</span></span><br><span class="line"><span class="comment">//构造的顺序是 ：先调用对象成员的构造，再调用本类构造</span></span><br><span class="line"><span class="comment">//析构顺序与构造相反</span></span><br><span class="line"><span class="function">Person <span class="title">p</span><span class="params">(<span class="string">&quot;张三&quot;</span> , <span class="string">&quot;苹果X&quot;</span>)</span></span>;</span><br><span class="line">p.<span class="built_in">playGame</span>();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-8-静态成员"><a href="#4-2-8-静态成员" class="headerlink" title="4.2.8 静态成员"></a>4.2.8 静态成员</h4><p>静态成员就是在成员变量和成员函数前加上关键字static，称为静态成员</p><p>静态成员分为：</p><ul><li>静态成员变量<ul><li>所有对象共享同一份数据</li><li>在编译阶段分配内存</li><li>类内声明，类外初始化</li></ul></li><li>静态成员函数<ul><li>所有对象共享同一个函数</li><li>静态成员函数只能访问静态成员变量</li></ul></li></ul><p><strong>示例1 ：</strong>静态成员变量</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> m_A; <span class="comment">//静态成员变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//静态成员变量特点：</span></span><br><span class="line"><span class="comment">//1 在编译阶段分配内存</span></span><br><span class="line"><span class="comment">//2 类内声明，类外初始化</span></span><br><span class="line"><span class="comment">//3 所有对象共享同一份数据</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> m_B; <span class="comment">//静态成员变量也是有访问权限的</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> Person::m_A = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> Person::m_B = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//静态成员变量两种访问方式</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1、通过对象</span></span><br><span class="line">Person p1;</span><br><span class="line">p1.m_A = <span class="number">100</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1.m_A = &quot;</span> &lt;&lt; p1.m_A &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">Person p2;</span><br><span class="line">p2.m_A = <span class="number">200</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1.m_A = &quot;</span> &lt;&lt; p1.m_A &lt;&lt; endl; <span class="comment">//共享同一份数据</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2.m_A = &quot;</span> &lt;&lt; p2.m_A &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、通过类名</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;m_A = &quot;</span> &lt;&lt; Person::m_A &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;m_B = &quot; &lt;&lt; Person::m_B &lt;&lt; endl; //私有权限访问不到</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>示例2：</strong>静态成员函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="comment">//静态成员函数特点：</span></span><br><span class="line"><span class="comment">//1 程序共享一个函数</span></span><br><span class="line"><span class="comment">//2 静态成员函数只能访问静态成员变量</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">m_A = <span class="number">100</span>;</span><br><span class="line"><span class="comment">//m_B = 100; //错误，不可以访问非静态成员变量</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> m_A; <span class="comment">//静态成员变量</span></span><br><span class="line"><span class="type">int</span> m_B; <span class="comment">// </span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"></span><br><span class="line"><span class="comment">//静态成员函数也是有访问权限的</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">func2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func2调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> Person::m_A = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//静态成员变量两种访问方式</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1、通过对象</span></span><br><span class="line">Person p1;</span><br><span class="line">p1.<span class="built_in">func</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、通过类名</span></span><br><span class="line">Person::<span class="built_in">func</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//Person::func2(); //私有权限访问不到</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-3-C-对象模型和this指针"><a href="#4-3-C-对象模型和this指针" class="headerlink" title="4.3 C++对象模型和this指针"></a>4.3 C++对象模型和this指针</h3><h4 id="4-3-1-成员变量和成员函数分开存储"><a href="#4-3-1-成员变量和成员函数分开存储" class="headerlink" title="4.3.1 成员变量和成员函数分开存储"></a>4.3.1 成员变量和成员函数分开存储</h4><p>在C++中，类内的成员变量和成员函数分开存储</p><p>只有非静态成员变量才属于类的对象上</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Person</span>() &#123;</span><br><span class="line">mA = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//非静态成员变量占对象空间</span></span><br><span class="line"><span class="type">int</span> mA;</span><br><span class="line"><span class="comment">//静态成员变量不占对象空间</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> mB; </span><br><span class="line"><span class="comment">//函数也不占对象空间，所有函数共享一个函数实例</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;mA:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;mA &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//静态成员函数也不占对象空间</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">sfunc</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(Person) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-3-2-this指针概念"><a href="#4-3-2-this指针概念" class="headerlink" title="4.3.2 this指针概念"></a>4.3.2 this指针概念</h4><p>通过4.3.1我们知道在C++中成员变量和成员函数是分开存储的</p><p>每一个非静态成员函数只会诞生一份函数实例，也就是说多个同类型的对象会共用一块代码</p><p>那么问题是：这一块代码是如何区分那个对象调用自己的呢？</p><p>c++通过提供特殊的对象指针，this指针，解决上述问题。<strong>this指针指向被调用的成员函数所属的对象</strong></p><p>this指针是隐含每一个非静态成员函数内的一种指针</p><p>this指针不需要定义，直接使用即可</p><p>this指针的用途：</p><ul><li>当形参和成员变量同名时，可用this指针来区分</li><li>在类的非静态成员函数中返回对象本身，可使用return *this</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> age)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//1、当形参和成员变量同名时，可用this指针来区分</span></span><br><span class="line"><span class="keyword">this</span>-&gt;age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Person&amp; <span class="title">PersonAddPerson</span><span class="params">(Person p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;age += p.age;</span><br><span class="line"><span class="comment">//返回对象本身</span></span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1.age = &quot;</span> &lt;&lt; p1.age &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line">p2.<span class="built_in">PersonAddPerson</span>(p1).<span class="built_in">PersonAddPerson</span>(p1).<span class="built_in">PersonAddPerson</span>(p1);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2.age = &quot;</span> &lt;&lt; p2.age &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-3-3-空指针访问成员函数"><a href="#4-3-3-空指针访问成员函数" class="headerlink" title="4.3.3 空指针访问成员函数"></a>4.3.3 空指针访问成员函数</h4><p>C++中空指针也是可以调用成员函数的，但是也要注意有没有用到this指针</p><p>如果用到this指针，需要加以判断保证代码的健壮性</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//空指针访问成员函数</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ShowClassName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我是Person类!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ShowPerson</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span> == <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; mAge &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> mAge;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person * p = <span class="literal">NULL</span>;</span><br><span class="line">p-&gt;<span class="built_in">ShowClassName</span>(); <span class="comment">//空指针，可以调用成员函数</span></span><br><span class="line">p-&gt;<span class="built_in">ShowPerson</span>();  <span class="comment">//但是如果成员函数中用到了this指针，就不可以了</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-3-4-const修饰成员函数"><a href="#4-3-4-const修饰成员函数" class="headerlink" title="4.3.4 const修饰成员函数"></a>4.3.4 const修饰成员函数</h4><p><strong>常函数：</strong></p><ul><li>成员函数后加const后我们称为这个函数为<strong>常函数</strong></li><li>常函数内不可以修改成员属性</li><li>成员属性声明时加关键字mutable后，在常函数中依然可以修改</li></ul><p><strong>常对象：</strong></p><ul><li>声明对象前加const称该对象为常对象</li><li>常对象只能调用常函数</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Person</span>() &#123;</span><br><span class="line">m_A = <span class="number">0</span>;</span><br><span class="line">m_B = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//this指针的本质是一个指针常量，指针的指向不可修改</span></span><br><span class="line"><span class="comment">//如果想让指针指向的值也不可以修改，需要声明常函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ShowPerson</span><span class="params">()</span> <span class="type">const</span> </span>&#123;</span><br><span class="line"><span class="comment">//const Type* const pointer;</span></span><br><span class="line"><span class="comment">//this = NULL; //不能修改指针的指向 Person* const this;</span></span><br><span class="line"><span class="comment">//this-&gt;mA = 100; //但是this指针指向的对象的数据是可以修改的</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//const修饰成员函数，表示指针指向的内存空间的数据不能修改，除了mutable修饰的变量</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_B = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyFunc</span><span class="params">()</span> <span class="type">const</span> </span>&#123;</span><br><span class="line"><span class="comment">//mA = 10000;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> m_A;</span><br><span class="line"><span class="keyword">mutable</span> <span class="type">int</span> m_B; <span class="comment">//可修改 可变的</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//const修饰对象  常对象</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> Person person; <span class="comment">//常量对象  </span></span><br><span class="line">cout &lt;&lt; person.m_A &lt;&lt; endl;</span><br><span class="line"><span class="comment">//person.mA = 100; //常对象不能修改成员变量的值,但是可以访问</span></span><br><span class="line">person.m_B = <span class="number">100</span>; <span class="comment">//但是常对象可以修改mutable修饰成员变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//常对象访问成员函数</span></span><br><span class="line">person.<span class="built_in">MyFunc</span>(); <span class="comment">//常对象不能调用const的函数</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-4-友元"><a href="#4-4-友元" class="headerlink" title="4.4 友元"></a>4.4 友元</h3><p>生活中你的家有客厅(Public)，有你的卧室(Private)</p><p>客厅所有来的客人都可以进去，但是你的卧室是私有的，也就是说只有你能进去</p><p>但是呢，你也可以允许你的好闺蜜好基友进去。</p><p>在程序里，有些私有属性 也想让类外特殊的一些函数或者类进行访问，就需要用到友元的技术</p><p>友元的目的就是让一个函数或者类 访问另一个类中私有成员</p><p>友元的关键字为  ==friend==</p><p>友元的三种实现</p><ul><li>全局函数做友元</li><li>类做友元</li><li>成员函数做友元</li></ul><h4 id="4-4-1-全局函数做友元"><a href="#4-4-1-全局函数做友元" class="headerlink" title="4.4.1 全局函数做友元"></a>4.4.1 全局函数做友元</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Building</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//告诉编译器 goodGay全局函数 是 Building类的好朋友，可以访问类中的私有内容</span></span><br><span class="line"><span class="function"><span class="keyword">friend</span> <span class="type">void</span> <span class="title">goodGay</span><span class="params">(Building * building)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="built_in">Building</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_SittingRoom = <span class="string">&quot;客厅&quot;</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_BedRoom = <span class="string">&quot;卧室&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string m_SittingRoom; <span class="comment">//客厅</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string m_BedRoom; <span class="comment">//卧室</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">goodGay</span><span class="params">(Building * building)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;好基友正在访问： &quot;</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;好基友正在访问： &quot;</span> &lt;&lt; building-&gt;m_BedRoom &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Building b;</span><br><span class="line"><span class="built_in">goodGay</span>(&amp;b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-4-2-类做友元"><a href="#4-4-2-类做友元" class="headerlink" title="4.4.2 类做友元"></a>4.4.2 类做友元</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Building</span>;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">goodGay</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="built_in">goodGay</span>();</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">visit</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">Building *building;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Building</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//告诉编译器 goodGay类是Building类的好朋友，可以访问到Building类中私有内容</span></span><br><span class="line"><span class="keyword">friend</span> <span class="keyword">class</span> <span class="title class_">goodGay</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Building</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string m_SittingRoom; <span class="comment">//客厅</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string m_BedRoom;<span class="comment">//卧室</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Building::<span class="built_in">Building</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_SittingRoom = <span class="string">&quot;客厅&quot;</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_BedRoom = <span class="string">&quot;卧室&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">goodGay::<span class="built_in">goodGay</span>()</span><br><span class="line">&#123;</span><br><span class="line">building = <span class="keyword">new</span> Building;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">goodGay::visit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;好基友正在访问&quot;</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;好基友正在访问&quot;</span> &lt;&lt; building-&gt;m_BedRoom &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">goodGay gg;</span><br><span class="line">gg.<span class="built_in">visit</span>();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-4-3-成员函数做友元"><a href="#4-4-3-成员函数做友元" class="headerlink" title="4.4.3 成员函数做友元"></a>4.4.3 成员函数做友元</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Building</span>;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">goodGay</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="built_in">goodGay</span>();</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">visit</span><span class="params">()</span></span>; <span class="comment">//只让visit函数作为Building的好朋友，可以发访问Building中私有内容</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">visit2</span><span class="params">()</span></span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">Building *building;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Building</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//告诉编译器  goodGay类中的visit成员函数 是Building好朋友，可以访问私有内容</span></span><br><span class="line"><span class="function"><span class="keyword">friend</span> <span class="type">void</span> <span class="title">goodGay::visit</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Building</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string m_SittingRoom; <span class="comment">//客厅</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string m_BedRoom;<span class="comment">//卧室</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Building::<span class="built_in">Building</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_SittingRoom = <span class="string">&quot;客厅&quot;</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_BedRoom = <span class="string">&quot;卧室&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">goodGay::<span class="built_in">goodGay</span>()</span><br><span class="line">&#123;</span><br><span class="line">building = <span class="keyword">new</span> Building;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">goodGay::visit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;好基友正在访问&quot;</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;好基友正在访问&quot;</span> &lt;&lt; building-&gt;m_BedRoom &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">goodGay::visit2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;好基友正在访问&quot;</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; endl;</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;好基友正在访问&quot; &lt;&lt; building-&gt;m_BedRoom &lt;&lt; endl;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">goodGay  gg;</span><br><span class="line">gg.<span class="built_in">visit</span>();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-5-运算符重载"><a href="#4-5-运算符重载" class="headerlink" title="4.5 运算符重载"></a>4.5 运算符重载</h3><p>运算符重载概念：对已有的运算符重新进行定义，赋予其另一种功能，以适应不同的数据类型</p><h4 id="4-5-1-加号运算符重载"><a href="#4-5-1-加号运算符重载" class="headerlink" title="4.5.1 加号运算符重载"></a>4.5.1 加号运算符重载</h4><p>作用：实现两个自定义数据类型相加的运算</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Person</span>() &#123;&#125;;</span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> a, <span class="type">int</span> b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_A = a;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_B = b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//成员函数实现 + 号运算符重载</span></span><br><span class="line">Person <span class="keyword">operator</span>+(<span class="type">const</span> Person&amp; p) &#123;</span><br><span class="line">Person temp;</span><br><span class="line">temp.m_A = <span class="keyword">this</span>-&gt;m_A + p.m_A;</span><br><span class="line">temp.m_B = <span class="keyword">this</span>-&gt;m_B + p.m_B;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> m_A;</span><br><span class="line"><span class="type">int</span> m_B;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//全局函数实现 + 号运算符重载</span></span><br><span class="line"><span class="comment">//Person operator+(const Person&amp; p1, const Person&amp; p2) &#123;</span></span><br><span class="line"><span class="comment">//Person temp(0, 0);</span></span><br><span class="line"><span class="comment">//temp.m_A = p1.m_A + p2.m_A;</span></span><br><span class="line"><span class="comment">//temp.m_B = p1.m_B + p2.m_B;</span></span><br><span class="line"><span class="comment">//return temp;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//运算符重载 可以发生函数重载 </span></span><br><span class="line">Person <span class="keyword">operator</span>+(<span class="type">const</span> Person&amp; p2, <span class="type">int</span> val)  </span><br><span class="line">&#123;</span><br><span class="line">Person temp;</span><br><span class="line">temp.m_A = p2.m_A + val;</span><br><span class="line">temp.m_B = p2.m_B + val;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">10</span>, <span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">20</span>, <span class="number">20</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//成员函数方式</span></span><br><span class="line">Person p3 = p2 + p1;  <span class="comment">//相当于 p2.operaor+(p1)</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;mA:&quot;</span> &lt;&lt; p3.m_A &lt;&lt; <span class="string">&quot; mB:&quot;</span> &lt;&lt; p3.m_B &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Person p4 = p3 + <span class="number">10</span>; <span class="comment">//相当于 operator+(p3,10)</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;mA:&quot;</span> &lt;&lt; p4.m_A &lt;&lt; <span class="string">&quot; mB:&quot;</span> &lt;&lt; p4.m_B &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结1：对于内置的数据类型的表达式的的运算符是不可能改变的</p><p>总结2：不要滥用运算符重载</p></blockquote><h4 id="4-5-2-左移运算符重载"><a href="#4-5-2-左移运算符重载" class="headerlink" title="4.5.2 左移运算符重载"></a>4.5.2 左移运算符重载</h4><p>作用：可以输出自定义数据类型</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">friend</span> ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream&amp; out, Person&amp; p);</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> a, <span class="type">int</span> b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_A = a;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_B = b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//成员函数 实现不了  p &lt;&lt; cout 不是我们想要的效果</span></span><br><span class="line"><span class="comment">//void operator&lt;&lt;(Person&amp; p)&#123;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> m_A;</span><br><span class="line"><span class="type">int</span> m_B;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//全局函数实现左移重载</span></span><br><span class="line"><span class="comment">//ostream对象只能有一个</span></span><br><span class="line">ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream&amp; out, Person&amp; p) &#123;</span><br><span class="line">out &lt;&lt; <span class="string">&quot;a:&quot;</span> &lt;&lt; p.m_A &lt;&lt; <span class="string">&quot; b:&quot;</span> &lt;&lt; p.m_B;</span><br><span class="line"><span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">10</span>, <span class="number">20</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; p1 &lt;&lt; <span class="string">&quot;hello world&quot;</span> &lt;&lt; endl; <span class="comment">//链式编程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：重载左移运算符配合友元可以实现输出自定义数据类型</p></blockquote><h4 id="4-5-3-递增运算符重载"><a href="#4-5-3-递增运算符重载" class="headerlink" title="4.5.3 递增运算符重载"></a>4.5.3 递增运算符重载</h4><p>作用： 通过重载递增运算符，实现自己的整型数据</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyInteger</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">friend</span> ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream&amp; out, MyInteger myint);</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">MyInteger</span>() &#123;</span><br><span class="line">m_Num = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//前置++</span></span><br><span class="line">MyInteger&amp; <span class="keyword">operator</span>++() &#123;</span><br><span class="line"><span class="comment">//先++</span></span><br><span class="line">m_Num++;</span><br><span class="line"><span class="comment">//再返回</span></span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//后置++</span></span><br><span class="line">MyInteger <span class="keyword">operator</span>++(<span class="type">int</span>) &#123;</span><br><span class="line"><span class="comment">//先返回</span></span><br><span class="line">MyInteger temp = *<span class="keyword">this</span>; <span class="comment">//记录当前本身的值，然后让本身的值加1，但是返回的是以前的值，达到先返回后++；</span></span><br><span class="line">m_Num++;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> m_Num;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream&amp; out, MyInteger myint) &#123;</span><br><span class="line">out &lt;&lt; myint.m_Num;</span><br><span class="line"><span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//前置++ 先++ 再返回</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">MyInteger myInt;</span><br><span class="line">cout &lt;&lt; ++myInt &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; myInt &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//后置++ 先返回 再++</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">MyInteger myInt;</span><br><span class="line">cout &lt;&lt; myInt++ &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; myInt &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="comment">//test02();</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结： 前置递增返回引用，后置递增返回值</p></blockquote><h4 id="4-5-4-赋值运算符重载"><a href="#4-5-4-赋值运算符重载" class="headerlink" title="4.5.4 赋值运算符重载"></a>4.5.4 赋值运算符重载</h4><p>c++编译器至少给一个类添加4个函数</p><ol><li>默认构造函数(无参，函数体为空)</li><li>默认析构函数(无参，函数体为空)</li><li>默认拷贝构造函数，对属性进行值拷贝</li><li>赋值运算符 operator=, 对属性进行值拷贝</li></ol><p>如果类中有属性指向堆区，做赋值操作时也会出现深浅拷贝问题</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> age)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//将年龄数据开辟到堆区</span></span><br><span class="line">m_Age = <span class="keyword">new</span> <span class="built_in">int</span>(age);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//重载赋值运算符 </span></span><br><span class="line">Person&amp; <span class="keyword">operator</span>=(Person &amp;p)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (m_Age != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> m_Age;</span><br><span class="line">m_Age = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//编译器提供的代码是浅拷贝</span></span><br><span class="line"><span class="comment">//m_Age = p.m_Age;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//提供深拷贝 解决浅拷贝的问题</span></span><br><span class="line">m_Age = <span class="keyword">new</span> <span class="built_in">int</span>(*p.m_Age);</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回自身</span></span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">~<span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (m_Age != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> m_Age;</span><br><span class="line">m_Age = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//年龄的指针</span></span><br><span class="line"><span class="type">int</span> *m_Age;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">18</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">20</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">Person <span class="title">p3</span><span class="params">(<span class="number">30</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">p3 = p2 = p1; <span class="comment">//赋值操作</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1的年龄为：&quot;</span> &lt;&lt; *p1.m_Age &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2的年龄为：&quot;</span> &lt;&lt; *p2.m_Age &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p3的年龄为：&quot;</span> &lt;&lt; *p3.m_Age &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//int a = 10;</span></span><br><span class="line"><span class="comment">//int b = 20;</span></span><br><span class="line"><span class="comment">//int c = 30;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//c = b = a;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;a = &quot; &lt;&lt; a &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;b = &quot; &lt;&lt; b &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;c = &quot; &lt;&lt; c &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-5-5-关系运算符重载"><a href="#4-5-5-关系运算符重载" class="headerlink" title="4.5.5 关系运算符重载"></a>4.5.5 关系运算符重载</h4><p><strong>作用：</strong>重载关系运算符，可以让两个自定义类型对象进行对比操作</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Person</span>(string name, <span class="type">int</span> age)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Age = age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="keyword">operator</span>==(Person &amp; p)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Name == p.m_Name &amp;&amp; <span class="keyword">this</span>-&gt;m_Age == p.m_Age)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="keyword">operator</span>!=(Person &amp; p)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Name == p.m_Name &amp;&amp; <span class="keyword">this</span>-&gt;m_Age == p.m_Age)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">string m_Name;</span><br><span class="line"><span class="type">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//int a = 0;</span></span><br><span class="line"><span class="comment">//int b = 0;</span></span><br><span class="line"></span><br><span class="line"><span class="function">Person <span class="title">a</span><span class="params">(<span class="string">&quot;孙悟空&quot;</span>, <span class="number">18</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">b</span><span class="params">(<span class="string">&quot;孙悟空&quot;</span>, <span class="number">18</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (a == b)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a和b相等&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a和b不相等&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (a != b)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a和b不相等&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a和b相等&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-5-6-函数调用运算符重载"><a href="#4-5-6-函数调用运算符重载" class="headerlink" title="4.5.6 函数调用运算符重载"></a>4.5.6 函数调用运算符重载</h4><ul><li>函数调用运算符 ()  也可以重载</li><li>由于重载后使用的方式非常像函数的调用，因此称为仿函数</li><li>仿函数没有固定写法，非常灵活</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyPrint</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">operator</span><span class="params">()</span><span class="params">(string text)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; text &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//重载的（）操作符 也称为仿函数</span></span><br><span class="line">MyPrint myFunc;</span><br><span class="line"><span class="built_in">myFunc</span>(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyAdd</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="type">int</span> v1, <span class="type">int</span> v2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> v1 + v2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">MyAdd add;</span><br><span class="line"><span class="type">int</span> ret = <span class="built_in">add</span>(<span class="number">10</span>, <span class="number">10</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ret = &quot;</span> &lt;&lt; ret &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//匿名对象调用  </span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;MyAdd()(100,100) = &quot;</span> &lt;&lt; <span class="built_in">MyAdd</span>()(<span class="number">100</span>, <span class="number">100</span>) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-6-继承"><a href="#4-6-继承" class="headerlink" title="4.6  继承"></a>4.6  继承</h3><p><strong>继承是面向对象三大特性之一</strong></p><p>有些类与类之间存在特殊的关系，例如下图中：</p><p><img src="https://pic.imgdb.cn/item/66b448a4d9c307b7e9962bdb.png" alt="code"></p><p>我们发现，定义这些类时，下级别的成员除了拥有上一级的共性，还有自己的特性。</p><p>这个时候我们就可以考虑利用继承的技术，减少重复代码</p><h4 id="4-6-1-继承的基本语法"><a href="#4-6-1-继承的基本语法" class="headerlink" title="4.6.1 继承的基本语法"></a>4.6.1 继承的基本语法</h4><p>例如我们看到很多网站中，都有公共的头部，公共的底部，甚至公共的左侧列表，只有中心内容不同</p><p>接下来我们分别利用普通写法和继承的写法来实现网页中的内容，看一下继承存在的意义以及好处</p><p><strong>普通实现：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Java页面</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Java</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">header</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;首页、公开课、登录、注册...（公共头部）&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">footer</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;帮助中心、交流合作、站内地图...(公共底部)&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">left</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Java,Python,C++...(公共分类列表)&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">content</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;JAVA学科视频&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//Python页面</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Python</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">header</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;首页、公开课、登录、注册...（公共头部）&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">footer</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;帮助中心、交流合作、站内地图...(公共底部)&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">left</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Java,Python,C++...(公共分类列表)&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">content</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Python学科视频&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//C++页面</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CPP</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">header</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;首页、公开课、登录、注册...（公共头部）&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">footer</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;帮助中心、交流合作、站内地图...(公共底部)&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">left</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Java,Python,C++...(公共分类列表)&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">content</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;C++学科视频&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//Java页面</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Java下载视频页面如下： &quot;</span> &lt;&lt; endl;</span><br><span class="line">Java ja;</span><br><span class="line">ja.<span class="built_in">header</span>();</span><br><span class="line">ja.<span class="built_in">footer</span>();</span><br><span class="line">ja.<span class="built_in">left</span>();</span><br><span class="line">ja.<span class="built_in">content</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;--------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Python页面</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Python下载视频页面如下： &quot;</span> &lt;&lt; endl;</span><br><span class="line">Python py;</span><br><span class="line">py.<span class="built_in">header</span>();</span><br><span class="line">py.<span class="built_in">footer</span>();</span><br><span class="line">py.<span class="built_in">left</span>();</span><br><span class="line">py.<span class="built_in">content</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;--------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//C++页面</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;C++下载视频页面如下： &quot;</span> &lt;&lt; endl;</span><br><span class="line">CPP cp;</span><br><span class="line">cp.<span class="built_in">header</span>();</span><br><span class="line">cp.<span class="built_in">footer</span>();</span><br><span class="line">cp.<span class="built_in">left</span>();</span><br><span class="line">cp.<span class="built_in">content</span>();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>继承实现：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//公共页面</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BasePage</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">header</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;首页、公开课、登录、注册...（公共头部）&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">footer</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;帮助中心、交流合作、站内地图...(公共底部)&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">left</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Java,Python,C++...(公共分类列表)&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Java页面</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Java</span> : <span class="keyword">public</span> BasePage</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">content</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;JAVA学科视频&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//Python页面</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Python</span> : <span class="keyword">public</span> BasePage</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">content</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Python学科视频&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//C++页面</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CPP</span> : <span class="keyword">public</span> BasePage</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">content</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;C++学科视频&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//Java页面</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Java下载视频页面如下： &quot;</span> &lt;&lt; endl;</span><br><span class="line">Java ja;</span><br><span class="line">ja.<span class="built_in">header</span>();</span><br><span class="line">ja.<span class="built_in">footer</span>();</span><br><span class="line">ja.<span class="built_in">left</span>();</span><br><span class="line">ja.<span class="built_in">content</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;--------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Python页面</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Python下载视频页面如下： &quot;</span> &lt;&lt; endl;</span><br><span class="line">Python py;</span><br><span class="line">py.<span class="built_in">header</span>();</span><br><span class="line">py.<span class="built_in">footer</span>();</span><br><span class="line">py.<span class="built_in">left</span>();</span><br><span class="line">py.<span class="built_in">content</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;--------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//C++页面</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;C++下载视频页面如下： &quot;</span> &lt;&lt; endl;</span><br><span class="line">CPP cp;</span><br><span class="line">cp.<span class="built_in">header</span>();</span><br><span class="line">cp.<span class="built_in">footer</span>();</span><br><span class="line">cp.<span class="built_in">left</span>();</span><br><span class="line">cp.<span class="built_in">content</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>总结：</strong></p><p>继承的好处：==可以减少重复的代码==</p><p>class A : public B; </p><p>A 类称为子类 或 派生类</p><p>B 类称为父类 或 基类</p><p><strong>派生类中的成员，包含两大部分</strong>：</p><p>一类是从基类继承过来的，一类是自己增加的成员。</p><p>从基类继承过过来的表现其共性，而新增的成员体现了其个性。</p><h4 id="4-6-2-继承方式"><a href="#4-6-2-继承方式" class="headerlink" title="4.6.2 继承方式"></a>4.6.2 继承方式</h4><p>继承的语法：<code>class 子类 : 继承方式  父类</code></p><p><strong>继承方式一共有三种：</strong></p><ul><li>公共继承</li><li>保护继承</li><li>私有继承</li></ul><p><img src="https://pic.imgdb.cn/item/66b448a4d9c307b7e9962c5d.jpg" alt="code"></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Base1</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>: </span><br><span class="line"><span class="type">int</span> m_A;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> m_B;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> m_C;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//公共继承</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son1</span> :<span class="keyword">public</span> Base1</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">m_A; <span class="comment">//可访问 public权限</span></span><br><span class="line">m_B; <span class="comment">//可访问 protected权限</span></span><br><span class="line"><span class="comment">//m_C; //不可访问</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myClass</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Son1 s1;</span><br><span class="line">s1.m_A; <span class="comment">//其他类只能访问到公共权限</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//保护继承</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base2</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> m_A;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> m_B;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> m_C;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son2</span>:<span class="keyword">protected</span> Base2</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">m_A; <span class="comment">//可访问 protected权限</span></span><br><span class="line">m_B; <span class="comment">//可访问 protected权限</span></span><br><span class="line"><span class="comment">//m_C; //不可访问</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myClass2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Son2 s;</span><br><span class="line"><span class="comment">//s.m_A; //不可访问</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有继承</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base3</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> m_A;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> m_B;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> m_C;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son3</span>:<span class="keyword">private</span> Base3</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">m_A; <span class="comment">//可访问 private权限</span></span><br><span class="line">m_B; <span class="comment">//可访问 private权限</span></span><br><span class="line"><span class="comment">//m_C; //不可访问</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GrandSon3</span> :<span class="keyword">public</span> Son3</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//Son3是私有继承，所以继承Son3的属性在GrandSon3中都无法访问到</span></span><br><span class="line"><span class="comment">//m_A;</span></span><br><span class="line"><span class="comment">//m_B;</span></span><br><span class="line"><span class="comment">//m_C;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="4-6-3-继承中的对象模型"><a href="#4-6-3-继承中的对象模型" class="headerlink" title="4.6.3 继承中的对象模型"></a>4.6.3 继承中的对象模型</h4><p><strong>问题：</strong>从父类继承过来的成员，哪些属于子类对象中？</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> m_A;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> m_B;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> m_C; <span class="comment">//私有成员只是被隐藏了，但是还是会继承下去</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//公共继承</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> :<span class="keyword">public</span> Base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> m_D;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;sizeof Son = &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(Son) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用工具查看：</p><p><img src="https://pic.imgdb.cn/item/66b449a1d9c307b7e996e251.jpg" alt="code"></p><p>打开工具窗口后，定位到当前CPP文件的盘符</p><p>然后输入： cl /d1 reportSingleClassLayout查看的类名   所属文件名</p><p>效果如下图：</p><p><img src="https://pic.imgdb.cn/item/66b449a1d9c307b7e996e26c.png" alt="code"></p><blockquote><p>结论： 父类中私有成员也是被子类继承下去了，只是由编译器给隐藏后访问不到</p></blockquote><h4 id="4-6-4-继承中构造和析构顺序"><a href="#4-6-4-继承中构造和析构顺序" class="headerlink" title="4.6.4 继承中构造和析构顺序"></a>4.6.4 继承中构造和析构顺序</h4><p>子类继承父类后，当创建子类对象，也会调用父类的构造函数</p><p>问题：父类和子类的构造和析构顺序是谁先谁后？</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Base</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Base构造函数!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Base</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Base析构函数!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> : <span class="keyword">public</span> Base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Son</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Son构造函数!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Son</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Son析构函数!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//继承中 先调用父类构造函数，再调用子类构造函数，析构顺序与构造相反</span></span><br><span class="line">Son s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：继承中 先调用父类构造函数，再调用子类构造函数，析构顺序与构造相反</p></blockquote><h4 id="4-6-5-继承同名成员处理方式"><a href="#4-6-5-继承同名成员处理方式" class="headerlink" title="4.6.5 继承同名成员处理方式"></a>4.6.5 继承同名成员处理方式</h4><p>问题：当子类与父类出现同名的成员，如何通过子类对象，访问到子类或父类中同名的数据呢？</p><ul><li>访问子类同名成员   直接访问即可</li><li>访问父类同名成员   需要加作用域</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Base</span>()</span><br><span class="line">&#123;</span><br><span class="line">m_A = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Base - func()调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Base - func(int a)调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> m_A;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> : <span class="keyword">public</span> Base &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Son</span>()</span><br><span class="line">&#123;</span><br><span class="line">m_A = <span class="number">200</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当子类与父类拥有同名的成员函数，子类会隐藏父类中所有版本的同名成员函数</span></span><br><span class="line"><span class="comment">//如果想访问父类中被隐藏的同名成员函数，需要加父类的作用域</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Son - func()调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> m_A;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Son s;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Son下的m_A = &quot;</span> &lt;&lt; s.m_A &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Base下的m_A = &quot;</span> &lt;&lt; s.Base::m_A &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">s.<span class="built_in">func</span>();</span><br><span class="line">s.Base::<span class="built_in">func</span>();</span><br><span class="line">s.Base::<span class="built_in">func</span>(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> EXIT_SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：</p><ol><li>子类对象可以直接访问到子类中同名成员</li><li>子类对象加作用域可以访问到父类同名成员</li><li>当子类与父类拥有同名的成员函数，子类会隐藏父类中同名成员函数，加作用域可以访问到父类中同名函数</li></ol><h4 id="4-6-6-继承同名静态成员处理方式"><a href="#4-6-6-继承同名静态成员处理方式" class="headerlink" title="4.6.6 继承同名静态成员处理方式"></a>4.6.6 继承同名静态成员处理方式</h4><p>问题：继承中同名的静态成员在子类对象上如何进行访问？</p><p>静态成员和非静态成员出现同名，处理方式一致</p><ul><li>访问子类同名成员   直接访问即可</li><li>访问父类同名成员   需要加作用域</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Base - static void func()&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Base - static void func(int a)&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> m_A;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> Base::m_A = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> : <span class="keyword">public</span> Base &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Son - static void func()&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> m_A;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> Son::m_A = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//同名成员属性</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//通过对象访问</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;通过对象访问： &quot;</span> &lt;&lt; endl;</span><br><span class="line">Son s;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Son  下 m_A = &quot;</span> &lt;&lt; s.m_A &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Base 下 m_A = &quot;</span> &lt;&lt; s.Base::m_A &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过类名访问</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;通过类名访问： &quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Son  下 m_A = &quot;</span> &lt;&lt; Son::m_A &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Base 下 m_A = &quot;</span> &lt;&lt; Son::Base::m_A &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//同名成员函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//通过对象访问</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;通过对象访问： &quot;</span> &lt;&lt; endl;</span><br><span class="line">Son s;</span><br><span class="line">s.<span class="built_in">func</span>();</span><br><span class="line">s.Base::<span class="built_in">func</span>();</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;通过类名访问： &quot;</span> &lt;&lt; endl;</span><br><span class="line">Son::<span class="built_in">func</span>();</span><br><span class="line">Son::Base::<span class="built_in">func</span>();</span><br><span class="line"><span class="comment">//出现同名，子类会隐藏掉父类中所有同名成员函数，需要加作作用域访问</span></span><br><span class="line">Son::Base::<span class="built_in">func</span>(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//test01();</span></span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：同名静态成员处理方式和非静态处理方式一样，只不过有两种访问的方式（通过对象 和 通过类名）</p></blockquote><h4 id="4-6-7-多继承语法"><a href="#4-6-7-多继承语法" class="headerlink" title="4.6.7 多继承语法"></a>4.6.7 多继承语法</h4><p>C++允许<strong>一个类继承多个类</strong></p><p>语法：<code>class 子类 ：继承方式 父类1 ， 继承方式 父类2...</code></p><p>多继承可能会引发父类中有同名成员出现，需要加作用域区分</p><p><strong>C++实际开发中不建议用多继承</strong></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Base1</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Base1</span>()</span><br><span class="line">&#123;</span><br><span class="line">m_A = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> m_A;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base2</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Base2</span>()</span><br><span class="line">&#123;</span><br><span class="line">m_A = <span class="number">200</span>;  <span class="comment">//开始是m_B 不会出问题，但是改为mA就会出现不明确</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> m_A;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//语法：class 子类：继承方式 父类1 ，继承方式 父类2 </span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> : <span class="keyword">public</span> Base2, <span class="keyword">public</span> Base1 </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Son</span>()</span><br><span class="line">&#123;</span><br><span class="line">m_C = <span class="number">300</span>;</span><br><span class="line">m_D = <span class="number">400</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> m_C;</span><br><span class="line"><span class="type">int</span> m_D;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//多继承容易产生成员同名的情况</span></span><br><span class="line"><span class="comment">//通过使用类名作用域可以区分调用哪一个基类的成员</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Son s;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;sizeof Son = &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(s) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; s.Base1::m_A &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; s.Base2::m_A &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结： 多继承中如果父类中出现了同名情况，子类使用时候要加作用域</p></blockquote><h4 id="4-6-8-菱形继承"><a href="#4-6-8-菱形继承" class="headerlink" title="4.6.8 菱形继承"></a>4.6.8 菱形继承</h4><p><strong>菱形继承概念：</strong></p><p>​    两个派生类继承同一个基类</p><p>​    又有某个类同时继承者两个派生类</p><p>​    这种继承被称为菱形继承，或者钻石继承</p><p><strong>典型的菱形继承案例：</strong></p><p><img src="https://pic.imgdb.cn/item/66b449a1d9c307b7e996e27f.jpg" alt="code"></p><p><strong>菱形继承问题：</strong></p><ol><li><p>羊继承了动物的数据，驼同样继承了动物的数据，当草泥马使用数据时，就会产生二义性。</p></li><li><p>草泥马继承自动物的数据继承了两份，其实我们应该清楚，这份数据我们只需要一份就可以。</p></li></ol><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//继承前加virtual关键字后，变为虚继承</span></span><br><span class="line"><span class="comment">//此时公共的父类Animal称为虚基类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Sheep</span> : <span class="keyword">virtual</span> <span class="keyword">public</span> Animal &#123;&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tuo</span>   : <span class="keyword">virtual</span> <span class="keyword">public</span> Animal &#123;&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SheepTuo</span> : <span class="keyword">public</span> Sheep, <span class="keyword">public</span> Tuo &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SheepTuo st;</span><br><span class="line">st.Sheep::m_Age = <span class="number">100</span>;</span><br><span class="line">st.Tuo::m_Age = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;st.Sheep::m_Age = &quot;</span> &lt;&lt; st.Sheep::m_Age &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;st.Tuo::m_Age = &quot;</span> &lt;&lt;  st.Tuo::m_Age &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;st.m_Age = &quot;</span> &lt;&lt; st.m_Age &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：</p><ul><li>菱形继承带来的主要问题是子类继承两份相同的数据，导致资源浪费以及毫无意义</li><li>利用虚继承可以解决菱形继承问题</li></ul><h3 id="4-7-多态"><a href="#4-7-多态" class="headerlink" title="4.7  多态"></a>4.7  多态</h3><h4 id="4-7-1-多态的基本概念"><a href="#4-7-1-多态的基本概念" class="headerlink" title="4.7.1 多态的基本概念"></a>4.7.1 多态的基本概念</h4><p><strong>多态是C++面向对象三大特性之一</strong></p><p>多态分为两类</p><ul><li>静态多态: 函数重载 和 运算符重载属于静态多态，复用函数名</li><li>动态多态: 派生类和虚函数实现运行时多态</li></ul><p>静态多态和动态多态区别：</p><ul><li>静态多态的函数地址早绑定  -  编译阶段确定函数地址</li><li>动态多态的函数地址晚绑定  -  运行阶段确定函数地址</li></ul><p>下面通过案例进行讲解多态</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//Speak函数就是虚函数</span></span><br><span class="line"><span class="comment">//函数前面加上virtual关键字，变成虚函数，那么编译器在编译的时候就不能确定函数调用了。</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;动物在说话&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> :<span class="keyword">public</span> Animal</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;小猫在说话&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> :<span class="keyword">public</span> Animal</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;小狗在说话&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//我们希望传入什么对象，那么就调用什么对象的函数</span></span><br><span class="line"><span class="comment">//如果函数地址在编译阶段就能确定，那么静态联编</span></span><br><span class="line"><span class="comment">//如果函数地址在运行阶段才能确定，就是动态联编</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">DoSpeak</span><span class="params">(Animal &amp; animal)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">animal.<span class="built_in">speak</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//多态满足条件： </span></span><br><span class="line"><span class="comment">//1、有继承关系</span></span><br><span class="line"><span class="comment">//2、子类重写父类中的虚函数</span></span><br><span class="line"><span class="comment">//多态使用：</span></span><br><span class="line"><span class="comment">//父类指针或引用指向子类对象</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Cat cat;</span><br><span class="line"><span class="built_in">DoSpeak</span>(cat);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Dog dog;</span><br><span class="line"><span class="built_in">DoSpeak</span>(dog);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：</p><p>多态满足条件</p><ul><li>有继承关系</li><li>子类重写父类中的虚函数</li></ul><p>多态使用条件</p><ul><li>父类指针或引用指向子类对象</li></ul><p>重写：函数返回值类型  函数名 参数列表 完全一致称为重写</p><h4 id="4-7-2-多态案例一-计算器类"><a href="#4-7-2-多态案例一-计算器类" class="headerlink" title="4.7.2 多态案例一-计算器类"></a>4.7.2 多态案例一-计算器类</h4><p>案例描述：</p><p>分别利用普通写法和多态技术，设计实现两个操作数进行运算的计算器类</p><p>多态的优点：</p><ul><li>代码组织结构清晰</li><li>可读性强</li><li>利于前期和后期的扩展以及维护</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//普通实现</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Calculator</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getResult</span><span class="params">(string oper)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (oper == <span class="string">&quot;+&quot;</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> m_Num1 + m_Num2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (oper == <span class="string">&quot;-&quot;</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> m_Num1 - m_Num2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (oper == <span class="string">&quot;*&quot;</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> m_Num1 * m_Num2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//如果要提供新的运算，需要修改源码</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> m_Num1;</span><br><span class="line"><span class="type">int</span> m_Num2;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//普通实现测试</span></span><br><span class="line">Calculator c;</span><br><span class="line">c.m_Num1 = <span class="number">10</span>;</span><br><span class="line">c.m_Num2 = <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; c.m_Num1 &lt;&lt; <span class="string">&quot; + &quot;</span> &lt;&lt; c.m_Num2 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; c.<span class="built_in">getResult</span>(<span class="string">&quot;+&quot;</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; c.m_Num1 &lt;&lt; <span class="string">&quot; - &quot;</span> &lt;&lt; c.m_Num2 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; c.<span class="built_in">getResult</span>(<span class="string">&quot;-&quot;</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; c.m_Num1 &lt;&lt; <span class="string">&quot; * &quot;</span> &lt;&lt; c.m_Num2 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; c.<span class="built_in">getResult</span>(<span class="string">&quot;*&quot;</span>) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//多态实现</span></span><br><span class="line"><span class="comment">//抽象计算器类</span></span><br><span class="line"><span class="comment">//多态优点：代码组织结构清晰，可读性强，利于前期和后期的扩展以及维护</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AbstractCalculator</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> :</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">int</span> <span class="title">getResult</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> m_Num1;</span><br><span class="line"><span class="type">int</span> m_Num2;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//加法计算器</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AddCalculator</span> :<span class="keyword">public</span> AbstractCalculator</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getResult</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_Num1 + m_Num2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//减法计算器</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SubCalculator</span> :<span class="keyword">public</span> AbstractCalculator</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getResult</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_Num1 - m_Num2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//乘法计算器</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MulCalculator</span> :<span class="keyword">public</span> AbstractCalculator</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getResult</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_Num1 * m_Num2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//创建加法计算器</span></span><br><span class="line">AbstractCalculator *abc = <span class="keyword">new</span> AddCalculator;</span><br><span class="line">abc-&gt;m_Num1 = <span class="number">10</span>;</span><br><span class="line">abc-&gt;m_Num2 = <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; abc-&gt;m_Num1 &lt;&lt; <span class="string">&quot; + &quot;</span> &lt;&lt; abc-&gt;m_Num2 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; abc-&gt;<span class="built_in">getResult</span>() &lt;&lt; endl;</span><br><span class="line"><span class="keyword">delete</span> abc;  <span class="comment">//用完了记得销毁</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//创建减法计算器</span></span><br><span class="line">abc = <span class="keyword">new</span> SubCalculator;</span><br><span class="line">abc-&gt;m_Num1 = <span class="number">10</span>;</span><br><span class="line">abc-&gt;m_Num2 = <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; abc-&gt;m_Num1 &lt;&lt; <span class="string">&quot; - &quot;</span> &lt;&lt; abc-&gt;m_Num2 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; abc-&gt;<span class="built_in">getResult</span>() &lt;&lt; endl;</span><br><span class="line"><span class="keyword">delete</span> abc;  </span><br><span class="line"></span><br><span class="line"><span class="comment">//创建乘法计算器</span></span><br><span class="line">abc = <span class="keyword">new</span> MulCalculator;</span><br><span class="line">abc-&gt;m_Num1 = <span class="number">10</span>;</span><br><span class="line">abc-&gt;m_Num2 = <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; abc-&gt;m_Num1 &lt;&lt; <span class="string">&quot; * &quot;</span> &lt;&lt; abc-&gt;m_Num2 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; abc-&gt;<span class="built_in">getResult</span>() &lt;&lt; endl;</span><br><span class="line"><span class="keyword">delete</span> abc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//test01();</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：C++开发提倡利用多态设计程序架构，因为多态优点很多</p></blockquote><h4 id="4-7-3-纯虚函数和抽象类"><a href="#4-7-3-纯虚函数和抽象类" class="headerlink" title="4.7.3 纯虚函数和抽象类"></a>4.7.3 纯虚函数和抽象类</h4><p>在多态中，通常父类中虚函数的实现是毫无意义的，主要都是调用子类重写的内容</p><p>因此可以将虚函数改为<strong>纯虚函数</strong></p><p>纯虚函数语法：<code>virtual 返回值类型 函数名 （参数列表）= 0 ;</code></p><p>当类中有了纯虚函数，这个类也称为==抽象类==</p><p><strong>抽象类特点</strong>：</p><ul><li>无法实例化对象</li><li>子类必须重写抽象类中的纯虚函数，否则也属于抽象类</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//纯虚函数</span></span><br><span class="line"><span class="comment">//类中只要有一个纯虚函数就称为抽象类</span></span><br><span class="line"><span class="comment">//抽象类无法实例化对象</span></span><br><span class="line"><span class="comment">//子类必须重写父类中的纯虚函数，否则也属于抽象类</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">func</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> :<span class="keyword">public</span> Base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">func</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Base * base = <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">//base = new Base; // 错误，抽象类无法实例化对象</span></span><br><span class="line">base = <span class="keyword">new</span> Son;</span><br><span class="line">base-&gt;<span class="built_in">func</span>();</span><br><span class="line"><span class="keyword">delete</span> base;<span class="comment">//记得销毁</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-7-4-多态案例二-制作饮品"><a href="#4-7-4-多态案例二-制作饮品" class="headerlink" title="4.7.4 多态案例二-制作饮品"></a>4.7.4 多态案例二-制作饮品</h4><p><strong>案例描述：</strong></p><p>制作饮品的大致流程为：煮水 -  冲泡 - 倒入杯中 - 加入辅料</p><p>利用多态技术实现本案例，提供抽象制作饮品基类，提供子类制作咖啡和茶叶</p><p><img src="https://pic.imgdb.cn/item/66b449a1d9c307b7e996e28f.jpg" alt="code"></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//抽象制作饮品</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AbstractDrinking</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//烧水</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">Boil</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"><span class="comment">//冲泡</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">Brew</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"><span class="comment">//倒入杯中</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">PourInCup</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"><span class="comment">//加入辅料</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">PutSomething</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"><span class="comment">//规定流程</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MakeDrink</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">Boil</span>();</span><br><span class="line"><span class="built_in">Brew</span>();</span><br><span class="line"><span class="built_in">PourInCup</span>();</span><br><span class="line"><span class="built_in">PutSomething</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//制作咖啡</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Coffee</span> : <span class="keyword">public</span> AbstractDrinking &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//烧水</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">Boil</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;煮农夫山泉!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//冲泡</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">Brew</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;冲泡咖啡!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//倒入杯中</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">PourInCup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;将咖啡倒入杯中!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//加入辅料</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">PutSomething</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;加入牛奶!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//制作茶水</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tea</span> : <span class="keyword">public</span> AbstractDrinking &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//烧水</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">Boil</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;煮自来水!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//冲泡</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">Brew</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;冲泡茶叶!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//倒入杯中</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">PourInCup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;将茶水倒入杯中!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//加入辅料</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">PutSomething</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;加入枸杞!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//业务函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">DoWork</span><span class="params">(AbstractDrinking* drink)</span> </span>&#123;</span><br><span class="line">drink-&gt;<span class="built_in">MakeDrink</span>();</span><br><span class="line"><span class="keyword">delete</span> drink;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">DoWork</span>(<span class="keyword">new</span> Coffee);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;--------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">DoWork</span>(<span class="keyword">new</span> Tea);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-7-5-虚析构和纯虚析构"><a href="#4-7-5-虚析构和纯虚析构" class="headerlink" title="4.7.5 虚析构和纯虚析构"></a>4.7.5 虚析构和纯虚析构</h4><p>多态使用时，如果子类中有属性开辟到堆区，那么父类指针在释放时无法调用到子类的析构代码</p><p>解决方式：将父类中的析构函数改为<strong>虚析构</strong>或者<strong>纯虚析构</strong></p><p>虚析构和纯虚析构共性：</p><ul><li>可以解决父类指针释放子类对象</li><li>都需要有具体的函数实现</li></ul><p>虚析构和纯虚析构区别：</p><ul><li>如果是纯虚析构，该类属于抽象类，无法实例化对象</li></ul><p>虚析构语法：</p><p><code>virtual ~类名()&#123;&#125;</code></p><p>纯虚析构语法：</p><p><code>virtual ~类名() = 0;</code></p><p><code>类名::~类名()&#123;&#125;</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="built_in">Animal</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Animal 构造函数调用！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">Speak</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//析构函数加上virtual关键字，变成虚析构函数</span></span><br><span class="line"><span class="comment">//virtual ~Animal()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;Animal虚析构函数调用！&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">virtual</span> ~<span class="built_in">Animal</span>() = <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Animal::~<span class="built_in">Animal</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Animal 纯虚析构函数调用！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//和包含普通纯虚函数的类一样，包含了纯虚析构函数的类也是一个抽象类。不能够被实例化。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> : <span class="keyword">public</span> Animal &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Cat</span>(string name)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Cat构造函数调用！&quot;</span> &lt;&lt; endl;</span><br><span class="line">m_Name = <span class="keyword">new</span> <span class="built_in">string</span>(name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">Speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; *m_Name &lt;&lt;  <span class="string">&quot;小猫在说话!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Cat</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Cat析构函数调用!&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Name != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">delete</span> m_Name;</span><br><span class="line">m_Name = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string *m_Name;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Animal *animal = <span class="keyword">new</span> <span class="built_in">Cat</span>(<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">animal-&gt;<span class="built_in">Speak</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过父类指针去释放，会导致子类对象可能清理不干净，造成内存泄漏</span></span><br><span class="line"><span class="comment">//怎么解决？给基类增加一个虚析构函数</span></span><br><span class="line"><span class="comment">//虚析构函数就是用来解决通过父类指针释放子类对象</span></span><br><span class="line"><span class="keyword">delete</span> animal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：</p><p>​    1. 虚析构或纯虚析构就是用来解决通过父类指针释放子类对象</p><p>​    2. 如果子类中没有堆区数据，可以不写为虚析构或纯虚析构</p><p>​    3. 拥有纯虚析构函数的类也属于抽象类</p><h4 id="4-7-6-多态案例三-电脑组装"><a href="#4-7-6-多态案例三-电脑组装" class="headerlink" title="4.7.6 多态案例三-电脑组装"></a>4.7.6 多态案例三-电脑组装</h4><p><strong>案例描述：</strong></p><p>电脑主要组成部件为 CPU（用于计算），显卡（用于显示），内存条（用于存储）</p><p>将每个零件封装出抽象基类，并且提供不同的厂商生产不同的零件，例如Intel厂商和Lenovo厂商</p><p>创建电脑类提供让电脑工作的函数，并且调用每个零件工作的接口</p><p>测试时组装三台不同的电脑进行工作</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//抽象CPU类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CPU</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//抽象的计算函数</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">calculate</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//抽象显卡类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">VideoCard</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//抽象的显示函数</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">display</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//抽象内存条类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Memory</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//抽象的存储函数</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">storage</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//电脑类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Computer</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Computer</span>(CPU * cpu, VideoCard * vc, Memory * mem)</span><br><span class="line">&#123;</span><br><span class="line">m_cpu = cpu;</span><br><span class="line">m_vc = vc;</span><br><span class="line">m_mem = mem;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//提供工作的函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">work</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//让零件工作起来，调用接口</span></span><br><span class="line">m_cpu-&gt;<span class="built_in">calculate</span>();</span><br><span class="line"></span><br><span class="line">m_vc-&gt;<span class="built_in">display</span>();</span><br><span class="line"></span><br><span class="line">m_mem-&gt;<span class="built_in">storage</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//提供析构函数 释放3个电脑零件</span></span><br><span class="line">~<span class="built_in">Computer</span>()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//释放CPU零件</span></span><br><span class="line"><span class="keyword">if</span> (m_cpu != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> m_cpu;</span><br><span class="line">m_cpu = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//释放显卡零件</span></span><br><span class="line"><span class="keyword">if</span> (m_vc != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> m_vc;</span><br><span class="line">m_vc = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//释放内存条零件</span></span><br><span class="line"><span class="keyword">if</span> (m_mem != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> m_mem;</span><br><span class="line">m_mem = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"></span><br><span class="line">CPU * m_cpu; <span class="comment">//CPU的零件指针</span></span><br><span class="line">VideoCard * m_vc; <span class="comment">//显卡零件指针</span></span><br><span class="line">Memory * m_mem; <span class="comment">//内存条零件指针</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//具体厂商</span></span><br><span class="line"><span class="comment">//Intel厂商</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">IntelCPU</span> :<span class="keyword">public</span> CPU</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">calculate</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Intel的CPU开始计算了！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">IntelVideoCard</span> :<span class="keyword">public</span> VideoCard</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Intel的显卡开始显示了！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">IntelMemory</span> :<span class="keyword">public</span> Memory</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">storage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Intel的内存条开始存储了！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Lenovo厂商</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LenovoCPU</span> :<span class="keyword">public</span> CPU</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">calculate</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Lenovo的CPU开始计算了！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LenovoVideoCard</span> :<span class="keyword">public</span> VideoCard</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Lenovo的显卡开始显示了！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LenovoMemory</span> :<span class="keyword">public</span> Memory</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">storage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Lenovo的内存条开始存储了！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//第一台电脑零件</span></span><br><span class="line">CPU * intelCpu = <span class="keyword">new</span> IntelCPU;</span><br><span class="line">VideoCard * intelCard = <span class="keyword">new</span> IntelVideoCard;</span><br><span class="line">Memory * intelMem = <span class="keyword">new</span> IntelMemory;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第一台电脑开始工作：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//创建第一台电脑</span></span><br><span class="line">Computer * computer1 = <span class="keyword">new</span> <span class="built_in">Computer</span>(intelCpu, intelCard, intelMem);</span><br><span class="line">computer1-&gt;<span class="built_in">work</span>();</span><br><span class="line"><span class="keyword">delete</span> computer1;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;-----------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第二台电脑开始工作：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//第二台电脑组装</span></span><br><span class="line">Computer * computer2 = <span class="keyword">new</span> <span class="built_in">Computer</span>(<span class="keyword">new</span> LenovoCPU, <span class="keyword">new</span> LenovoVideoCard, <span class="keyword">new</span> LenovoMemory);;</span><br><span class="line">computer2-&gt;<span class="built_in">work</span>();</span><br><span class="line"><span class="keyword">delete</span> computer2;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;-----------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第三台电脑开始工作：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//第三台电脑组装</span></span><br><span class="line">Computer * computer3 = <span class="keyword">new</span> <span class="built_in">Computer</span>(<span class="keyword">new</span> LenovoCPU, <span class="keyword">new</span> IntelVideoCard, <span class="keyword">new</span> LenovoMemory);;</span><br><span class="line">computer3-&gt;<span class="built_in">work</span>();</span><br><span class="line"><span class="keyword">delete</span> computer3;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-文件操作"><a href="#5-文件操作" class="headerlink" title="5 文件操作"></a>5 文件操作</h2><p>程序运行时产生的数据都属于临时数据，程序一旦运行结束都会被释放</p><p>通过<strong>文件可以将数据持久化</strong></p><p>C++中对文件操作需要包含头文件 ==&lt; fstream &gt;==</p><p>文件类型分为两种：</p><ol><li><strong>文本文件</strong>     -  文件以文本的<strong>ASCII码</strong>形式存储在计算机中</li><li><strong>二进制文件</strong> -  文件以文本的<strong>二进制</strong>形式存储在计算机中，用户一般不能直接读懂它们</li></ol><p>操作文件的三大类:</p><ol><li>ofstream：写操作</li><li>ifstream： 读操作</li><li>fstream ： 读写操作</li></ol><h3 id="5-1文本文件"><a href="#5-1文本文件" class="headerlink" title="5.1文本文件"></a>5.1文本文件</h3><h4 id="5-1-1写文件"><a href="#5-1-1写文件" class="headerlink" title="5.1.1写文件"></a>5.1.1写文件</h4><p>   写文件步骤如下：</p><ol><li><p>包含头文件   </p><p>#include <fstream\></p></li><li><p>创建流对象  </p><p>ofstream ofs;</p></li><li><p>打开文件</p><p>ofs.open(“文件路径”,打开方式);</p></li><li><p>写数据</p><p>ofs &lt;&lt; “写入的数据”;</p></li><li><p>关闭文件</p><p>ofs.close();</p></li></ol><p>文件打开方式：</p><div class="table-container"><table><thead><tr><th style="text-align:center">打开方式</th><th style="text-align:center">解释</th></tr></thead><tbody><tr><td style="text-align:center">ios::in</td><td style="text-align:center">为读文件而打开文件</td></tr><tr><td style="text-align:center">ios::out</td><td style="text-align:center">为写文件而打开文件</td></tr><tr><td style="text-align:center">ios::ate</td><td style="text-align:center">初始位置：文件尾</td></tr><tr><td style="text-align:center">ios::app</td><td style="text-align:center">追加方式写文件</td></tr><tr><td style="text-align:center">ios::trunc</td><td style="text-align:center">如果文件存在先删除，再创建</td></tr><tr><td style="text-align:center">ios::binary</td><td style="text-align:center">二进制方式</td></tr></tbody></table></div><p><strong>注意：</strong> 文件打开方式可以配合使用，利用|操作符</p><p><strong>例如：</strong>用二进制方式写文件 <code>ios::binary |  ios:: out</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ofstream ofs;</span><br><span class="line">ofs.<span class="built_in">open</span>(<span class="string">&quot;test.txt&quot;</span>, ios::out);</span><br><span class="line"></span><br><span class="line">ofs &lt;&lt; <span class="string">&quot;姓名：张三&quot;</span> &lt;&lt; endl;</span><br><span class="line">ofs &lt;&lt; <span class="string">&quot;性别：男&quot;</span> &lt;&lt; endl;</span><br><span class="line">ofs &lt;&lt; <span class="string">&quot;年龄：18&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">ofs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：</p><ul><li>文件操作必须包含头文件 fstream</li><li>读文件可以利用 ofstream  ，或者fstream类</li><li>打开文件时候需要指定操作文件的路径，以及打开方式</li><li>利用&lt;&lt;可以向文件中写数据</li><li>操作完毕，要关闭文件</li></ul><h4 id="5-1-2读文件"><a href="#5-1-2读文件" class="headerlink" title="5.1.2读文件"></a>5.1.2读文件</h4><p>读文件与写文件步骤相似，但是读取方式相对于比较多</p><p>读文件步骤如下：</p><ol><li><p>包含头文件   </p><p>#include <fstream\></p></li><li><p>创建流对象  </p><p>ifstream ifs;</p></li><li><p>打开文件并判断文件是否打开成功</p><p>ifs.open(“文件路径”,打开方式);</p></li><li><p>读数据</p><p>四种方式读取</p></li><li><p>关闭文件</p><p>ifs.close();</p></li></ol><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ifstream ifs;</span><br><span class="line">ifs.<span class="built_in">open</span>(<span class="string">&quot;test.txt&quot;</span>, ios::in);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!ifs.<span class="built_in">is_open</span>())</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;文件打开失败&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//第一种方式</span></span><br><span class="line"><span class="comment">//char buf[1024] = &#123; 0 &#125;;</span></span><br><span class="line"><span class="comment">//while (ifs &gt;&gt; buf)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; buf &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//第二种</span></span><br><span class="line"><span class="comment">//char buf[1024] = &#123; 0 &#125;;</span></span><br><span class="line"><span class="comment">//while (ifs.getline(buf,sizeof(buf)))</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; buf &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//第三种</span></span><br><span class="line"><span class="comment">//string buf;</span></span><br><span class="line"><span class="comment">//while (getline(ifs, buf))</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; buf &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> c;</span><br><span class="line"><span class="keyword">while</span> ((c = ifs.<span class="built_in">get</span>()) != EOF)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：</p><ul><li>读文件可以利用 ifstream  ，或者fstream类</li><li>利用is_open函数可以判断文件是否打开成功</li><li>close 关闭文件 </li></ul><h3 id="5-2-二进制文件"><a href="#5-2-二进制文件" class="headerlink" title="5.2 二进制文件"></a>5.2 二进制文件</h3><p>以二进制的方式对文件进行读写操作</p><p>打开方式要指定为 ==ios::binary==</p><h4 id="5-2-1-写文件"><a href="#5-2-1-写文件" class="headerlink" title="5.2.1 写文件"></a>5.2.1 写文件</h4><p>二进制方式写文件主要利用流对象调用成员函数write</p><p>函数原型 ：<code>ostream&amp; write(const char * buffer,int len);</code></p><p>参数解释：字符指针buffer指向内存中一段存储空间。len是读写的字节数</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">char</span> m_Name[<span class="number">64</span>];</span><br><span class="line"><span class="type">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//二进制文件  写文件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1、包含头文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2、创建输出流对象</span></span><br><span class="line"><span class="function">ofstream <span class="title">ofs</span><span class="params">(<span class="string">&quot;person.txt&quot;</span>, ios::out | ios::binary)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3、打开文件</span></span><br><span class="line"><span class="comment">//ofs.open(&quot;person.txt&quot;, ios::out | ios::binary);</span></span><br><span class="line"></span><br><span class="line">Person p = &#123;<span class="string">&quot;张三&quot;</span>  , <span class="number">18</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//4、写文件</span></span><br><span class="line">ofs.<span class="built_in">write</span>((<span class="type">const</span> <span class="type">char</span> *)&amp;p, <span class="built_in">sizeof</span>(p));</span><br><span class="line"></span><br><span class="line"><span class="comment">//5、关闭文件</span></span><br><span class="line">ofs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：</p><ul><li>文件输出流对象 可以通过write函数，以二进制方式写数据</li></ul><h4 id="5-2-2-读文件"><a href="#5-2-2-读文件" class="headerlink" title="5.2.2 读文件"></a>5.2.2 读文件</h4><p>二进制方式读文件主要利用流对象调用成员函数read</p><p>函数原型：<code>istream&amp; read(char *buffer,int len);</code></p><p>参数解释：字符指针buffer指向内存中一段存储空间。len是读写的字节数</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">char</span> m_Name[<span class="number">64</span>];</span><br><span class="line"><span class="type">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">ifstream <span class="title">ifs</span><span class="params">(<span class="string">&quot;person.txt&quot;</span>, ios::in | ios::binary)</span></span>;</span><br><span class="line"><span class="keyword">if</span> (!ifs.<span class="built_in">is_open</span>())</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;文件打开失败&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Person p;</span><br><span class="line">ifs.<span class="built_in">read</span>((<span class="type">char</span> *)&amp;p, <span class="built_in">sizeof</span>(p));</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名： &quot;</span> &lt;&lt; p.m_Name &lt;&lt; <span class="string">&quot; 年龄： &quot;</span> &lt;&lt; p.m_Age &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>文件输入流对象 可以通过read函数，以二进制方式读数据</li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> C/C++ </tag>
            
            <tag> 基础语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-CPP学习笔记（1）</title>
      <link href="/post/1c09c678.html"/>
      <url>/post/1c09c678.html</url>
      
        <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="课程视频" href="https://www.bilibili.com/video/BV1nV411T7U3"><div class="left"><img src="https://pic.imgdb.cn/item/66b436f5d9c307b7e987fec5.jpg"/></div><div class="right"><p class="text">课程视频</p><p class="url">https://www.bilibili.com/video/BV1nV411T7U3</p></div></a></div><h1 id="C-基础入门"><a href="#C-基础入门" class="headerlink" title="C++基础入门"></a>C++基础入门</h1><h2 id="1-C-初识"><a href="#1-C-初识" class="headerlink" title="1 C++初识"></a>1 C++初识</h2><h3 id="1-1-第一个C-程序"><a href="#1-1-第一个C-程序" class="headerlink" title="1.1  第一个C++程序"></a>1.1  第一个C++程序</h3><p>编写一个C++程序总共分为4个步骤</p><ul><li>创建项目</li><li>创建文件</li><li>编写代码</li><li>运行程序</li></ul><h4 id="1-1-1-创建项目"><a href="#1-1-1-创建项目" class="headerlink" title="1.1.1 创建项目"></a>1.1.1 创建项目</h4><p>​    Visual Studio是我们用来编写C++程序的主要工具，我们先将它打开</p><p><img src="https://pic.imgdb.cn/item/66b4326dd9c307b7e97e75ad.png" alt="code"></p><p><img src="https://pic.imgdb.cn/item/66b4326dd9c307b7e97e75bb.jpg" alt="code"></p><h4 id="1-1-2-创建文件"><a href="#1-1-2-创建文件" class="headerlink" title="1.1.2 创建文件"></a>1.1.2 创建文件</h4><p>右键源文件，选择添加-&gt;新建项</p><p><img src="https://pic.imgdb.cn/item/66b4326dd9c307b7e97e75d4.png" alt="code"></p><p>给C++文件起个名称，然后点击添加即可。</p><h4 id="1-1-3-编写代码"><a href="#1-1-3-编写代码" class="headerlink" title="1.1.3 编写代码"></a>1.1.3 编写代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Hello world&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-1-4-运行程序"><a href="#1-1-4-运行程序" class="headerlink" title="1.1.4 运行程序"></a>1.1.4 运行程序</h4><p><img src="https://pic.imgdb.cn/item/66b4326dd9c307b7e97e75f7.png" alt="code"></p><h3 id="1-2-注释"><a href="#1-2-注释" class="headerlink" title="1.2 注释"></a>1.2 注释</h3><p><strong>作用</strong>：在代码中加一些说明和解释，方便自己或其他程序员程序员阅读代码</p><p><strong>两种格式</strong></p><ol><li><strong>单行注释</strong>：<code>// 描述信息</code> <ul><li>通常放在一行代码的上方，或者一条语句的末尾，==对该行代码说明==</li></ul></li><li><strong>多行注释</strong>： <code>/* 描述信息 */</code><ul><li>通常放在一段代码的上方，==对该段代码做整体说明==</li></ul></li></ol><blockquote><p>提示：编译器在编译代码时，会忽略注释的内容</p></blockquote><h3 id="1-3-变量"><a href="#1-3-变量" class="headerlink" title="1.3 变量"></a>1.3 变量</h3><p><strong>作用</strong>：给一段指定的内存空间起名，方便操作这段内存</p><p><strong>语法</strong>：<code>数据类型 变量名 = 初始值;</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//变量的定义</span></span><br><span class="line"><span class="comment">//语法：数据类型  变量名 = 初始值</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：C++在创建变量时，必须给变量一个初始值，否则会报错</p></blockquote><h3 id="1-4-常量"><a href="#1-4-常量" class="headerlink" title="1.4  常量"></a>1.4  常量</h3><p><strong>作用</strong>：用于记录程序中不可更改的数据</p><p>C++定义常量两种方式</p><ol><li><strong>#define</strong> 宏常量： <code>#define 常量名 常量值</code><ul><li>==通常在文件上方定义==，表示一个常量</li></ul></li></ol><ol><li><strong>const</strong>修饰的变量 <code>const 数据类型 常量名 = 常量值</code><ul><li>==通常在变量定义前加关键字const==，修饰该变量为常量，不可修改</li></ul></li></ol><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1、宏常量</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> day 7</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;一周里总共有 &quot;</span> &lt;&lt; day &lt;&lt; <span class="string">&quot; 天&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//day = 8;  //报错，宏常量不可以修改</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2、const修饰变量</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> month = <span class="number">12</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;一年里总共有 &quot;</span> &lt;&lt; month &lt;&lt; <span class="string">&quot; 个月份&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//month = 24; //报错，常量是不可以修改的</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-5-关键字"><a href="#1-5-关键字" class="headerlink" title="1.5 关键字"></a>1.5 关键字</h3><p><strong>作用：</strong>关键字是C++中预先保留的单词（标识符）</p><ul><li><strong>在定义变量或者常量时候，不要用关键字</strong></li></ul><p>C++关键字如下：</p><div class="table-container"><table><thead><tr><th style="text-align:center">asm</th><th style="text-align:center">do</th><th style="text-align:center">if</th><th style="text-align:center">return</th><th style="text-align:center">typedef</th></tr></thead><tbody><tr><td style="text-align:center">auto</td><td style="text-align:center">double</td><td style="text-align:center">inline</td><td style="text-align:center">short</td><td style="text-align:center">typeid</td></tr><tr><td style="text-align:center">bool</td><td style="text-align:center">dynamic_cast</td><td style="text-align:center">int</td><td style="text-align:center">signed</td><td style="text-align:center">typename</td></tr><tr><td style="text-align:center">break</td><td style="text-align:center">else</td><td style="text-align:center">long</td><td style="text-align:center">sizeof</td><td style="text-align:center">union</td></tr><tr><td style="text-align:center">case</td><td style="text-align:center">enum</td><td style="text-align:center">mutable</td><td style="text-align:center">static</td><td style="text-align:center">unsigned</td></tr><tr><td style="text-align:center">catch</td><td style="text-align:center">explicit</td><td style="text-align:center">namespace</td><td style="text-align:center">static_cast</td><td style="text-align:center">using</td></tr><tr><td style="text-align:center">char</td><td style="text-align:center">export</td><td style="text-align:center">new</td><td style="text-align:center">struct</td><td style="text-align:center">virtual</td></tr><tr><td style="text-align:center">class</td><td style="text-align:center">extern</td><td style="text-align:center">operator</td><td style="text-align:center">switch</td><td style="text-align:center">void</td></tr><tr><td style="text-align:center">const</td><td style="text-align:center">false</td><td style="text-align:center">private</td><td style="text-align:center">template</td><td style="text-align:center">volatile</td></tr><tr><td style="text-align:center">const_cast</td><td style="text-align:center">float</td><td style="text-align:center">protected</td><td style="text-align:center">this</td><td style="text-align:center">wchar_t</td></tr><tr><td style="text-align:center">continue</td><td style="text-align:center">for</td><td style="text-align:center">public</td><td style="text-align:center">throw</td><td style="text-align:center">while</td></tr><tr><td style="text-align:center">default</td><td style="text-align:center">friend</td><td style="text-align:center">register</td><td style="text-align:center">true</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">delete</td><td style="text-align:center">goto</td><td style="text-align:center">reinterpret_cast</td><td style="text-align:center">try</td></tr></tbody></table></div><p><code>提示：在给变量或者常量起名称时候，不要用C++得关键字，否则会产生歧义。</code></p><h3 id="1-6-标识符命名规则"><a href="#1-6-标识符命名规则" class="headerlink" title="1.6 标识符命名规则"></a>1.6 标识符命名规则</h3><p><strong>作用</strong>：C++规定给标识符（变量、常量）命名时，有一套自己的规则</p><ul><li>标识符不能是关键字</li><li>标识符只能由字母、数字、下划线组成</li><li>第一个字符必须为字母或下划线</li><li>标识符中字母区分大小写</li></ul><blockquote><p>建议：给标识符命名时，争取做到见名知意的效果，方便自己和他人的阅读</p></blockquote><h2 id="2-数据类型"><a href="#2-数据类型" class="headerlink" title="2 数据类型"></a>2 数据类型</h2><p>C++规定在创建一个变量或者常量时，必须要指定出相应的数据类型，否则无法给变量分配内存</p><h3 id="2-1-整型"><a href="#2-1-整型" class="headerlink" title="2.1 整型"></a>2.1 整型</h3><p><strong>作用</strong>：整型变量表示的是==整数类型==的数据</p><p>C++中能够表示整型的类型有以下几种方式，<strong>区别在于所占内存空间不同</strong>：</p><div class="table-container"><table><thead><tr><th style="text-align:center"><strong>数据类型</strong></th><th style="text-align:center"><strong>占用空间</strong></th><th style="text-align:center">取值范围</th></tr></thead><tbody><tr><td style="text-align:center">short(短整型)</td><td style="text-align:center">2字节</td><td style="text-align:center">(-2^15 ~ 2^15-1)</td></tr><tr><td style="text-align:center">int(整型)</td><td style="text-align:center">4字节</td><td style="text-align:center">(-2^31 ~ 2^31-1)</td></tr><tr><td style="text-align:center">long(长整形)</td><td style="text-align:center">Windows为4字节，Linux为4字节(32位)，8字节(64位)</td><td style="text-align:center">(-2^31 ~ 2^31-1)</td></tr><tr><td style="text-align:center">long long(长长整形)</td><td style="text-align:center">8字节</td><td style="text-align:center">(-2^63 ~ 2^63-1)</td></tr></tbody></table></div><h3 id="2-2-sizeof关键字"><a href="#2-2-sizeof关键字" class="headerlink" title="2.2 sizeof关键字"></a>2.2 sizeof关键字</h3><p><strong>作用：</strong>利用sizeof关键字可以==统计数据类型所占内存大小==</p><p><strong>语法：</strong> <code>sizeof( 数据类型 / 变量)</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;short 类型所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">short</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;int 类型所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">int</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;long 类型所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">long</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;long long 类型所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">long</span> <span class="type">long</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>整型结论</strong>：==short &lt; int &lt;= long &lt;= long long==</p></blockquote><h3 id="2-3-实型（浮点型）"><a href="#2-3-实型（浮点型）" class="headerlink" title="2.3 实型（浮点型）"></a>2.3 实型（浮点型）</h3><p><strong>作用</strong>：用于==表示小数==</p><p>浮点型变量分为两种：</p><ol><li>单精度float </li><li>双精度double</li></ol><p>两者的<strong>区别</strong>在于表示的有效数字范围不同。</p><div class="table-container"><table><thead><tr><th style="text-align:center"><strong>数据类型</strong></th><th style="text-align:center"><strong>占用空间</strong></th><th style="text-align:center"><strong>有效数字范围</strong></th></tr></thead><tbody><tr><td style="text-align:center">float</td><td style="text-align:center">4字节</td><td style="text-align:center">7位有效数字</td></tr><tr><td style="text-align:center">double</td><td style="text-align:center">8字节</td><td style="text-align:center">15～16位有效数字</td></tr></tbody></table></div><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> f1 = <span class="number">3.14f</span>;</span><br><span class="line"><span class="type">double</span> d1 = <span class="number">3.14</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; f1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; d1&lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;float  sizeof = &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(f1) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;double sizeof = &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(d1) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//科学计数法</span></span><br><span class="line"><span class="type">float</span> f2 = <span class="number">3e2</span>; <span class="comment">// 3 * 10 ^ 2 </span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f2 = &quot;</span> &lt;&lt; f2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> f3 = <span class="number">3e-2</span>;  <span class="comment">// 3 * 0.1 ^ 2</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f3 = &quot;</span> &lt;&lt; f3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-4-字符型"><a href="#2-4-字符型" class="headerlink" title="2.4 字符型"></a>2.4 字符型</h3><p><strong>作用：</strong>字符型变量用于显示单个字符</p><p><strong>语法：</strong><code>char ch = &#39;a&#39;;</code></p><blockquote><p>注意1：在显示字符型变量时，用单引号将字符括起来，不要用双引号</p><p>注意2：单引号内只能有一个字符，不可以是字符串</p></blockquote><ul><li>C和C++中字符型变量只占用==1个字节==。</li><li>字符型变量并不是把字符本身放到内存中存储，而是将对应的ASCII编码放入到存储单元</li></ul><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> ch = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">cout &lt;&lt; ch &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">char</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ch = &quot;abcde&quot;; //错误，不可以用双引号</span></span><br><span class="line"><span class="comment">//ch = &#x27;abcde&#x27;; //错误，单引号内只能引用一个字符</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (<span class="type">int</span>)ch &lt;&lt; endl;  <span class="comment">//查看字符a对应的ASCII码</span></span><br><span class="line">ch = <span class="number">97</span>; <span class="comment">//可以直接用ASCII给字符型变量赋值</span></span><br><span class="line">cout &lt;&lt; ch &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ASCII码表格：</p><div class="table-container"><table><thead><tr><th style="text-align:center"><strong>ASCII</strong>值</th><th style="text-align:center"><strong>控制字符</strong></th><th style="text-align:center"><strong>ASCII</strong>值</th><th style="text-align:center"><strong>字符</strong></th><th style="text-align:center"><strong>ASCII</strong>值</th><th style="text-align:center"><strong>字符</strong></th><th style="text-align:center"><strong>ASCII</strong>值</th><th style="text-align:center"><strong>字符</strong></th></tr></thead><tbody><tr><td style="text-align:center">0</td><td style="text-align:center">NUT</td><td style="text-align:center">32</td><td style="text-align:center">(space)</td><td style="text-align:center">64</td><td style="text-align:center">@</td><td style="text-align:center">96</td><td style="text-align:center">、</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">SOH</td><td style="text-align:center">33</td><td style="text-align:center">!</td><td style="text-align:center">65</td><td style="text-align:center">A</td><td style="text-align:center">97</td><td style="text-align:center">a</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">STX</td><td style="text-align:center">34</td><td style="text-align:center">“</td><td style="text-align:center">66</td><td style="text-align:center">B</td><td style="text-align:center">98</td><td style="text-align:center">b</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">ETX</td><td style="text-align:center">35</td><td style="text-align:center">#</td><td style="text-align:center">67</td><td style="text-align:center">C</td><td style="text-align:center">99</td><td style="text-align:center">c</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">EOT</td><td style="text-align:center">36</td><td style="text-align:center">$</td><td style="text-align:center">68</td><td style="text-align:center">D</td><td style="text-align:center">100</td><td style="text-align:center">d</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">ENQ</td><td style="text-align:center">37</td><td style="text-align:center">%</td><td style="text-align:center">69</td><td style="text-align:center">E</td><td style="text-align:center">101</td><td style="text-align:center">e</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">ACK</td><td style="text-align:center">38</td><td style="text-align:center">&amp;</td><td style="text-align:center">70</td><td style="text-align:center">F</td><td style="text-align:center">102</td><td style="text-align:center">f</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">BEL</td><td style="text-align:center">39</td><td style="text-align:center">,</td><td style="text-align:center">71</td><td style="text-align:center">G</td><td style="text-align:center">103</td><td style="text-align:center">g</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">BS</td><td style="text-align:center">40</td><td style="text-align:center">(</td><td style="text-align:center">72</td><td style="text-align:center">H</td><td style="text-align:center">104</td><td style="text-align:center">h</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">HT</td><td style="text-align:center">41</td><td style="text-align:center">)</td><td style="text-align:center">73</td><td style="text-align:center">I</td><td style="text-align:center">105</td><td style="text-align:center">i</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">LF</td><td style="text-align:center">42</td><td style="text-align:center">*</td><td style="text-align:center">74</td><td style="text-align:center">J</td><td style="text-align:center">106</td><td style="text-align:center">j</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center">VT</td><td style="text-align:center">43</td><td style="text-align:center">+</td><td style="text-align:center">75</td><td style="text-align:center">K</td><td style="text-align:center">107</td><td style="text-align:center">k</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center">FF</td><td style="text-align:center">44</td><td style="text-align:center">,</td><td style="text-align:center">76</td><td style="text-align:center">L</td><td style="text-align:center">108</td><td style="text-align:center">l</td></tr><tr><td style="text-align:center">13</td><td style="text-align:center">CR</td><td style="text-align:center">45</td><td style="text-align:center">-</td><td style="text-align:center">77</td><td style="text-align:center">M</td><td style="text-align:center">109</td><td style="text-align:center">m</td></tr><tr><td style="text-align:center">14</td><td style="text-align:center">SO</td><td style="text-align:center">46</td><td style="text-align:center">.</td><td style="text-align:center">78</td><td style="text-align:center">N</td><td style="text-align:center">110</td><td style="text-align:center">n</td></tr><tr><td style="text-align:center">15</td><td style="text-align:center">SI</td><td style="text-align:center">47</td><td style="text-align:center">/</td><td style="text-align:center">79</td><td style="text-align:center">O</td><td style="text-align:center">111</td><td style="text-align:center">o</td></tr><tr><td style="text-align:center">16</td><td style="text-align:center">DLE</td><td style="text-align:center">48</td><td style="text-align:center">0</td><td style="text-align:center">80</td><td style="text-align:center">P</td><td style="text-align:center">112</td><td style="text-align:center">p</td></tr><tr><td style="text-align:center">17</td><td style="text-align:center">DCI</td><td style="text-align:center">49</td><td style="text-align:center">1</td><td style="text-align:center">81</td><td style="text-align:center">Q</td><td style="text-align:center">113</td><td style="text-align:center">q</td></tr><tr><td style="text-align:center">18</td><td style="text-align:center">DC2</td><td style="text-align:center">50</td><td style="text-align:center">2</td><td style="text-align:center">82</td><td style="text-align:center">R</td><td style="text-align:center">114</td><td style="text-align:center">r</td></tr><tr><td style="text-align:center">19</td><td style="text-align:center">DC3</td><td style="text-align:center">51</td><td style="text-align:center">3</td><td style="text-align:center">83</td><td style="text-align:center">S</td><td style="text-align:center">115</td><td style="text-align:center">s</td></tr><tr><td style="text-align:center">20</td><td style="text-align:center">DC4</td><td style="text-align:center">52</td><td style="text-align:center">4</td><td style="text-align:center">84</td><td style="text-align:center">T</td><td style="text-align:center">116</td><td style="text-align:center">t</td></tr><tr><td style="text-align:center">21</td><td style="text-align:center">NAK</td><td style="text-align:center">53</td><td style="text-align:center">5</td><td style="text-align:center">85</td><td style="text-align:center">U</td><td style="text-align:center">117</td><td style="text-align:center">u</td></tr><tr><td style="text-align:center">22</td><td style="text-align:center">SYN</td><td style="text-align:center">54</td><td style="text-align:center">6</td><td style="text-align:center">86</td><td style="text-align:center">V</td><td style="text-align:center">118</td><td style="text-align:center">v</td></tr><tr><td style="text-align:center">23</td><td style="text-align:center">TB</td><td style="text-align:center">55</td><td style="text-align:center">7</td><td style="text-align:center">87</td><td style="text-align:center">W</td><td style="text-align:center">119</td><td style="text-align:center">w</td></tr><tr><td style="text-align:center">24</td><td style="text-align:center">CAN</td><td style="text-align:center">56</td><td style="text-align:center">8</td><td style="text-align:center">88</td><td style="text-align:center">X</td><td style="text-align:center">120</td><td style="text-align:center">x</td></tr><tr><td style="text-align:center">25</td><td style="text-align:center">EM</td><td style="text-align:center">57</td><td style="text-align:center">9</td><td style="text-align:center">89</td><td style="text-align:center">Y</td><td style="text-align:center">121</td><td style="text-align:center">y</td></tr><tr><td style="text-align:center">26</td><td style="text-align:center">SUB</td><td style="text-align:center">58</td><td style="text-align:center">:</td><td style="text-align:center">90</td><td style="text-align:center">Z</td><td style="text-align:center">122</td><td style="text-align:center">z</td></tr><tr><td style="text-align:center">27</td><td style="text-align:center">ESC</td><td style="text-align:center">59</td><td style="text-align:center">;</td><td style="text-align:center">91</td><td style="text-align:center">[</td><td style="text-align:center">123</td><td style="text-align:center">{</td></tr><tr><td style="text-align:center">28</td><td style="text-align:center">FS</td><td style="text-align:center">60</td><td style="text-align:center">&lt;</td><td style="text-align:center">92</td><td style="text-align:center">/</td><td style="text-align:center">124</td><td style="text-align:center">\</td><td></td></tr><tr><td style="text-align:center">29</td><td style="text-align:center">GS</td><td style="text-align:center">61</td><td style="text-align:center">=</td><td style="text-align:center">93</td><td style="text-align:center">]</td><td style="text-align:center">125</td><td style="text-align:center">}</td></tr><tr><td style="text-align:center">30</td><td style="text-align:center">RS</td><td style="text-align:center">62</td><td style="text-align:center">&gt;</td><td style="text-align:center">94</td><td style="text-align:center">^</td><td style="text-align:center">126</td><td style="text-align:center">`</td></tr><tr><td style="text-align:center">31</td><td style="text-align:center">US</td><td style="text-align:center">63</td><td style="text-align:center">?</td><td style="text-align:center">95</td><td style="text-align:center">_</td><td style="text-align:center">127</td><td style="text-align:center">DEL</td></tr></tbody></table></div><p>ASCII 码大致由以下<strong>两部分组</strong>成：</p><ul><li>ASCII 非打印控制字符： ASCII 表上的数字 <strong>0-31</strong> 分配给了控制字符，用于控制像打印机等一些外围设备。</li><li>ASCII 打印字符：数字 <strong>32-126</strong> 分配给了能在键盘上找到的字符，当查看或打印文档时就会出现。</li></ul><h3 id="2-5-转义字符"><a href="#2-5-转义字符" class="headerlink" title="2.5 转义字符"></a>2.5 转义字符</h3><p><strong>作用：</strong>用于表示一些==不能显示出来的ASCII字符==</p><p>现阶段我们常用的转义字符有：<code>\n  \\  \t</code></p><div class="table-container"><table><thead><tr><th style="text-align:center"><strong>转义字符</strong></th><th style="text-align:center"><strong>含义</strong></th><th style="text-align:center"><strong>ASCII</strong>码值（十进制）</th></tr></thead><tbody><tr><td style="text-align:center">\a</td><td style="text-align:center">警报</td><td style="text-align:center">007</td></tr><tr><td style="text-align:center">\b</td><td style="text-align:center">退格(BS) ，将当前位置移到前一列</td><td style="text-align:center">008</td></tr><tr><td style="text-align:center">\f</td><td style="text-align:center">换页(FF)，将当前位置移到下页开头</td><td style="text-align:center">012</td></tr><tr><td style="text-align:center"><strong>\n</strong></td><td style="text-align:center"><strong>换行(LF) ，将当前位置移到下一行开头</strong></td><td style="text-align:center"><strong>010</strong></td></tr><tr><td style="text-align:center">\r</td><td style="text-align:center">回车(CR) ，将当前位置移到本行开头</td><td style="text-align:center">013</td></tr><tr><td style="text-align:center"><strong>\t</strong></td><td style="text-align:center"><strong>水平制表(HT)  （跳到下一个TAB位置）</strong></td><td style="text-align:center"><strong>009</strong></td></tr><tr><td style="text-align:center">\v</td><td style="text-align:center">垂直制表(VT)</td><td style="text-align:center">011</td></tr><tr><td style="text-align:center"><strong>\\</strong></td><td style="text-align:center"><strong>代表一个反斜线字符”\”</strong></td><td style="text-align:center"><strong>092</strong></td></tr><tr><td style="text-align:center">\’</td><td style="text-align:center">代表一个单引号（撇号）字符</td><td style="text-align:center">039</td></tr><tr><td style="text-align:center">\”</td><td style="text-align:center">代表一个双引号字符</td><td style="text-align:center">034</td></tr><tr><td style="text-align:center">\?</td><td style="text-align:center">代表一个问号</td><td style="text-align:center">063</td></tr><tr><td style="text-align:center">\0</td><td style="text-align:center">数字0</td><td style="text-align:center">000</td></tr><tr><td style="text-align:center">\ddd</td><td style="text-align:center">8进制转义字符，d范围0~7</td><td style="text-align:center">3位8进制</td></tr><tr><td style="text-align:center">\xhh</td><td style="text-align:center">16进制转义字符，h范围0~9，a~f，A~F</td><td style="text-align:center">3位16进制</td></tr></tbody></table></div><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\\&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\tHello&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-6-字符串型"><a href="#2-6-字符串型" class="headerlink" title="2.6 字符串型"></a>2.6 字符串型</h3><p><strong>作用</strong>：用于表示一串字符</p><p><strong>两种风格</strong></p><ol><li><p><strong>C风格字符串</strong>： <code>char 变量名[] = &quot;字符串值&quot;</code></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> str1[] = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">cout &lt;&lt; str1 &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>注意：C风格的字符串要用双引号括起来</p></blockquote><ol><li><p><strong>C++风格字符串</strong>：  <code>string  变量名 = &quot;字符串值&quot;</code></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">string str = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">cout &lt;&lt; str &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>注意：C++风格字符串，需要加入头文件==#include\<string>==</p></blockquote><h3 id="2-7-布尔类型-bool"><a href="#2-7-布尔类型-bool" class="headerlink" title="2.7 布尔类型 bool"></a>2.7 布尔类型 bool</h3><p><strong>作用：</strong>布尔数据类型代表真或假的值 </p><p>bool类型只有两个值：</p><ul><li>true  —- 真（本质是1）</li><li>false —- 假（本质是0）</li></ul><p><strong>bool类型占==1个字节==大小</strong></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; flag &lt;&lt; endl; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; flag &lt;&lt; endl; <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;size of bool = &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">bool</span>) &lt;&lt; endl; <span class="comment">//1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-8-数据的输入"><a href="#2-8-数据的输入" class="headerlink" title="2.8 数据的输入"></a>2.8 数据的输入</h3><p><strong>作用：用于从键盘获取数据</strong></p><p><strong>关键字：</strong>cin</p><p><strong>语法：</strong> <code>cin &gt;&gt; 变量</code></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//整型输入</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入整型变量：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//浮点型输入</span></span><br><span class="line"><span class="type">double</span> d = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入浮点型变量：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; d;</span><br><span class="line">cout &lt;&lt; d &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符型输入</span></span><br><span class="line"><span class="type">char</span> ch = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入字符型变量：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">cout &lt;&lt; ch &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符串型输入</span></span><br><span class="line">string str;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入字符串型变量：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; str;</span><br><span class="line">cout &lt;&lt; str &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//布尔类型输入</span></span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入布尔型变量：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; flag;</span><br><span class="line">cout &lt;&lt; flag &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> EXIT_SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-运算符"><a href="#3-运算符" class="headerlink" title="3 运算符"></a>3 运算符</h2><p><strong>作用：</strong>用于执行代码的运算</p><p>本章我们主要讲解以下几类运算符：</p><div class="table-container"><table><thead><tr><th style="text-align:center"><strong>运算符类型</strong></th><th style="text-align:center"><strong>作用</strong></th></tr></thead><tbody><tr><td style="text-align:center">算术运算符</td><td style="text-align:center">用于处理四则运算</td></tr><tr><td style="text-align:center">赋值运算符</td><td style="text-align:center">用于将表达式的值赋给变量</td></tr><tr><td style="text-align:center">比较运算符</td><td style="text-align:center">用于表达式的比较，并返回一个真值或假值</td></tr><tr><td style="text-align:center">逻辑运算符</td><td style="text-align:center">用于根据表达式的值返回真值或假值</td></tr></tbody></table></div><h3 id="3-1-算术运算符"><a href="#3-1-算术运算符" class="headerlink" title="3.1 算术运算符"></a>3.1 算术运算符</h3><p><strong>作用</strong>：用于处理四则运算 </p><p>算术运算符包括以下符号：</p><div class="table-container"><table><thead><tr><th style="text-align:center"><strong>运算符</strong></th><th style="text-align:center"><strong>术语</strong></th><th style="text-align:center"><strong>示例</strong></th><th style="text-align:center"><strong>结果</strong></th></tr></thead><tbody><tr><td style="text-align:center">+</td><td style="text-align:center">正号</td><td style="text-align:center">+3</td><td style="text-align:center">3</td></tr><tr><td style="text-align:center">-</td><td style="text-align:center">负号</td><td style="text-align:center">-3</td><td style="text-align:center">-3</td></tr><tr><td style="text-align:center">+</td><td style="text-align:center">加</td><td style="text-align:center">10 + 5</td><td style="text-align:center">15</td></tr><tr><td style="text-align:center">-</td><td style="text-align:center">减</td><td style="text-align:center">10 - 5</td><td style="text-align:center">5</td></tr><tr><td style="text-align:center">*</td><td style="text-align:center">乘</td><td style="text-align:center">10 * 5</td><td style="text-align:center">50</td></tr><tr><td style="text-align:center">/</td><td style="text-align:center">除</td><td style="text-align:center">10 / 5</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">%</td><td style="text-align:center">取模(取余)</td><td style="text-align:center">10 % 3</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">++</td><td style="text-align:center">前置递增</td><td style="text-align:center">a=2; b=++a;</td><td style="text-align:center">a=3; b=3;</td></tr><tr><td style="text-align:center">++</td><td style="text-align:center">后置递增</td><td style="text-align:center">a=2; b=a++;</td><td style="text-align:center">a=3; b=2;</td></tr><tr><td style="text-align:center">—</td><td style="text-align:center">前置递减</td><td style="text-align:center">a=2; b=—a;</td><td style="text-align:center">a=1; b=1;</td></tr><tr><td style="text-align:center">—</td><td style="text-align:center">后置递减</td><td style="text-align:center">a=2; b=a—;</td><td style="text-align:center">a=1; b=2;</td></tr></tbody></table></div><p><strong>示例1：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加减乘除</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b1 = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; a1 + b1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; a1 - b1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; a1 * b1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; a1 / b1 &lt;&lt; endl;  <span class="comment">//两个整数相除结果依然是整数</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a2 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b2 = <span class="number">20</span>;</span><br><span class="line">cout &lt;&lt; a2 / b2 &lt;&lt; endl; </span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a3 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b3 = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//cout &lt;&lt; a3 / b3 &lt;&lt; endl; //报错，除数不可以为0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//两个小数可以相除</span></span><br><span class="line"><span class="type">double</span> d1 = <span class="number">0.5</span>;</span><br><span class="line"><span class="type">double</span> d2 = <span class="number">0.25</span>;</span><br><span class="line">cout &lt;&lt; d1 / d2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：在除法运算中，除数不能为0</p></blockquote><p><strong>示例2：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//取模</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b1 = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="number">10</span> % <span class="number">3</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a2 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b2 = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; a2 % b2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a3 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b3 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//cout &lt;&lt; a3 % b3 &lt;&lt; endl; //取模运算时，除数也不能为0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//两个小数不可以取模</span></span><br><span class="line"><span class="type">double</span> d1 = <span class="number">3.14</span>;</span><br><span class="line"><span class="type">double</span> d2 = <span class="number">1.1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//cout &lt;&lt; d1 % d2 &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>总结：只有整型变量可以进行取模运算</p></blockquote><p><strong>示例3：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//递增</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//后置递增</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">a++; <span class="comment">//等价于a = a + 1</span></span><br><span class="line">cout &lt;&lt; a &lt;&lt; endl; <span class="comment">// 11</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//前置递增</span></span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line">++b;</span><br><span class="line">cout &lt;&lt; b &lt;&lt; endl; <span class="comment">// 11</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//区别</span></span><br><span class="line"><span class="comment">//前置递增先对变量进行++，再计算表达式</span></span><br><span class="line"><span class="type">int</span> a2 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b2 = ++a2 * <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; b2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//后置递增先计算表达式，后对变量进行++</span></span><br><span class="line"><span class="type">int</span> a3 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b3 = a3++ * <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; b3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>总结：前置递增先对变量进行++，再计算表达式，后置递增相反</p></blockquote><h3 id="3-2-赋值运算符"><a href="#3-2-赋值运算符" class="headerlink" title="3.2 赋值运算符"></a>3.2 赋值运算符</h3><p><strong>作用：</strong>用于将表达式的值赋给变量</p><p>赋值运算符包括以下几个符号：</p><div class="table-container"><table><thead><tr><th style="text-align:center"><strong>运算符</strong></th><th style="text-align:center"><strong>术语</strong></th><th style="text-align:center"><strong>示例</strong></th><th style="text-align:center"><strong>结果</strong></th></tr></thead><tbody><tr><td style="text-align:center">=</td><td style="text-align:center">赋值</td><td style="text-align:center">a=2; b=3;</td><td style="text-align:center">a=2; b=3;</td></tr><tr><td style="text-align:center">+=</td><td style="text-align:center">加等于</td><td style="text-align:center">a=0; a+=2;</td><td style="text-align:center">a=2;</td></tr><tr><td style="text-align:center">-=</td><td style="text-align:center">减等于</td><td style="text-align:center">a=5; a-=3;</td><td style="text-align:center">a=2;</td></tr><tr><td style="text-align:center">*=</td><td style="text-align:center">乘等于</td><td style="text-align:center">a=2; a*=2;</td><td style="text-align:center">a=4;</td></tr><tr><td style="text-align:center">/=</td><td style="text-align:center">除等于</td><td style="text-align:center">a=4; a/=2;</td><td style="text-align:center">a=2;</td></tr><tr><td style="text-align:center">%=</td><td style="text-align:center">模等于</td><td style="text-align:center">a=3; a%2;</td><td style="text-align:center">a=1;</td></tr></tbody></table></div><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//赋值运算符</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// =</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">a = <span class="number">100</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// +=</span></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">a += <span class="number">2</span>; <span class="comment">// a = a + 2;</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// -=</span></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">a -= <span class="number">2</span>; <span class="comment">// a = a - 2</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// *=</span></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">a *= <span class="number">2</span>; <span class="comment">// a = a * 2</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// /=</span></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">a /= <span class="number">2</span>;  <span class="comment">// a = a / 2;</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// %=</span></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">a %= <span class="number">2</span>;  <span class="comment">// a = a % 2;</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-比较运算符"><a href="#3-3-比较运算符" class="headerlink" title="3.3 比较运算符"></a>3.3 比较运算符</h3><p><strong>作用：</strong>用于表达式的比较，并返回一个真值或假值</p><p>比较运算符有以下符号：</p><div class="table-container"><table><thead><tr><th style="text-align:center"><strong>运算符</strong></th><th style="text-align:center"><strong>术语</strong></th><th style="text-align:center"><strong>示例</strong></th><th style="text-align:center"><strong>结果</strong></th></tr></thead><tbody><tr><td style="text-align:center">==</td><td style="text-align:center">相等于</td><td style="text-align:center">4 == 3</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">!=</td><td style="text-align:center">不等于</td><td style="text-align:center">4 != 3</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">&lt;</td><td style="text-align:center">小于</td><td style="text-align:center">4 &lt; 3</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">></td><td style="text-align:center">大于</td><td style="text-align:center">4 &gt; 3</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">&lt;=</td><td style="text-align:center">小于等于</td><td style="text-align:center">4 &lt;= 3</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">>=</td><td style="text-align:center">大于等于</td><td style="text-align:center">4 &gt;= 1</td><td style="text-align:center">1</td></tr></tbody></table></div><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a == b) &lt;&lt; endl; <span class="comment">// 0 </span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a != b) &lt;&lt; endl; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &gt; b) &lt;&lt; endl; <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &lt; b) &lt;&lt; endl; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &gt;= b) &lt;&lt; endl; <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &lt;= b) &lt;&lt; endl; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：C和C++ 语言的比较运算中， ==“真”用数字“1”来表示， “假”用数字“0”来表示。== </p></blockquote><h3 id="3-4-逻辑运算符"><a href="#3-4-逻辑运算符" class="headerlink" title="3.4 逻辑运算符"></a>3.4 逻辑运算符</h3><p><strong>作用：</strong>用于根据表达式的值返回真值或假值</p><p>逻辑运算符有以下符号：</p><div class="table-container"><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">术语</th><th style="text-align:center">示例</th><th style="text-align:center">结果</th></tr></thead><tbody><tr><td style="text-align:center">!</td><td style="text-align:center">非</td><td style="text-align:center">!a</td><td style="text-align:center">如果a为假，则!a为真；如果a为真，则!a为假。</td></tr><tr><td style="text-align:center">&amp;&amp;</td><td style="text-align:center">与</td><td style="text-align:center">a&amp;&amp;b</td><td style="text-align:center">如果a和b都为真，则结果微针，否则为假。</td></tr><tr><td style="text-align:center">&#124;&#124;</td><td style="text-align:center">或</td><td style="text-align:center">a&#124;&#124;b</td><td style="text-align:center">如果a和b有一个为真，则结果为真，二者都为假时，结果为假。</td></tr></tbody></table></div><p><strong>示例1：</strong>逻辑非</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//逻辑运算符  --- 非</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; !a &lt;&lt; endl; <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; !!a &lt;&lt; endl; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结： 真变假，假变真</p></blockquote><p><strong>示例2：</strong>逻辑与</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//逻辑运算符  --- 与</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &amp;&amp; b) &lt;&lt; endl;<span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &amp;&amp; b) &lt;&lt; endl;<span class="comment">// 0 </span></span><br><span class="line"></span><br><span class="line">a = <span class="number">0</span>;</span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &amp;&amp; b) &lt;&lt; endl;<span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>总结：逻辑==与==运算符总结： ==同真为真，其余为假==</p></blockquote><p><strong>示例3：</strong>逻辑或</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//逻辑运算符  --- 或</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a || b) &lt;&lt; endl;<span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a || b) &lt;&lt; endl;<span class="comment">// 1 </span></span><br><span class="line"></span><br><span class="line">a = <span class="number">0</span>;</span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a || b) &lt;&lt; endl;<span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>逻辑==或==运算符总结： ==同假为假，其余为真==</p></blockquote><h2 id="4-程序流程结构"><a href="#4-程序流程结构" class="headerlink" title="4 程序流程结构"></a>4 程序流程结构</h2><p>C/C++支持最基本的三种程序运行结构：==顺序结构、选择结构、循环结构==</p><ul><li>顺序结构：程序按顺序执行，不发生跳转</li><li>选择结构：依据条件是否满足，有选择的执行相应功能</li><li>循环结构：依据条件是否满足，循环多次执行某段代码</li></ul><h3 id="4-1-选择结构"><a href="#4-1-选择结构" class="headerlink" title="4.1 选择结构"></a>4.1 选择结构</h3><h4 id="4-1-1-if语句"><a href="#4-1-1-if语句" class="headerlink" title="4.1.1 if语句"></a>4.1.1 if语句</h4><p><strong>作用：</strong>执行满足条件的语句</p><p>if语句的三种形式</p><ul><li><p>单行格式if语句</p></li><li><p>多行格式if语句</p></li><li><p>多条件的if语句</p></li></ul><ol><li><p>单行格式if语句：<code>if(条件)&#123; 条件满足执行的语句 &#125;</code></p><p><img src="https://pic.imgdb.cn/item/66b433d0d9c307b7e97f820c.png" alt="code"></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择结构-单行if语句</span></span><br><span class="line"><span class="comment">//输入一个分数，如果分数大于600分，视为考上一本大学，并在屏幕上打印</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入一个分数：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;您输入的分数为： &quot;</span> &lt;&lt; score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//if语句</span></span><br><span class="line"><span class="comment">//注意事项，在if判断语句后面，不要加分号</span></span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了一本大学！！！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>注意：if条件表达式后不要加分号</p></blockquote><ol><li>多行格式if语句：<code>if(条件)&#123; 条件满足执行的语句 &#125;else&#123; 条件不满足执行的语句 &#125;;</code></li></ol><p><img src="https://pic.imgdb.cn/item/66b433d0d9c307b7e97f8222.png" alt="code"></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入考试分数：&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了一本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我未考上一本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>多条件的if语句：<code>if(条件1)&#123; 条件1满足执行的语句 &#125;else if(条件2)&#123;条件2满足执行的语句&#125;... else&#123; 都不满足执行的语句&#125;</code></li></ol><p><img src="https://pic.imgdb.cn/item/66b433d0d9c307b7e97f8230.png" alt="code"></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入考试分数：&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了一本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">500</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了二本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">400</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了三本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我未考上本科&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>嵌套if语句</strong>：在if语句中，可以嵌套使用if语句，达到更精确的条件判断</p><p>案例需求：</p><ul><li>提示用户输入一个高考考试分数，根据分数做如下判断</li><li>分数如果大于600分视为考上一本，大于500分考上二本，大于400考上三本，其余视为未考上本科；</li><li>在一本分数中，如果大于700分，考入北大，大于650分，考入清华，大于600考入人大。</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入考试分数：&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了一本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">700</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了北大&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">650</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了清华&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了人大&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">500</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了二本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">400</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了三本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我未考上本科&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>练习案例：</strong> 三只小猪称体重</p><p>有三只小猪ABC，请分别输入三只小猪的体重，并且判断哪只小猪最重？</p><p><img src="https://pic.imgdb.cn/item/66b43109d9c307b7e97d3c9e.jpg" alt="code"></p><h4 id="4-1-2-三目运算符"><a href="#4-1-2-三目运算符" class="headerlink" title="4.1.2 三目运算符"></a>4.1.2 三目运算符</h4><p><strong>作用：</strong> 通过三目运算符实现简单的判断</p><p><strong>语法：</strong><code>表达式1 ? 表达式2 ：表达式3</code></p><p><strong>解释：</strong></p><p>如果表达式1的值为真，执行表达式2，并返回表达式2的结果；</p><p>如果表达式1的值为假，执行表达式3，并返回表达式3的结果。</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">c = a &gt; b ? a : b;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c = &quot;</span> &lt;&lt; c &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//C++中三目运算符返回的是变量,可以继续赋值</span></span><br><span class="line"></span><br><span class="line">(a &gt; b ? a : b) = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c = &quot;</span> &lt;&lt; c &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：和if语句比较，三目运算符优点是短小整洁，缺点是如果用嵌套，结构不清晰</p></blockquote><h4 id="4-1-3-switch语句"><a href="#4-1-3-switch语句" class="headerlink" title="4.1.3 switch语句"></a>4.1.3 switch语句</h4><p><strong>作用：</strong>执行多条件分支语句</p><p><strong>语法：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(表达式)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> 结果<span class="number">1</span>：执行语句;<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> 结果<span class="number">2</span>：执行语句;<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:执行语句;<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//请给电影评分 </span></span><br><span class="line"><span class="comment">//10 ~ 9   经典   </span></span><br><span class="line"><span class="comment">// 8 ~ 7   非常好</span></span><br><span class="line"><span class="comment">// 6 ~ 5   一般</span></span><br><span class="line"><span class="comment">// 5分以下 烂片</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请给电影打分&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (score)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;经典&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;非常好&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;一般&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;烂片&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意1：switch语句中表达式类型只能是整型或者字符型</p><p>注意2：case里如果没有break，那么程序会一直向下执行</p><p>总结：与if语句比，对于多条件判断时，switch的结构清晰，执行效率高，缺点是switch不可以判断区间</p></blockquote><h3 id="4-2-循环结构"><a href="#4-2-循环结构" class="headerlink" title="4.2 循环结构"></a>4.2 循环结构</h3><h4 id="4-2-1-while循环语句"><a href="#4-2-1-while循环语句" class="headerlink" title="4.2.1 while循环语句"></a>4.2.1 while循环语句</h4><p><strong>作用：</strong>满足循环条件，执行循环语句</p><p><strong>语法：</strong><code>while(循环条件)&#123; 循环语句 &#125;</code></p><p><strong>解释：</strong>==只要循环条件的结果为真，就执行循环语句==</p><p><img src="https://pic.imgdb.cn/item/66b433d0d9c307b7e97f823a.png" alt="code"></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (num &lt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num = &quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：在执行循环语句时候，程序必须提供跳出循环的出口，否则出现死循环</p></blockquote><p><strong>while循环练习案例：</strong>==猜数字==</p><p><strong>案例描述：</strong>系统随机生成一个1到100之间的数字，玩家进行猜测，如果猜错，提示玩家数字过大或过小，如果猜对恭喜玩家胜利，并且退出游戏。</p><p><img src="https://pic.imgdb.cn/item/66b43109d9c307b7e97d3cb8.jpg" alt="code"></p><h4 id="4-2-2-do…while循环语句"><a href="#4-2-2-do…while循环语句" class="headerlink" title="4.2.2 do…while循环语句"></a>4.2.2 do…while循环语句</h4><p><strong>作用：</strong> 满足循环条件，执行循环语句</p><p><strong>语法：</strong> <code>do&#123; 循环语句 &#125; while(循环条件);</code></p><p><strong>注意：</strong>与while的区别在于==do…while会先执行一次循环语句==，再判断循环条件</p><p><img src="https://pic.imgdb.cn/item/66b433d0d9c307b7e97f8248.png" alt="code"></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">num++;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">while</span> (num &lt; <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：与while循环区别在于，do…while先执行一次循环语句，再判断循环条件</p></blockquote><p><strong>练习案例：水仙花数</strong></p><p><strong>案例描述：</strong>水仙花数是指一个 3 位数，它的每个位上的数字的 3次幂之和等于它本身</p><p>例如：1^3 + 5^3+ 3^3 = 153</p><p>请利用do…while语句，求出所有3位数中的水仙花数</p><h4 id="4-2-3-for循环语句"><a href="#4-2-3-for循环语句" class="headerlink" title="4.2.3 for循环语句"></a>4.2.3 for循环语句</h4><p><strong>作用：</strong> 满足循环条件，执行循环语句</p><p><strong>语法：</strong><code>for(起始表达式;条件表达式;末尾循环体) &#123; 循环语句; &#125;</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>详解：</strong></p><p><img src="https://pic.imgdb.cn/item/66b43481d9c307b7e97ffd24.jpg" alt="code"></p><blockquote><p>注意：for循环中的表达式，要用分号进行分隔</p><p>总结：while , do…while, for都是开发中常用的循环语句，for循环结构比较清晰，比较常用</p></blockquote><p><strong>练习案例：敲桌子</strong></p><p>案例描述：从1开始数到数字100， 如果数字个位含有7，或者数字十位含有7，或者该数字是7的倍数，我们打印敲桌子，其余数字直接打印输出。</p><p><img src="https://pic.imgdb.cn/item/66b43109d9c307b7e97d3cac.jpg" alt="code"></p><h4 id="4-2-4-嵌套循环"><a href="#4-2-4-嵌套循环" class="headerlink" title="4.2.4 嵌套循环"></a>4.2.4 嵌套循环</h4><p><strong>作用：</strong> 在循环体中再嵌套一层循环，解决一些实际问题</p><p>例如我们想在屏幕中打印如下图片，就需要利用嵌套循环</p><p><img src="https://pic.imgdb.cn/item/66b43482d9c307b7e97ffd57.png" alt="code"></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//外层循环执行1次，内层循环执行1轮</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>练习案例：</strong>乘法口诀表</p><p>案例描述：利用嵌套循环，实现九九乘法表</p><p><img src="https://pic.imgdb.cn/item/66b43109d9c307b7e97d3cc3.jpg" alt="code"></p><h3 id="4-3-跳转语句"><a href="#4-3-跳转语句" class="headerlink" title="4.3 跳转语句"></a>4.3 跳转语句</h3><h4 id="4-3-1-break语句"><a href="#4-3-1-break语句" class="headerlink" title="4.3.1 break语句"></a>4.3.1 break语句</h4><p><strong>作用:</strong> 用于跳出==选择结构==或者==循环结构==</p><p>break使用的时机：</p><ul><li>出现在switch条件语句中，作用是终止case并跳出switch</li><li>出现在循环语句中，作用是跳出当前的循环语句</li><li>出现在嵌套循环中，跳出最近的内层循环语句</li></ul><p><strong>示例1：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//1、在switch 语句中使用break</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请选择您挑战副本的难度：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1、普通&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2、中等&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;3、困难&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; num;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (num)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;您选择的是普通难度&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;您选择的是中等难度&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;您选择的是困难难度&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>示例2：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//2、在循环语句中用break</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>; <span class="comment">//跳出循环语句</span></span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>示例3：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//在嵌套循环语句中使用break，退出内层循环</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (j == <span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-3-2-continue语句"><a href="#4-3-2-continue语句" class="headerlink" title="4.3.2 continue语句"></a>4.3.2 continue语句</h4><p><strong>作用：</strong>在==循环语句==中，跳过本次循环中余下尚未执行的语句，继续执行下一次循环</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：continue并没有使整个循环终止，而break会跳出循环</p></blockquote><h4 id="4-3-3-goto语句"><a href="#4-3-3-goto语句" class="headerlink" title="4.3.3 goto语句"></a>4.3.3 goto语句</h4><p><strong>作用：</strong>可以无条件跳转语句</p><p><strong>语法：</strong> <code>goto 标记;</code></p><p><strong>解释：</strong>如果标记的名称存在，执行到goto语句时，会跳转到标记的位置</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">goto</span> FLAG;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;3&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;4&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">FLAG:</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;5&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：在程序中不建议使用goto语句，以免造成程序流程混乱</p></blockquote><h2 id="5-数组"><a href="#5-数组" class="headerlink" title="5 数组"></a>5 数组</h2><h3 id="5-1-概述"><a href="#5-1-概述" class="headerlink" title="5.1 概述"></a>5.1 概述</h3><p>所谓数组，就是一个集合，里面存放了相同类型的数据元素</p><p><strong>特点1：</strong>数组中的每个==数据元素都是相同的数据类型==</p><p><strong>特点2：</strong>数组是由==连续的内存==位置组成的</p><p><img src="https://pic.imgdb.cn/item/66b43109d9c307b7e97d3ccd.jpg" alt="code"></p><h3 id="5-2-一维数组"><a href="#5-2-一维数组" class="headerlink" title="5.2 一维数组"></a>5.2 一维数组</h3><h4 id="5-2-1-一维数组定义方式"><a href="#5-2-1-一维数组定义方式" class="headerlink" title="5.2.1 一维数组定义方式"></a>5.2.1 一维数组定义方式</h4><p>一维数组定义的三种方式：</p><ol><li><code>数据类型  数组名[ 数组长度 ];</code></li><li><code>数据类型  数组名[ 数组长度 ] = &#123; 值1，值2 ...&#125;;</code></li><li><code>数据类型  数组名[ ] = &#123; 值1，值2 ...&#125;;</code></li></ol><p>示例</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义方式1</span></span><br><span class="line"><span class="comment">//数据类型 数组名[元素个数];</span></span><br><span class="line"><span class="type">int</span> score[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用下标赋值</span></span><br><span class="line">score[<span class="number">0</span>] = <span class="number">100</span>;</span><br><span class="line">score[<span class="number">1</span>] = <span class="number">99</span>;</span><br><span class="line">score[<span class="number">2</span>] = <span class="number">85</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用下标输出</span></span><br><span class="line">cout &lt;&lt; score[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; score[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; score[<span class="number">2</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//第二种定义方式</span></span><br><span class="line"><span class="comment">//数据类型 数组名[元素个数] =  &#123;值1，值2 ，值3 ...&#125;;</span></span><br><span class="line"><span class="comment">//如果&#123;&#125;内不足10个数据，剩余数据用0补全</span></span><br><span class="line"><span class="type">int</span> score2[<span class="number">10</span>] = &#123; <span class="number">100</span>, <span class="number">90</span>,<span class="number">80</span>,<span class="number">70</span>,<span class="number">60</span>,<span class="number">50</span>,<span class="number">40</span>,<span class="number">30</span>,<span class="number">20</span>,<span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//逐个输出</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; score2[0] &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; score2[1] &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//一个一个输出太麻烦，因此可以利用循环进行输出</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; score2[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义方式3</span></span><br><span class="line"><span class="comment">//数据类型 数组名[] =  &#123;值1，值2 ，值3 ...&#125;;</span></span><br><span class="line"><span class="type">int</span> score3[] = &#123; <span class="number">100</span>,<span class="number">90</span>,<span class="number">80</span>,<span class="number">70</span>,<span class="number">60</span>,<span class="number">50</span>,<span class="number">40</span>,<span class="number">30</span>,<span class="number">20</span>,<span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; score3[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结1：数组名的命名规范与变量名命名规范一致，不要和变量重名</p><p>总结2：数组中下标是从0开始索引</p></blockquote><h4 id="5-2-2-一维数组数组名"><a href="#5-2-2-一维数组数组名" class="headerlink" title="5.2.2 一维数组数组名"></a>5.2.2 一维数组数组名</h4><p>一维数组名称的<strong>用途</strong>：</p><ol><li>可以统计整个数组在内存中的长度</li><li>可以获取数组在内存中的首地址</li></ol><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//数组名用途</span></span><br><span class="line"><span class="comment">//1、可以获取整个数组占用内存空间大小</span></span><br><span class="line"><span class="type">int</span> arr[<span class="number">10</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;整个数组所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;每个元素所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;数组的元素个数为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr) / <span class="built_in">sizeof</span>(arr[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、可以通过数组名获取到数组首地址</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;数组首地址为： &quot;</span> &lt;&lt; (<span class="type">int</span>)arr &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;数组中第一个元素地址为： &quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;arr[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;数组中第二个元素地址为： &quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;arr[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//arr = 100; 错误，数组名是常量，因此不可以赋值</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：数组名是常量，不可以赋值</p><p>总结1：直接打印数组名，可以查看数组所占内存的首地址</p><p>总结2：对数组名进行sizeof，可以获取整个数组占内存空间的大小</p></blockquote><p><strong>练习案例1</strong>：五只小猪称体重</p><p><strong>案例描述：</strong></p><p>在一个数组中记录了五只小猪的体重，如：int arr[5] = {300,350,200,400,250};</p><p>找出并打印最重的小猪体重。</p><p><strong>练习案例2：</strong>数组元素逆置</p><p><strong>案例描述：</strong>请声明一个5个元素的数组，并且将元素逆置.</p><p>(如原数组元素为：1,3,2,5,4;逆置后输出结果为:4,5,2,3,1);</p><h4 id="5-2-3-冒泡排序"><a href="#5-2-3-冒泡排序" class="headerlink" title="5.2.3 冒泡排序"></a>5.2.3 冒泡排序</h4><p><strong>作用：</strong> 最常用的排序算法，对数组内元素进行排序</p><ol><li>比较相邻的元素。如果第一个比第二个大，就交换他们两个。</li><li>对每一对相邻元素做同样的工作，执行完毕后，找到第一个最大值。</li><li>重复以上的步骤，每次比较次数-1，直到不需要比较</li></ol><p><img src="https://pic.imgdb.cn/item/66b43482d9c307b7e97ffd6b.jpg" alt="code"></p><p><strong>示例：</strong> 将数组 { 4,2,8,0,5,7,1,3,9 } 进行升序排序</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr[<span class="number">9</span>] = &#123; <span class="number">4</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">9</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span> - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">9</span> - <span class="number">1</span> - i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> temp = arr[j];</span><br><span class="line">arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-3-二维数组"><a href="#5-3-二维数组" class="headerlink" title="5.3 二维数组"></a>5.3 二维数组</h3><p>二维数组就是在一维数组上，多加一个维度。</p><p><img src="https://pic.imgdb.cn/item/66b4322fd9c307b7e97e4d6a.jpg" alt="code"></p><h4 id="5-3-1-二维数组定义方式"><a href="#5-3-1-二维数组定义方式" class="headerlink" title="5.3.1 二维数组定义方式"></a>5.3.1 二维数组定义方式</h4><p>二维数组定义的四种方式：</p><ol><li><code>数据类型  数组名[ 行数 ][ 列数 ];</code></li><li><code>数据类型  数组名[ 行数 ][ 列数 ] = &#123; &#123;数据1，数据2 &#125; ，&#123;数据3，数据4 &#125; &#125;;</code></li><li><code>数据类型  数组名[ 行数 ][ 列数 ] = &#123; 数据1，数据2，数据3，数据4&#125;;</code></li><li><code>数据类型  数组名[  ][ 列数 ] = &#123; 数据1，数据2，数据3，数据4&#125;;</code></li></ol><blockquote><p>建议：以上4种定义方式，利用==第二种更加直观，提高代码的可读性==</p></blockquote><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方式1  </span></span><br><span class="line"><span class="comment">//数组类型 数组名 [行数][列数]</span></span><br><span class="line"><span class="type">int</span> arr[<span class="number">2</span>][<span class="number">3</span>];</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">2</span>] = <span class="number">3</span>;</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">4</span>;</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">5</span>;</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr[i][j] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方式2 </span></span><br><span class="line"><span class="comment">//数据类型 数组名[行数][列数] = &#123; &#123;数据1，数据2 &#125; ，&#123;数据3，数据4 &#125; &#125;;</span></span><br><span class="line"><span class="type">int</span> arr2[<span class="number">2</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方式3</span></span><br><span class="line"><span class="comment">//数据类型 数组名[行数][列数] = &#123; 数据1，数据2 ,数据3，数据4  &#125;;</span></span><br><span class="line"><span class="type">int</span> arr3[<span class="number">2</span>][<span class="number">3</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span> &#125;; </span><br><span class="line"></span><br><span class="line"><span class="comment">//方式4 </span></span><br><span class="line"><span class="comment">//数据类型 数组名[][列数] = &#123; 数据1，数据2 ,数据3，数据4  &#125;;</span></span><br><span class="line"><span class="type">int</span> arr4[][<span class="number">3</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：在定义二维数组时，如果初始化了数据，可以省略行数</p></blockquote><h4 id="5-3-2-二维数组数组名"><a href="#5-3-2-二维数组数组名" class="headerlink" title="5.3.2 二维数组数组名"></a>5.3.2 二维数组数组名</h4><ul><li>查看二维数组所占内存空间</li><li>获取二维数组首地址</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//二维数组数组名</span></span><br><span class="line"><span class="type">int</span> arr[<span class="number">2</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组大小： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组一行大小： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组元素大小： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr[<span class="number">0</span>][<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组行数： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr) / <span class="built_in">sizeof</span>(arr[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组列数： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr[<span class="number">0</span>]) / <span class="built_in">sizeof</span>(arr[<span class="number">0</span>][<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//地址</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组首地址：&quot;</span> &lt;&lt; arr &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第一行地址：&quot;</span> &lt;&lt; arr[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第二行地址：&quot;</span> &lt;&lt; arr[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第一个元素地址：&quot;</span> &lt;&lt; &amp;arr[<span class="number">0</span>][<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第二个元素地址：&quot;</span> &lt;&lt; &amp;arr[<span class="number">0</span>][<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结1：二维数组名就是这个数组的首地址</p><p>总结2：对二维数组名进行sizeof时，可以获取整个二维数组占用的内存空间大小</p></blockquote><h4 id="5-3-3-二维数组应用案例"><a href="#5-3-3-二维数组应用案例" class="headerlink" title="5.3.3 二维数组应用案例"></a><strong>5.3.3 二维数组应用案例</strong></h4><p><strong>考试成绩统计：</strong></p><p>案例描述：有三名同学（张三，李四，王五），在一次考试中的成绩分别如下表，<strong>请分别输出三名同学的总成绩</strong></p><div class="table-container"><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">语文</th><th style="text-align:center">数学</th><th style="text-align:center">英语</th></tr></thead><tbody><tr><td style="text-align:center">张三</td><td style="text-align:center">100</td><td style="text-align:center">100</td><td style="text-align:center">100</td></tr><tr><td style="text-align:center">李四</td><td style="text-align:center">90</td><td style="text-align:center">50</td><td style="text-align:center">100</td></tr><tr><td style="text-align:center">王五</td><td style="text-align:center">60</td><td style="text-align:center">70</td><td style="text-align:center">80</td></tr></tbody></table></div><p><strong>参考答案：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> scores[<span class="number">3</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>&#125;,</span><br><span class="line">&#123;<span class="number">90</span>,<span class="number">50</span>,<span class="number">100</span>&#125;,</span><br><span class="line">&#123;<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">string names[<span class="number">3</span>] = &#123; <span class="string">&quot;张三&quot;</span>,<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;王五&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">sum += scores[i][j];</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; names[i] &lt;&lt; <span class="string">&quot;同学总成绩为： &quot;</span> &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-函数"><a href="#6-函数" class="headerlink" title="6 函数"></a>6 函数</h2><h3 id="6-1-概述"><a href="#6-1-概述" class="headerlink" title="6.1 概述"></a>6.1 概述</h3><p><strong>作用：</strong>将一段经常使用的代码封装起来，减少重复代码</p><p>一个较大的程序，一般分为若干个程序块，每个模块实现特定的功能。</p><h3 id="6-2-函数的定义"><a href="#6-2-函数的定义" class="headerlink" title="6.2 函数的定义"></a>6.2 函数的定义</h3><p>函数的定义一般主要有5个步骤：</p><p>1、返回值类型 </p><p>2、函数名</p><p>3、参数表列</p><p>4、函数体语句 </p><p>5、return 表达式</p><p><strong>语法：</strong> </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">返回值类型 函数名 （参数列表）</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">       函数体语句</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span>表达式</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>返回值类型 ：一个函数可以返回一个值。在函数定义中</li><li>函数名：给函数起个名称</li><li>参数列表：使用该函数时，传入的数据</li><li>函数体语句：花括号内的代码，函数内需要执行的语句</li><li>return表达式： 和返回值类型挂钩，函数执行完后，返回相应的数据</li></ul><p><strong>示例：</strong>定义一个加法函数，实现两个数相加</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//函数定义</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> sum = num1 + num2;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-3-函数的调用"><a href="#6-3-函数的调用" class="headerlink" title="6.3 函数的调用"></a>6.3 函数的调用</h3><p><strong>功能：</strong>使用定义好的函数</p><p><strong>语法：</strong><code>函数名（参数）</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//函数定义</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span> <span class="comment">//定义中的num1,num2称为形式参数，简称形参</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> sum = num1 + num2;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//调用add函数</span></span><br><span class="line"><span class="type">int</span> sum = <span class="built_in">add</span>(a, b);<span class="comment">//调用时的a，b称为实际参数，简称实参</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;sum = &quot;</span> &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">a = <span class="number">100</span>;</span><br><span class="line">b = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">sum = <span class="built_in">add</span>(a, b);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;sum = &quot;</span> &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：函数定义里小括号内称为形参，函数调用时传入的参数称为实参</p></blockquote><h3 id="6-4-值传递"><a href="#6-4-值传递" class="headerlink" title="6.4 值传递"></a>6.4 值传递</h3><ul><li>所谓值传递，就是函数调用时实参将数值传入给形参</li><li>值传递时，==如果形参发生，并不会影响实参==</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;交换前：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num1 = &quot;</span> &lt;&lt; num1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num2 = &quot;</span> &lt;&lt; num2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> temp = num1;</span><br><span class="line">num1 = num2;</span><br><span class="line">num2 = temp;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;交换后：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num1 = &quot;</span> &lt;&lt; num1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num2 = &quot;</span> &lt;&lt; num2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//return ; 当函数声明时候，不需要返回值，可以不写return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">swap</span>(a, b);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;mian中的 a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;mian中的 b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结： 值传递时，形参是修饰不了实参的</p></blockquote><h3 id="6-5-函数的常见样式"><a href="#6-5-函数的常见样式" class="headerlink" title="6.5 函数的常见样式"></a><strong>6.5 函数的常见样式</strong></h3><p>常见的函数样式有4种</p><ol><li>无参无返</li><li>有参无返</li><li>无参有返</li><li>有参有返</li></ol><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//函数常见样式</span></span><br><span class="line"><span class="comment">//1、 无参无返</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//void a = 10; //无类型不可以创建变量,原因无法分配内存</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is test01&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//test01(); 函数调用</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、 有参无返</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is test02&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3、无参有返</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is test03 &quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//4、有参有返</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">test04</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is test04 &quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> sum = a + b;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-6-函数的声明"><a href="#6-6-函数的声明" class="headerlink" title="6.6 函数的声明"></a>6.6 函数的声明</h3><p><strong>作用：</strong> 告诉编译器函数名称及如何调用函数。函数的实际主体可以单独定义。</p><ul><li>函数的<strong>声明可以多次</strong>，但是函数的<strong>定义只能有一次</strong></li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//声明可以多次，定义只能一次</span></span><br><span class="line"><span class="comment">//声明</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"><span class="comment">//定义</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a &gt; b ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="built_in">max</span>(a, b) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-7-函数的分文件编写"><a href="#6-7-函数的分文件编写" class="headerlink" title="6.7 函数的分文件编写"></a>6.7 函数的分文件编写</h3><p><strong>作用：</strong>让代码结构更加清晰</p><p>函数分文件编写一般有4个步骤</p><ol><li>创建后缀名为.h的头文件  </li><li>创建后缀名为.cpp的源文件</li><li>在头文件中写函数的声明</li><li>在源文件中写函数的定义</li></ol><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//swap.h文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现两个数字交换的函数声明</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//swap.cpp文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;swap.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> temp = a;</span><br><span class="line">a = b;</span><br><span class="line">b = temp;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main函数文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;swap.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">200</span>;</span><br><span class="line"><span class="built_in">swap</span>(a, b);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="7-指针"><a href="#7-指针" class="headerlink" title="7 指针"></a>7 指针</h2><h3 id="7-1-指针的基本概念"><a href="#7-1-指针的基本概念" class="headerlink" title="7.1 指针的基本概念"></a>7.1 指针的基本概念</h3><p><strong>指针的作用：</strong> 可以通过指针间接访问内存</p><ul><li><p>内存编号是从0开始记录的，一般用十六进制数字表示</p></li><li><p>可以利用指针变量保存地址</p></li></ul><h3 id="7-2-指针变量的定义和使用"><a href="#7-2-指针变量的定义和使用" class="headerlink" title="7.2 指针变量的定义和使用"></a>7.2 指针变量的定义和使用</h3><p>指针变量定义语法： <code>数据类型 * 变量名；</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1、指针的定义</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>; <span class="comment">//定义整型变量a</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//指针定义语法： 数据类型 * 变量名 ;</span></span><br><span class="line"><span class="type">int</span> * p;</span><br><span class="line"></span><br><span class="line"><span class="comment">//指针变量赋值</span></span><br><span class="line">p = &amp;a; <span class="comment">//指针指向变量a的地址</span></span><br><span class="line">cout &lt;&lt; &amp;a &lt;&lt; endl; <span class="comment">//打印数据a的地址</span></span><br><span class="line">cout &lt;&lt; p &lt;&lt; endl;  <span class="comment">//打印指针变量p</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2、指针的使用</span></span><br><span class="line"><span class="comment">//通过*操作指针变量指向的内存</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p = &quot;</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>指针变量和普通变量的区别</p><ul><li>普通变量存放的是数据,指针变量存放的是地址</li><li>指针变量可以通过” * “操作符，操作指针变量指向的内存空间，这个过程称为解引用</li></ul><blockquote><p>总结1： 我们可以通过 &amp; 符号 获取变量的地址</p><p>总结2：利用指针可以记录地址</p><p>总结3：对指针变量解引用，可以操作指针指向的内存</p></blockquote><h3 id="7-3-指针所占内存空间"><a href="#7-3-指针所占内存空间" class="headerlink" title="7.3 指针所占内存空间"></a>7.3 指针所占内存空间</h3><p>提问：指针也是种数据类型，那么这种数据类型占用多少内存空间？</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> * p;</span><br><span class="line">p = &amp;a; <span class="comment">//指针指向数据a的地址</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl; <span class="comment">//* 解引用</span></span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(p) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">char</span> *) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">float</span> *) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">double</span> *) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：所有指针类型在32位操作系统下是4个字节</p></blockquote><h3 id="7-4-空指针和野指针"><a href="#7-4-空指针和野指针" class="headerlink" title="7.4 空指针和野指针"></a>7.4 空指针和野指针</h3><p><strong>空指针</strong>：指针变量指向内存中编号为0的空间</p><p><strong>用途：</strong>初始化指针变量</p><p><strong>注意：</strong>空指针指向的内存是不可以访问的</p><p><strong>示例1：空指针</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//指针变量p指向内存地址编号为0的空间</span></span><br><span class="line"><span class="type">int</span> * p = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问空指针报错 </span></span><br><span class="line"><span class="comment">//内存编号0 ~255为系统占用内存，不允许用户访问</span></span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>野指针</strong>：指针变量指向非法的内存空间</p><p><strong>示例2：野指针</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//指针变量p指向内存地址编号为0x1100的空间</span></span><br><span class="line"><span class="type">int</span> * p = (<span class="type">int</span> *)<span class="number">0x1100</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问野指针报错 </span></span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：空指针和野指针都不是我们申请的空间，因此不要访问。</p></blockquote><h3 id="7-5-const修饰指针"><a href="#7-5-const修饰指针" class="headerlink" title="7.5 const修饰指针"></a>7.5 const修饰指针</h3><p>const修饰指针有三种情况</p><ol><li>const修饰指针   —- 常量指针</li><li>const修饰常量   —- 指针常量</li><li>const即修饰指针，又修饰常量</li></ol><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//const修饰的是指针，指针指向可以改，指针指向的值不可以更改</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> * p1 = &amp;a; </span><br><span class="line">p1 = &amp;b; <span class="comment">//正确</span></span><br><span class="line"><span class="comment">//*p1 = 100;  报错</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//const修饰的是常量，指针指向不可以改，指针指向的值可以更改</span></span><br><span class="line"><span class="type">int</span> * <span class="type">const</span> p2 = &amp;a;</span><br><span class="line"><span class="comment">//p2 = &amp;b; //错误</span></span><br><span class="line">*p2 = <span class="number">100</span>; <span class="comment">//正确</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//const既修饰指针又修饰常量</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> * <span class="type">const</span> p3 = &amp;a;</span><br><span class="line"><span class="comment">//p3 = &amp;b; //错误</span></span><br><span class="line"><span class="comment">//*p3 = 100; //错误</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>技巧：看const右侧紧跟着的是指针还是常量, 是指针就是常量指针，是常量就是指针常量</p></blockquote><h3 id="7-6-指针和数组"><a href="#7-6-指针和数组" class="headerlink" title="7.6 指针和数组"></a>7.6 指针和数组</h3><p><strong>作用：</strong>利用指针访问数组中元素</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr[] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> * p = arr;  <span class="comment">//指向数组的指针</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第一个元素： &quot;</span> &lt;&lt; arr[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;指针访问第一个元素： &quot;</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//利用指针遍历数组</span></span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">p++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-7-指针和函数"><a href="#7-7-指针和函数" class="headerlink" title="7.7 指针和函数"></a>7.7 指针和函数</h3><p><strong>作用：</strong>利用指针作函数参数，可以修改实参的值</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//值传递</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap1</span><span class="params">(<span class="type">int</span> a ,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> temp = a;</span><br><span class="line">a = b; </span><br><span class="line">b = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//地址传递</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap2</span><span class="params">(<span class="type">int</span> * p1, <span class="type">int</span> *p2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> temp = *p1;</span><br><span class="line">*p1 = *p2;</span><br><span class="line">*p2 = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">swap1</span>(a, b); <span class="comment">// 值传递不会改变实参</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">swap2</span>(&amp;a, &amp;b); <span class="comment">//地址传递会改变实参</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：如果不想修改实参，就用值传递，如果想修改实参，就用地址传递</p></blockquote><h3 id="7-8-指针、数组、函数"><a href="#7-8-指针、数组、函数" class="headerlink" title="7.8 指针、数组、函数"></a>7.8 指针、数组、函数</h3><p><strong>案例描述：</strong>封装一个函数，利用冒泡排序，实现对整型数组的升序排序</p><p>例如数组：int arr[10] = { 4,3,6,9,1,2,10,8,7,5 };</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//冒泡排序函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bubbleSort</span><span class="params">(<span class="type">int</span> * arr, <span class="type">int</span> len)</span>  <span class="comment">//int * arr 也可以写为int arr[]</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> temp = arr[j];</span><br><span class="line">arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印数组函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printArray</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr[<span class="number">10</span>] = &#123; <span class="number">4</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">5</span> &#125;;</span><br><span class="line"><span class="type">int</span> len = <span class="built_in">sizeof</span>(arr) / <span class="built_in">sizeof</span>(<span class="type">int</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">bubbleSort</span>(arr, len);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printArray</span>(arr, len);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：当数组名传入到函数作为参数时，被退化为指向首元素的指针</p></blockquote><h2 id="8-结构体"><a href="#8-结构体" class="headerlink" title="8 结构体"></a>8 结构体</h2><h3 id="8-1-结构体基本概念"><a href="#8-1-结构体基本概念" class="headerlink" title="8.1 结构体基本概念"></a>8.1 结构体基本概念</h3><p>结构体属于用户==自定义的数据类型==，允许用户存储不同的数据类型</p><h3 id="8-2-结构体定义和使用"><a href="#8-2-结构体定义和使用" class="headerlink" title="8.2 结构体定义和使用"></a>8.2 结构体定义和使用</h3><p><strong>语法：</strong><code>struct 结构体名 &#123; 结构体成员列表 &#125;；</code></p><p>通过结构体创建变量的方式有三种：</p><ul><li>struct 结构体名 变量名</li><li>struct 结构体名 变量名 = { 成员1值 ， 成员2值…}</li><li>定义结构体时顺便创建变量</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//成员列表</span></span><br><span class="line">string name;  <span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line"><span class="type">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">&#125;stu3; <span class="comment">//结构体变量创建方式3 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结构体变量创建方式1</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> stu1; <span class="comment">//struct 关键字可以省略</span></span><br><span class="line"></span><br><span class="line">stu1.name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">stu1.age = <span class="number">18</span>;</span><br><span class="line">stu1.score = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; stu1.name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; stu1.age  &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu1.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结构体变量创建方式2</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> stu2 = &#123; <span class="string">&quot;李四&quot;</span>,<span class="number">19</span>,<span class="number">60</span> &#125;;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; stu2.name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; stu2.age  &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu2.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">stu3.name = <span class="string">&quot;王五&quot;</span>;</span><br><span class="line">stu3.age = <span class="number">18</span>;</span><br><span class="line">stu3.score = <span class="number">80</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; stu3.name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; stu3.age  &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu3.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结1：定义结构体时的关键字是struct，不可省略</p><p>总结2：创建结构体变量时，关键字struct可以省略</p><p>总结3：结构体变量利用操作符 ‘’.’’  访问成员</p></blockquote><h3 id="8-3-结构体数组"><a href="#8-3-结构体数组" class="headerlink" title="8.3 结构体数组"></a>8.3 结构体数组</h3><p><strong>作用：</strong>将自定义的结构体放入到数组中方便维护</p><p><strong>语法：</strong><code>struct  结构体名 数组名[元素个数] = &#123;  &#123;&#125; , &#123;&#125; , ... &#123;&#125; &#125;</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//成员列表</span></span><br><span class="line">string name;  <span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line"><span class="type">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结构体数组</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> arr[<span class="number">3</span>]=</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="string">&quot;张三&quot;</span>,<span class="number">18</span>,<span class="number">80</span> &#125;,</span><br><span class="line">&#123;<span class="string">&quot;李四&quot;</span>,<span class="number">19</span>,<span class="number">60</span> &#125;,</span><br><span class="line">&#123;<span class="string">&quot;王五&quot;</span>,<span class="number">20</span>,<span class="number">70</span> &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; arr[i].name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; arr[i].age &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; arr[i].score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-4-结构体指针"><a href="#8-4-结构体指针" class="headerlink" title="8.4 结构体指针"></a>8.4 结构体指针</h3><p><strong>作用：</strong>通过指针访问结构体中的成员</p><ul><li>利用操作符 <code>-&gt;</code>可以通过结构体指针访问结构体属性</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//成员列表</span></span><br><span class="line">string name;  <span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line"><span class="type">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> stu = &#123; <span class="string">&quot;张三&quot;</span>,<span class="number">18</span>,<span class="number">100</span>, &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> * p = &amp;stu;</span><br><span class="line"></span><br><span class="line">p-&gt;score = <span class="number">80</span>; <span class="comment">//指针通过 -&gt; 操作符可以访问成员</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; p-&gt;name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; p-&gt;age &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; p-&gt;score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：结构体指针可以通过 -&gt; 操作符 来访问结构体中的成员</p></blockquote><h3 id="8-5-结构体嵌套结构体"><a href="#8-5-结构体嵌套结构体" class="headerlink" title="8.5 结构体嵌套结构体"></a>8.5 结构体嵌套结构体</h3><p><strong>作用：</strong> 结构体中的成员可以是另一个结构体</p><p><strong>例如：</strong>每个老师辅导一个学员，一个老师的结构体中，记录一个学生的结构体</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//学生结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//成员列表</span></span><br><span class="line">string name;  <span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line"><span class="type">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//教师结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">teacher</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//成员列表</span></span><br><span class="line"><span class="type">int</span> id; <span class="comment">//职工编号</span></span><br><span class="line">string name;  <span class="comment">//教师姓名</span></span><br><span class="line"><span class="type">int</span> age;   <span class="comment">//教师年龄</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> stu; <span class="comment">//子结构体 学生</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">teacher</span> t1;</span><br><span class="line">t1.id = <span class="number">10000</span>;</span><br><span class="line">t1.name = <span class="string">&quot;老王&quot;</span>;</span><br><span class="line">t1.age = <span class="number">40</span>;</span><br><span class="line"></span><br><span class="line">t1.stu.name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">t1.stu.age = <span class="number">18</span>;</span><br><span class="line">t1.stu.score = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;教师 职工编号： &quot;</span> &lt;&lt; t1.id &lt;&lt; <span class="string">&quot; 姓名： &quot;</span> &lt;&lt; t1.name &lt;&lt; <span class="string">&quot; 年龄： &quot;</span> &lt;&lt; t1.age &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;辅导学员 姓名： &quot;</span> &lt;&lt; t1.stu.name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; t1.stu.age &lt;&lt; <span class="string">&quot; 考试分数： &quot;</span> &lt;&lt; t1.stu.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>总结：</strong>在结构体中可以定义另一个结构体作为成员，用来解决实际问题</p><h3 id="8-6-结构体做函数参数"><a href="#8-6-结构体做函数参数" class="headerlink" title="8.6 结构体做函数参数"></a>8.6 结构体做函数参数</h3><p><strong>作用：</strong>将结构体作为参数向函数中传递</p><p>传递方式有两种：</p><ul><li>值传递</li><li>地址传递</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//学生结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//成员列表</span></span><br><span class="line">string name;  <span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line"><span class="type">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//值传递</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent</span><span class="params">(student stu )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">stu.age = <span class="number">28</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;子函数中 姓名：&quot;</span> &lt;&lt; stu.name &lt;&lt; <span class="string">&quot; 年龄： &quot;</span> &lt;&lt; stu.age  &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu.score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//地址传递</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent2</span><span class="params">(student *stu)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">stu-&gt;age = <span class="number">28</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;子函数中 姓名：&quot;</span> &lt;&lt; stu-&gt;name &lt;&lt; <span class="string">&quot; 年龄： &quot;</span> &lt;&lt; stu-&gt;age  &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu-&gt;score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">student stu = &#123; <span class="string">&quot;张三&quot;</span>,<span class="number">18</span>,<span class="number">100</span>&#125;;</span><br><span class="line"><span class="comment">//值传递</span></span><br><span class="line"><span class="built_in">printStudent</span>(stu);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;主函数中 姓名：&quot;</span> &lt;&lt; stu.name &lt;&lt; <span class="string">&quot; 年龄： &quot;</span> &lt;&lt; stu.age &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//地址传递</span></span><br><span class="line"><span class="built_in">printStudent2</span>(&amp;stu);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;主函数中 姓名：&quot;</span> &lt;&lt; stu.name &lt;&lt; <span class="string">&quot; 年龄： &quot;</span> &lt;&lt; stu.age  &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：如果不想修改主函数中的数据，用值传递，反之用地址传递</p></blockquote><h3 id="8-7-结构体中-const使用场景"><a href="#8-7-结构体中-const使用场景" class="headerlink" title="8.7 结构体中 const使用场景"></a>8.7 结构体中 const使用场景</h3><p><strong>作用：</strong>用const来防止误操作</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//学生结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//成员列表</span></span><br><span class="line">string name;  <span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line"><span class="type">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//const使用场景</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent</span><span class="params">(<span class="type">const</span> student *stu)</span> <span class="comment">//加const防止函数体中的误操作</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//stu-&gt;age = 100; //操作失败，因为加了const修饰</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; stu-&gt;name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; stu-&gt;age &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu-&gt;score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">student stu = &#123; <span class="string">&quot;张三&quot;</span>,<span class="number">18</span>,<span class="number">100</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printStudent</span>(&amp;stu);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-8-结构体案例"><a href="#8-8-结构体案例" class="headerlink" title="8.8 结构体案例"></a>8.8 结构体案例</h3><h4 id="8-8-1-案例1"><a href="#8-8-1-案例1" class="headerlink" title="8.8.1 案例1"></a>8.8.1 案例1</h4><p><strong>案例描述：</strong></p><p>学校正在做毕设项目，每名老师带领5个学生，总共有3名老师，需求如下</p><p>设计学生和老师的结构体，其中在老师的结构体中，有老师姓名和一个存放5名学生的数组作为成员</p><p>学生的成员有姓名、考试分数，创建数组存放3名老师，通过函数给每个老师及所带的学生赋值</p><p>最终打印出老师数据以及老师所带的学生数据。</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Teacher</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line">Student sArray[<span class="number">5</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">allocateSpace</span><span class="params">(Teacher tArray[] , <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string tName = <span class="string">&quot;教师&quot;</span>;</span><br><span class="line">string sName = <span class="string">&quot;学生&quot;</span>;</span><br><span class="line">string nameSeed = <span class="string">&quot;ABCDE&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">tArray[i].name = tName + nameSeed[i];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">tArray[i].sArray[j].name = sName + nameSeed[j];</span><br><span class="line">tArray[i].sArray[j].score = <span class="built_in">rand</span>() % <span class="number">61</span> + <span class="number">40</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printTeachers</span><span class="params">(Teacher tArray[], <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; tArray[i].name &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t姓名：&quot;</span> &lt;&lt; tArray[i].sArray[j].name &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; tArray[i].sArray[j].score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">srand</span>((<span class="type">unsigned</span> <span class="type">int</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>)); <span class="comment">//随机数种子 头文件 #include &lt;ctime&gt;</span></span><br><span class="line"></span><br><span class="line">Teacher tArray[<span class="number">3</span>]; <span class="comment">//老师数组</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">sizeof</span>(tArray) / <span class="built_in">sizeof</span>(Teacher);</span><br><span class="line"></span><br><span class="line"><span class="built_in">allocateSpace</span>(tArray, len); <span class="comment">//创建数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printTeachers</span>(tArray, len); <span class="comment">//打印数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-8-2-案例2"><a href="#8-8-2-案例2" class="headerlink" title="8.8.2 案例2"></a>8.8.2 案例2</h4><p><strong>案例描述：</strong></p><p>设计一个英雄的结构体，包括成员姓名，年龄，性别;创建结构体数组，数组中存放5名英雄。</p><p>通过冒泡排序的算法，将数组中的英雄按照年龄进行升序排序，最终打印排序后的结果。</p><p>五名英雄信息如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;刘备&quot;</span>,<span class="number">23</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;关羽&quot;</span>,<span class="number">22</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;张飞&quot;</span>,<span class="number">20</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;赵云&quot;</span>,<span class="number">21</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;貂蝉&quot;</span>,<span class="number">19</span>,<span class="string">&quot;女&quot;</span>&#125;,</span><br></pre></td></tr></table></figure><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//英雄结构体</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">hero</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line">string sex;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//冒泡排序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bubbleSort</span><span class="params">(hero arr[] , <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (arr[j].age &gt; arr[j + <span class="number">1</span>].age)</span><br><span class="line">&#123;</span><br><span class="line">hero temp = arr[j];</span><br><span class="line">arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打印数组</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printHeros</span><span class="params">(hero arr[], <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名： &quot;</span> &lt;&lt; arr[i].name &lt;&lt; <span class="string">&quot; 性别： &quot;</span> &lt;&lt; arr[i].sex &lt;&lt; <span class="string">&quot; 年龄： &quot;</span> &lt;&lt; arr[i].age &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">hero</span> arr[<span class="number">5</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="string">&quot;刘备&quot;</span>,<span class="number">23</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;关羽&quot;</span>,<span class="number">22</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;张飞&quot;</span>,<span class="number">20</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;赵云&quot;</span>,<span class="number">21</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;貂蝉&quot;</span>,<span class="number">19</span>,<span class="string">&quot;女&quot;</span>&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">sizeof</span>(arr) / <span class="built_in">sizeof</span>(hero); <span class="comment">//获取数组元素个数</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">bubbleSort</span>(arr, len); <span class="comment">//排序</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printHeros</span>(arr, len); <span class="comment">//打印</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> C/C++ </tag>
            
            <tag> 基础语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>书摘.小王子.安托万·德·圣埃克苏佩里</title>
      <link href="/post/b6277351.html"/>
      <url>/post/b6277351.html</url>
      
        <content type="html"><![CDATA[<h1 id="献词"><a href="#献词" class="headerlink" title="献词"></a>献词</h1><ul><li>所有大人最初都是孩子（但这很少有人记得）。</li></ul><h1 id="Chapter-04"><a href="#Chapter-04" class="headerlink" title="Chapter 04"></a>Chapter 04</h1><ul><li>我告诉你这么多有关B612号小行星的事情，让你知道它的编号，是因为大人。大人热爱数字。如果你跟他们说你认识了新朋友，他们从来不会问你重要的事情。他们从来不会说：“他的声音听起来怎么样？他最喜欢什么游戏？他收集蝴蝶吗？”他们会问：“他多少岁？有多少个兄弟？他有多重？他父亲赚多少钱？”只有这样他们才会觉得他们了解了他。如果你对大人说：“我看到一座漂亮红砖房，窗台上摆着几盆天竺葵，屋顶有许多鸽子……”那他们想象不出这座房子是什么样的。你必须说：“我看到一座价值十万法郎的房子。”他们就会惊叫：“哇，多漂亮的房子啊！”</li></ul><h1 id="Chapter-05"><a href="#Chapter-05" class="headerlink" title="Chapter 05"></a>Chapter 05</h1><ul><li>“猴面包树在长大之前也是小树苗啊。”</li></ul><ul><li>每天早晨洗漱好以后，你必须仔细地清洁和打扮你的星球。你必须强迫自己经常去拔掉猴面包树，它小时候跟玫瑰的幼苗长得很像，你要是能把它认出来，马上就得拔掉。这是非常乏味的劳动，但也非常简单。</li></ul><ul><li>你也许会问：“这本书里其他图画，为什么不像这幅猴面包树的图画这么漂亮呢？”答案十分简单：我也想画得这么漂亮，但没有成功。在画猴面包树的时候，有种紧迫感在驱动着我。</li></ul><h1 id="Chapter-07"><a href="#Chapter-07" class="headerlink" title="Chapter 07"></a>Chapter 07</h1><ul><li>“那些刺根本没有用，它们只是为了表现花朵的恶意。”</li></ul><ul><li>“我知道有颗星球上住着某位红脸先生。他从来没闻到过花朵的芬芳。他从来没有见过星星。他不爱任何人。除了做加法，他什么事也不做。他成天就像你这样自言自语：‘我是个正经的人！我是个正经的人！’这让他骄傲得膨胀了。但他不是人——他是蘑菇！”</li></ul><ul><li>如果有人爱上一朵花，天上的星星有亿万颗，而这朵花只长在其中一颗上，这足以让他在仰望夜空时感到很快乐。他会告诉自己：‘在星空的某处有我的花。</li></ul><h1 id="Chapter-09"><a href="#Chapter-09" class="headerlink" title="Chapter 09"></a>Chapter 09</h1><ul><li>“是的，我是爱你的，”花儿说，“你却什么都不知道，这是我的错。没关系。但你和我一样笨。祝你幸福……把玻璃罩拿走吧，我再也不想要它了。”“可是会有风的啊……”“我的感冒没那么严重……夜里凉爽的空气对我有好处。我可是花耶。”“可是会有昆虫和野兽的……”“我愿意忍受两三条毛毛虫的，因为我想认识蝴蝶。听说蝴蝶很漂亮。否则谁来探望我呢？你就要去远方啦。至于大动物，我可不怕，我有爪子的。”她天真地露出了那四根刺。接着她又说：“别磨蹭了，这让我很难受的。既然你决定要离开，那就走吧。”</li></ul><h1 id="Chapter-10"><a href="#Chapter-10" class="headerlink" title="Chapter 10"></a>Chapter 10</h1><ul><li>“对啊。你不能命令别人去做他做不到的事情，”国王说，“权威首先是建立在合理的基础之上的。如果你命令你的人民去跳海，他们会起来造反。我有权力要求大家服从，那是因为我的命令都是合理的。”</li></ul><ul><li>审判自己要比审判别人难得多。如果你能正确地审判自己，那你就是真正的聪明人。</li></ul><h1 id="Chapter-12"><a href="#Chapter-12" class="headerlink" title="Chapter 12"></a>Chapter 12</h1><ul><li>“你为什么喝酒呢？”小王子问。“为了忘记，”爱喝酒的人回答。“忘记什么呀？”小王子问，他已经开始替这人感到难过。“忘记我的羞愧，”爱喝酒的人低着头说。“羞愧什么呢？”小王子问，他想帮帮这个人。“羞愧喝酒啊！”爱喝酒的人说完这句话就再也不肯开口了。</li></ul><h1 id="Chapter-13"><a href="#Chapter-13" class="headerlink" title="Chapter 13"></a>Chapter 13</h1><ul><li>“我再跟你说吧，我拥有一朵花，我每天给她浇水。我拥有三座火山，我每周为它们清扫。因为我连死火山也清扫了。谁知道它什么时候会喷发呢！我对我拥有的火山和花朵来说是有用的。但你对星星来说完全没有用……”</li></ul><h1 id="Chapter-18"><a href="#Chapter-18" class="headerlink" title="Chapter 18"></a>Chapter 18</h1><ul><li>“人？几年前我倒见过六七个。但你不知道哪里能找到他们。是风把他们吹来的。他们没有根，这让他们很苦恼。”</li></ul><h1 id="Chapter-20"><a href="#Chapter-20" class="headerlink" title="Chapter 20"></a>Chapter 20</h1><ul><li>然后他又想：“我原来以为我很富裕，拥有一朵独特的花，但她其实只是一朵玫瑰。这朵花，再加上三座只有我的膝盖那么高的火山，而且其中一座很可能永远不会再喷发，这些并不足以让我成为非常伟大的王子……”他趴在草地上哭了起来。</li></ul><h1 id="Chapter-21"><a href="#Chapter-21" class="headerlink" title="Chapter 21"></a>Chapter 21</h1><ul><li>“你每天最好在相同的时间来，”狐狸说，“比如说你定在下午四点来，那么到了三点我就会开始很高兴。时间越是接近，我就越高兴。等到四点，我会很焦躁，坐立不安；我已经发现了幸福的代价。但如果你每天在不同的时间来，我就不知道该在什么时候开始期待你的到来……我们需要仪式。”</li></ul><ul><li>“你们根本不像我的玫瑰，你们现在什么也不是，”他说，“没有人驯化你们，你们也没有驯化任何人。你们就像先前那只狐狸。他原本只是普通的狐狸，和其他成千上万只狐狸没有什么不同。但我和他交了朋友，现在他是全世界独一无二的。”</li></ul><ul><li>“你们很美丽，但也很空虚，”他又说，“不会有人为你们去死。当然，寻常的路人会认为我的玫瑰花和你们差不多。但她比你们全部加起来还重要，因为我给她浇过水。因为我给她盖过玻璃罩。因为我为她挡过风。因为我为她消灭过毛毛虫（但留了两三条活口，好让它们变成蝴蝶）。因为我倾听过她的抱怨和吹嘘，甚至有时候也倾听她的沉默。因为她是我的玫瑰。”</li></ul><ul><li>看东西只有用心才能看得清楚。重要的东西用眼睛是看不见的。</li></ul><h1 id="Chapter-24"><a href="#Chapter-24" class="headerlink" title="Chapter 24"></a>Chapter 24</h1><ul><li>“是的，”我对小王子说，“无论是房子、星星还是沙漠，它们都是因为某种看不见的东西而美丽！”</li></ul><h1 id="Chapter-25"><a href="#Chapter-25" class="headerlink" title="Chapter 25"></a>Chapter 25</h1><ul><li>“那些人，”小王子说，“他们坐在特快列车里，却不知道他们要追寻什么。所以他们很烦躁，不停地绕圈子……”</li></ul><h1 id="Chapter-26"><a href="#Chapter-26" class="headerlink" title="Chapter 26"></a>Chapter 26</h1><ul><li>“就像那朵花，如果你爱上一朵生长在某颗星球上的花，当你抬头望着夜空时，你会感到很甜蜜。仿佛所有的星星都开满了鲜花。”</li></ul><ul><li>“当你抬头看着夜空时，因为我住在某颗星星上面，因为我会在某颗星星上面笑，所以对你来说，就好象所有的星星都在笑。到时你将拥有会笑的星星！”</li></ul><ul><li>“当你的悲伤平息之后（悲伤总是会平息的），你将会因为认识了我而感到高兴。你将永远是我的朋友。你将会想陪我一起笑。有时候，你会因为这个缘故而打开窗户……你的朋友会吃惊地发现你正对着星空发笑。然后你会说：‘是啊，我看到星星就想笑！’他们会以为你疯了。这样我就让你上了个恶当……”</li></ul>]]></content>
      
      
      <categories>
          
          <category> 书摘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 书摘 </tag>
            
            <tag> 小王子 </tag>
            
            <tag> 安托万·德·圣埃克苏佩里 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【butterfly教程】更改文章页的文章相关信息布局</title>
      <link href="/post/84dc2e1a.html"/>
      <url>/post/84dc2e1a.html</url>
      
        <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="CSDN链接" href="https://blog.csdn.net/2201_75319686/article/details/140700493?spm=1001.2014.3001.5501"><div class="left"><img src="https://pic.imgdb.cn/item/66af5bd7d9c307b7e99587c2.jpg"/></div><div class="right"><p class="text">CSDN链接</p><p class="url">https://blog.csdn.net/2201_75319686/article/details/140700493?spm=1001.2014.3001.5501</p></div></a></div><p>文件路径：blogRoot\themes\butterfly\source\css\_layout\head.styl</p><p><strong>以下示例为将文章标题及其相关信息修改为居中显示</strong></p><p>该代码块在第100行左右</p><figure class="highlight styl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#post-info</span></span><br><span class="line">  <span class="attribute">position</span>: absolute</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">30px</span>  //文章信息距离文章块的高度.改为<span class="number">100px</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">8%</span></span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line">+ <span class="attribute">text-align</span>: center</span><br></pre></td></tr></table></figure><p><strong>（标有‘+’的为新添代码）</strong></p><p>修改前：</p><p><img src="https://pic.imgdb.cn/item/66af5d86d9c307b7e9971bd3.jpg" alt="code"></p><p>修改后的效果：</p><p><img src="https://pic.imgdb.cn/item/66af5d86d9c307b7e9971bf4.jpg" alt="code"></p><p>其它更改请自行查看该文件。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 经验分享 </tag>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>嵌入式学习笔记（4）</title>
      <link href="/post/e90c1e20.html"/>
      <url>/post/e90c1e20.html</url>
      
        <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="课程视频" href="https://www.bilibili.com/video/BV1nV411T7U3"><div class="left"><img src="https://pic.imgdb.cn/item/66acbc94d9c307b7e953a2b9.jpg"/></div><div class="right"><p class="text">课程视频</p><p class="url">https://www.bilibili.com/video/BV1nV411T7U3</p></div></a></div><h1 id="操作系统术语"><a href="#操作系统术语" class="headerlink" title="操作系统术语"></a>操作系统术语</h1><p><img src="https://pic.imgdb.cn/item/66acbc94d9c307b7e953a289.png" alt="code"></p><p><img src="https://pic.imgdb.cn/item/66acbc94d9c307b7e953a2a1.png" alt="code"></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> 嵌入式 </tag>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>贫民之墙</title>
      <link href="/post/4d52f91b.html"/>
      <url>/post/4d52f91b.html</url>
      
        <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>　　星星总是在那儿，无论长夜，亦或是天明。　　　　　　　　　　　</p><h1 id="第一章-不堪回首"><a href="#第一章-不堪回首" class="headerlink" title="第一章 不堪回首"></a>第一章 不堪回首</h1><p>　　“有钱喝酒不还钱？！”<br>　　楼下传来了恼怒的吼声。<br>　　“你好好待在那儿，别动。”方禾小声对坐在床边的女孩说。<br>　　“嗯。”女孩乖巧地点点头。<br>　　方禾蹑手蹑脚地走到门边，轻轻拉开一道缝隙。<br>　　客厅没点油灯，有些昏暗，隐约可见地板上散落着大小各异的酒瓶。混混随手拾起一个酒瓶，掂了掂，突然猛地砸在面前的男人的脑袋上。<br>　　“老子让你喝！”混混用力踹了几脚，“让你喝个够！”<br>　　男人抱着脑袋，蜷缩在地上。<br>　　“头儿，别生气别生气，”混混身后的同伙急忙拦住他，“把他弄死我们就不好交差了。”<br>　　混混点点头，没再继续踹下去。<br>　　见混混终于收手，男人喘着粗气，慢慢爬了起来。他的额头已被染红，血液顺着脸庞向下滑落。红色，点点的，在老旧的衣裳上缀出朵朵殷红的花。<br>　　男人看上去三十多岁，头发乱糟糟的，胡子拉碴，眼中没有一丝神采。身上的衬衫遍布污渍，应该是穿了许久。<br>　　男人呆滞的目光越过混混，望向混混身后。<br>　　混混顺着男人的目光转头看去，却见墙上挂着一张遗照。照片里是一个女人，比混混见过的所有女人——包括壁垒里的那些大人物——都要漂亮。<br>　　混混摇摇头，心中暗自惋惜。<br>　　“走！”混混与同伙抓住男人的肩膀，推搡着，离开了客厅。<br>　　方禾关上房门，瘫坐在地板上。<br>　　“哥哥，爸爸怎么样了？”女孩声音有些发颤，眼中闪着泪花。<br>　　方禾撇过头，“哼”了一声。<br>　　“那个混蛋不会回来了。”<br>　　“我……我怕……”女孩轻声抽泣着。<br>　　方禾忽然慌乱起来，他连忙站起身，来到妹妹身边，将她拥入怀中，安慰道：“小诗，别怕，还有我在呢。”<br>　　……<br>　　一阵刺耳的刹车声，路人的惊呼、男孩的哭喊与他愤怒的嘶吼构成了那天的主旋律。<br>　　……<br>　　“他杀了人！是人！就只是赔钱和给我们这张破玩意吗？！”他大声吼着，用力地将一张卡片拍在桌子上。<br>　　年轻的治安队员同情地看着他。<br>　　“人家可是壁垒里的大人物，能赔偿你就不错了。”<br>　　“可他杀了人啊……”他失魂落魄地重复着，“他杀了人啊……”<br>　　……<br>　　“你能不能不要成天只知道喝酒！”男孩大声喊道。<br>　　他只是瞥了男孩一眼，又呆呆地盯着墙上的遗照，不停地往嘴里灌酒。<br>　　……<br>　　他只是个彻头彻尾的混蛋而已……<br>　　泪水湿润了方禾的眼角。<br>　　窗外，夜色如墨，没有一丝光亮。<br>　　方禾起得很早，他要赶在妹妹起床前把一片狼藉的客厅收拾好。方禾重新摆放了家具，清理了原本地板上到处都是酒瓶与玻璃渣，那些玩意儿装了两个麻袋。<br>　　看着焕然一新的客厅，方禾嘴角微微扬起。<br>　　就让过去彻底成为过去吧。他想。<br>　　耀眼的晨光透过窗户洒进客厅，阳光缓缓蔓延，直至爬上了方禾的脸庞，一切都闪着金黄色的光芒。<br>　　这个时间也该醒了。<br>　　方禾小心翼翼地通过“吱呀”作响的楼梯，来到二楼的卧室。他轻轻推开门，发现妹妹已经醒了。<br>　　方小诗坐在床边，打着哈欠。<br>　　方禾笑了笑，说：“早上好。”<br>　　“早上好，哥哥。”方小诗含糊不清地说着。<br>　　方禾来到床边，微微弯腰，背对着妹妹。<br>　　“上来吧。”<br>　　“嗯。”方小诗趴在方禾背上，两手环在他的胸前。<br>　　方禾托着妹妹，直起腰，喊道：“走喽。”<br>　　“啊！哥哥你个笨蛋！别跑啊！会摔的！”<br>　　方禾背着妹妹很快就到了楼下，他帮着妹妹坐上轮椅后，便去做起了今天两人的早餐。<br>　　“今天的早餐来啦。”方禾端着一大碗热气腾腾的白粥，放在了餐桌上，“当然，还有这个。”正说着，他变戏法般地拿出了两个煮鸡蛋。<br>　　“喏，你的。”方禾把煮鸡蛋放在了妹妹面前，然后拉开椅子，坐了下来。<br>　　“哥哥，爸爸他真的不会回来了吗？”方小诗低声问。<br>　　方禾脸上的笑意褪去，他沉默下来。<br>　　良久，他开口说：“我们要学会自己独立生活……先吃早餐吧。”<br>　　“嗯。”<br>　　早餐在漫长的沉默中结束了。<br>　　吃完早餐，清点储藏柜的方禾很快便发现了件相当麻烦的事——家里的食品储藏快没了。尤其是饮用水，这些都是不可或缺的物资。<br>　　最终，方禾决定离开家门做一次采购。他在父亲的卧室里找到了一笔钱。虽然不多，但能供他们两人生活一段时间。只是这注定不会长久。<br>　　必须得找份工作了。方禾想。<br>　　“小诗，好好呆在家，我很快就回来，”方禾不厌其烦地重复着，“不要给除了我之外的人开门，不管多熟都不行。”<br>　　“知道啦，哥哥，别总是把我当成小孩子。”方小诗无奈地看着他，“我都快十五岁了，能照顾好自己。”<br>　　方禾点点头，说：“最好是这样……那我走了。”<br>　　“再见，哥哥。”方小诗关上了门。<br>　　方禾直到亲眼看着方小诗把门锁上，这才敢放心离开。这并能不怪方禾小题大做。毕竟，在壁垒外的贫民区里，什么都有可能发生。<br>　　一阵寒风吹过，方禾打了个冷颤，紧了紧身上有些单薄的衣服。<br>　　天气转凉了，要不要给小诗添件厚点的衣服。方禾思索着。<br>　　街上行人不少，大多步履匆忙。每个人都在尽可能地为寒冷的冬季以及即将到来的春节储备物资——不管再怎么样艰苦，春节也总是要过的。<br>　　随着人流，方禾向附近的杂货铺进发。<br>　　贫民区的建筑大多低矮破旧，而远处的墙是附近最高的建筑物。<br>　　墙是黑色的，绵延不绝，一眼望不到尽头。墙所代表的是这个地区的权力中心——335号壁垒，目前由星源财团掌控着。<br>　　方禾曾听人说过，星源财团是灾变前某个跨国集团分裂出来的，而那个跨国集团已经离开这个世界了。这当然只是一条说不清真假的传言，但它至今仍在贫民区被人当作茶余饭后的谈资——这是贫民们唯一的娱乐活动。<br>　　“我听说方文遒昨晚被放高利贷的那伙人带走了。”路旁，一个大婶神秘兮兮地对她的朋友说，“现在指不定被丢在哪个污染区被吃得渣都不剩……”<br>　　方禾停下了脚步。<br>　　说话的那个大婶面色有些蜡黄，颧骨突出，高高瘦瘦的身材让她看起来像根竹竿。身上穿着的灰色布衣打着几个颜色差别不是很大的补丁，已经洗得泛白，没有一丝褶皱。<br>　　方禾愣了下，这不是自家的邻居顾大婶吗？<br>　　这时，顾大婶也注意到了方禾。<br>　　哟，正主来了，得好好问问，给待会儿和姐妹们聊天找点话题。<br>　　于是她连忙拉住方禾，说：“哎哟喂，这不是方家小子吗？你家昨晚那么吵，没出啥事吧？你爸呢？今天怎么没看见他？”脸上的担忧恰到好处，不似作伪。<br>　　看见顾大婶眼中冒出的精光，方禾心中便生出了了几分厌恶。正当方禾要说些什么时，身后突然有人拍了下他的肩膀。<br>　　“小子，你是东街四十七号的吧。”<br>　　方禾回过头，却见眼前是一个看上去和自己差不多大的男孩。男孩裹着头巾，肤色黝黑。手里剥着花生，时不时往嘴里丢几粒。<br>　　方禾迟疑了下，道：“是。”<br>　　“那就好办了，”男孩点点头，“你爸被白鹰帮的人带走了，那这个月的保护费就由你来交了……本来一会儿才轮到你家的，但既然现在碰到了，就先交了吧。三十纳塔，掏钱吧。”<br>　　“保护费？”方禾皱起了眉头，声音不由自主提高了个八度，“凭什么？！”<br>　　“凭什么？”男孩笑了笑，“就凭这个。”他抬起左手，拉开一截袖子，露出了手臂上的狼头刺青。<br>　　“动作快点，别逼我动手……还有你们两个，也一起交了。”男孩指了指顾大婶和她的朋友。<br>　　“好好好，这就给这就给……”两人急忙掏出钱，仔细点了几遍，这才递给了男孩。<br>　　男孩满意地点点头，也没清点就把钱塞进了口袋。他又看向方禾，不耐烦地说：“快点，臭小子，别耽误本大爷的时间……还是你要我亲自拿？！”<br>　　“我不会给的！”方禾对他怒目而视。<br>　　“嘿，小兔崽子，”男孩轻蔑地看着他，“本来我不想动手的。”话音刚落，男孩吹了声口哨，而后猛地挥拳砸在方禾腹部。<br>　　方禾一声闷哼，倒在了地上。他双手捂住肚子，蜷缩着身子，口中无意识地呻吟着。行人的目光被吸引过来，但他们只是匆匆扫了一眼，又快步离开。<br>　　没人愿意多管闲事。<br>　　男孩蹲在方禾面前，笑嘻嘻地看着他，道：“啧啧，真可怜啊。”说完，男孩从方禾身上掏出了所有的钱，他数出三十纳塔，“放心，小子，我是有原则的。”剩下的钱又被他塞进了方禾的口袋里。<br>　　男孩拍了拍方禾的肩膀，脸上带着微笑，说：“记住了，下次听话点。”接着，他站了起来，哼着不成调的小曲，走了。<br>　　“诶呦喂，方家小子，没事吧。”顾大婶走上前，扶起方禾。<br>　　方禾摇了摇头，拍了拍身上的尘土。<br>　　“我跟你说，那些帮派的人咱这种平头百姓可惹不起，你家里还有个小妹，可不要犯傻……”<br>　　方禾没有说话，他默默挣开顾大婶的手，慢慢走了。<br>　　“真可怜啊。”顾大婶的朋友说。<br>　　“是啊，真可怜。”<br>　　“昨晚你怎么不叫治安队？”<br>　　“治安队？别开玩笑了。”顾大婶嗤笑一声，“又不关我的事……再说了，要是被他们报复怎么办？”<br>　　还未走远的方禾脚步顿了一下，而后大步走了。<br>　　兜兜转转，方禾来到了杂货铺。<br>　　“一共四十五纳塔。”<br>　　说话的是一个胖胖的中年妇女，齐眉短发下是一张面色红润的脸——这在贫民区倒是相当少见。此时，这位杂货铺老板娘正在在柜台后，递给面前的老太太要买的东西。<br>　　老太太头发花白，佝偻着腰，时不时剧烈地咳嗽，而后慢吞吞地掏出钱来。<br>　　“张老太太，你都病成这样了，不买点药？你之前照顾的那个什么……什么赵兴呢？不会是跑了吧？那种人怎么看都不像什么好人，吃你的住你的，等你病了就不见踪影……要我说，张老太太，你就是上了年纪，老眼昏花，分不清谁是谁了。”老板娘接过钱，拉开抽屉，放了进去。<br>　　方禾站在老人身后，盯着装钱的抽屉，愣着一动不动。<br>　　老太太也不恼，只是笑着说：“阿兴说他去找工作了。”<br>　　老板娘满脸狐疑地盯着她，但也没说什么。<br>　　老太太缓缓转身，而后看见了身后的方禾。<br>　　“方禾来买东西呀？”老太太脸上似乎永远带着微笑。<br>　　“啊……”方禾回过神来，连忙点点头，“嗯。”<br>　　“要照顾好你妹妹。”老太太叹了口气，又咳了几下，慢悠悠地离开了杂货铺。<br>　　“要什么？”老板娘问。<br>　　方禾走近柜台，道：“两小袋米、外套……和我差不多大的，要厚一点的……”他比划着。<br>　　老板娘从货架上取下东西，放在了柜台上。<br>　　“额……一桶三级饮用水……”<br>　　一桶有些浑浊的水被“砰”地一声砸在柜台上，柜台发出了不堪重负的呻吟声。<br>　　“还有一桶两级饮用水。”<br>　　一桶要清澈许多的水出现在方禾眼前，而装水的容器也比刚才那桶小上一号。<br>　　老板娘扫了一眼柜台上的东西，迅速开口道：“一百零九纳塔。”<br>　　“这……这么多吗？”方禾吃了一惊。<br>　　“饮用水又涨价了……要买就快点，买不起就滚蛋！”老板娘不耐烦地看着他。“是穷鬼就不要浪费老娘的时间！”<br>　　虽然很贵，但仍不得不买。无奈之下，方禾掏出钱，仔细地数出了一百零九纳塔，递给了老板娘。<br>　　老板娘捏住钱，往回抽，没抽出来。老板娘神色古怪地看了他一眼，用力拽过钱，收进了抽屉。<br>　　方禾叹了口气，拿上东西，怅然若失地离开了。<br>　　老板娘盯着他的背影，嘀咕了一句：“穷鬼……”　　　　　</p><h1 id="第二章-工作"><a href="#第二章-工作" class="headerlink" title="第二章 工作"></a>第二章 工作</h1><p>　　“哥哥，你怎么又买这么贵的东西。”虽然嘴上是埋怨的语气，但方小诗脸上的雀跃却是怎么也掩盖不住。<br>　　她拿着新买的大衣，在镜子前不断比画着。虽然大衣颜色单调，布料粗糙，但方小诗还是一副喜欢得不得了的样子。<br>　　“最近越来越冷了，要穿厚一点，着凉了可不好。”方禾一脸严肃地说。<br>　　“知道了，哥哥，你就放心吧。”<br>　　入夜，方禾与妹妹吃过晚饭。收拾碗筷的工作理所当然地落在了方禾身上。<br>　　洗碗的水是在附近的水站买的，一纳塔一个容器的水。装水的容器不管是一个水杯还是一个木桶都是按一纳塔算的。很显然，这个容器自然是越大越好。所以每天下午，方禾都会用小推车装着一个硕大的木桶去买水。<br>　　当然，这里的大多数居民都是这样的。<br>　　水站的水没有经过特殊处理，所以并不能饮用，但用来作为生活用水还是可以的。<br>　　方禾用水很小心，获取没有被污染过的水并不容易。<br>　　“别看太晚，今天早点睡，明天还要去私塾。”方禾擦干了手上的水渍，走到桌前，整个人瘫在了椅子上。<br>　　“知道啦，哥哥。”方小诗的视线费力地从书上挪开，嘟囔道。<br>　　方禾微微叹了口气。还有一个多月妹妹就要从私塾毕业了。一般来说，贫民区的孩子们从私塾毕业后，基本都去赚钱养家了。没有人会想着让他们升入高中，继续深造。<br>　　没有别的原因，只有壁垒里才有高中。<br>　　方禾不想让妹妹辍学。在这样一个时代，只有知识才能改变命运，他想着。他已经打听过了，壁垒里的学校每年的学费是两千纳塔，一个学期还有五百纳塔的资料费，他盘算着。必须得找一份有足够薪酬的工作，可这样的工作只有在壁垒里才能找到吧？他有些苦恼地想着。<br>　　方禾皱起了眉头。<br>　　只好明天去碰碰运气了。他想。<br>　　第二天，方禾送妹妹到私塾后，他没有回家，而是向着壁垒的方向走去。<br>　　壁垒大门是有守卫的，他们会让我进去吗？应该会的吧，毕竟我有这个。方禾攥紧了手中的物件。到时候只要给他们看就好了。他们不会为难我的。<br>　　一路胡思乱想着，方禾来到了壁垒的大门前。<br>　　看到金属大门前那几个穿着黑色军装的士兵，方禾不禁紧张起来。<br>　　“滚开！小子，别靠近这儿！”一个士兵注意到了走来的方禾，他举着枪，对着方禾脚下的地面。<br>　　方禾吓了一跳，不敢再走过去。他全然忘了先前的准备，只是傻傻地看着枪口。<br>　　“还愣着干嘛！快走！”士兵拉动了枪栓。<br>　　方禾吓得抖了个激灵，连忙举起了手中的卡片，说：“别……别开枪，我……我有通行证。”<br>　　方禾手中的通行证正是那年的赔偿之一，他从未想过自己会在某一天用上它。<br>　　一个士兵满脸厌恶地走了过来，看了眼通行证，确认无误后，摆摆手，嫌弃道：“赶紧进去……真是晦气……”说完，又往地上啐了一口。<br>　　在几个士兵的注视下，方禾穿过了大门，进入了壁垒。<br>　　过去，方禾只知道壁垒和贫民区是两种截然不同的地方，可他却从来不知道二者的差别会有这么大。<br>　　砖石建筑的楼房整齐划一地排列在道路两旁，街上人来人往，偶尔能看到几辆汽车从硬化路面上疾驰而过。方禾环顾四周，心中一片喜悦与紧张，这就是壁垒吗？<br>　　对了，要抓紧时间，我是来找工作的。<br>　　可方禾并不知道在壁垒里哪里是招工的地方。这时，他看见了一个路过的中年男人，便诚恳地问：“这位先生，请问……”<br>　　话音未落，中年男人便直皱眉头，嚷嚷道：“那帮看门的士兵怎么办事的，这种东西都放进来……你赶紧给我滚远点！别烦我！”说完，便大步流星地走了。<br>　　方禾不甘心，一连问了好几个人，但每个都是如同避瘟神般对方禾避之不及。<br>　　“为什么会这样？”方禾茫然地看着远处对着他指指点点的路人，他并不觉得自己除了穿着和他们有什么不同。<br>　　可为什么会这样？<br>　　优关中学人事处的办公室里，张涛正心烦意乱地翻着报纸。当然，他一个字也没看进去。一周前发生的那件事让学校保洁员的职位出现了空缺，而现在已近年关，人手自然是不好找的。<br>　　可领导偏偏让他在这两天尽快解决，要不然就让他自己来干。<br>　　这怎么可能？！<br>　　都怪那帮无法无天的小兔崽子！张涛愤愤地想着。<br>　　“铃铃铃”……<br>　　办公桌上的电话响了起来。<br>　　张涛拿起电话，没好气地开口道：“干嘛？”<br>　　“张主任……那个……”是学校门口的保安，“有人说看到了学校的招聘广告，要来应聘……”<br>　　“让他过来，快一点！”张涛语气急切地说。<br>　　“但……但是……他……”保安欲言又止。<br>　　张涛没心情陪保安玩猜谜，他直接挂掉了电话，长舒一口气。<br>　　这次应该能解决了吧？<br>　　两分钟后，方禾站在了人事处的办公室里。天，他从未见过这么气派的房间。他进来时小心翼翼，生怕自己弄脏了干净得发光的地板。此时，方禾的心跳得飞快，不知道对方会不会录用自己。只是，对面的中年男人脸色有些不太好看，这让他有些局促不安。<br>　　“壁垒外来的？”张涛不甘心地问。<br>　　“是……”方禾低着头，感觉脸有些发烫。<br>　　张涛的脸色变得越发阴沉。<br>　　“姓名？”<br>　　“方禾。”<br>　　“年龄？”<br>　　“十七……十八……”<br>　　“你能干什么？”张涛上下打量着看上去弱不禁风的方禾。<br>　　“您是招保洁员的吧？”方禾拍了拍胸脯，“保洁员能干的我都能干。”<br>　　“那可不一定……”张涛冷笑着，显然知道些什么，但他并没有要解释的意思。<br>　　“家里几口人？你为什么来壁垒里找工作？”张涛接着问。<br>　　“就……就我和我妹妹……我想壁垒里的工作收入会更高一些。”<br>　　“啊……那还真是可怜啊。”张涛面无表情地说。<br>　　到底要不要用他？真是该死！为什么他不是壁垒人？<br>　　“主任，茶。”<br>　　张涛的纠结被年轻的助手打断，他接过茶杯，轻轻抿了一口。张涛的食指不停地敲击着桌面，目光直视眼前的方禾。<br>　　“你想要这份工作吗？”<br>　　“想。”方禾激动地点点头，眼中闪着希翼的光。<br>　　“给我个理由。”<br>　　“理……理由？我……我和妹妹的未来需要它……”方禾声音越来越小，他不知道这个是不是对方想要的理由。<br>　　“算了……恭喜你，明天就来工作吧。”张涛拿出张卡片，签上名字，递给了方禾，“这是你的工作证明，士兵会放你进来的……月工资……嗯……三千纳塔，怎么样？”<br>　　方禾愣了一下，而后欣喜若狂地说：“真是太感谢您了。”<br>　　“你先回去吧。”张涛摆摆手，示意方禾离开。<br>　　注视着离开的方禾，助手奇怪地问：“主任，壁垒外那些猪猡又脏又懒，手脚还不干净，为什么要用他？”<br>　　“呵……”张涛摇摇头，“壁垒人又好得到哪去？既然两者没什么不同，用谁又不是一样呢。”<br>　　傍晚，从私塾回家的路上。<br>　　“哥哥，今天那帮人又来私塾闹事了。”方小诗一脸不满地挥舞着手臂，语气激动地说，“张老师都被他们打伤了。真是一帮坏蛋！无赖！”<br>　　正推着轮椅的方禾脸色一变，仔细地看了看妹妹，紧张地问：“他们进私塾了？！你怎么不早说啊……你有没有受伤？！”<br>　　方禾知道妹妹所说的那帮人都是些什么货色。那是一个名叫“逐夜之眼”的反智组织，行为与言论一向都非常激进。<br>　　看着方禾的样子，方小诗忍不住“噗嗤”一声笑了出来，她侧过脸，开口道：“那当然……”<br>　　方禾瞪大了眼睛。<br>　　“……是没有啦。”方小诗笑嘻嘻地补充道。<br>　　听到妹妹这么说，方禾松了一口气，接着抱怨道：“真是的，老是这么让我提心吊胆的……我很担心你的，以后别这样了。”<br>　　方小诗吐了吐舌头，小声说：“知道啦，哥哥。”<br>　　“不过，话说回来，治安队也不管管那帮混蛋，以后他们只会更加得寸进尺的。现在加入他们组织的人越来越多，我们私塾里有些学生也相信了他们的言论，整天嚷嚷着什么‘是现代知识导致的灾变，只有消灭现代知识的产物，退回田园时代，人类才能延续下去’……”方小诗撇撇嘴，“哼，都是些不学无术的笨蛋，被人耍的团团转。”<br>　　“那你可得离他们远点……”方禾想了想，笑着说，“搞不好他们也会把你变成一个笨蛋。”<br>　　“哼！我才不会变成笨蛋呢……不过我肯定会远离那些家伙的，他们很令人讨厌的……哥哥，走快点啦，太阳落山了看书就不方便了，还得把今天学的东西教给你呢。”<br>　　“好好好，走快点走快点。”方禾哈哈大笑，加快了步伐。<br>　　风，呼啸着，带走了叶对树的最后一丝眷恋……<br>　　“你们老师今天和我说了，你在私塾的成绩很好。”晚饭的餐桌上，方禾看着埋头吃饭的妹妹，如是说道，“他希望你能继续读下去……刚好，我也是这么想的。”<br>　　“可我们没钱。”方小诗小声嘟囔道。<br>　　“钱会有的……我就想知道你是怎么想的。”方禾说着放下了手中的碗筷。<br>　　方小诗吃了一惊，盯着他说：“哥哥，我们是穷了些，但你可别做傻事啊……哎呦，干嘛打我？”她捂住被方禾敲了一记的脑袋，颇为委屈地问。<br>　　“瞎说什么呢……”方禾没好气地瞪了她一眼，“我今天去了一趟壁垒，在那找了一份工作。如果平时省着点用钱的话，供你上高中是没有问题的。”<br>　　“真的吗？”妹妹惊喜地问。<br>　　“当然是真的，”方禾点点头，又补充道，“我怎么可能会骗你……说说你的想法吧。”<br>　　“我的想法吗？”方小诗的声音小了下去，“我当然是想读高中的，只是……”她偷偷瞄了眼方禾，接着说，“……只是担心会给你增加负担。”<br>　　“没什么可担心的……”方禾摆摆手，“既然你也同意了，那就这么决定了。你在私塾还有一个月的时间，现在你只需要负责读好书，赚钱的事你就不用管了，交给我就行。”<br>　　“谢谢哥哥……不过，壁垒里是什么样子的？”方小诗好奇地问。<br>　　“这个嘛，你去了就知道了。”方禾故意卖了个关子。<br>　　“不嘛，我现在就想知道。”方小诗心里猫挠似的，自然不想就这样被方禾打发，她晃着方禾的手，“告诉我嘛。”<br>　　“好吧好吧，”方禾对这个妹妹颇为头疼，“真是拿你没办法。”<br>　　优关中学的档案室里，张涛最后扫了一眼方禾的资料，便准备放入档案柜中。<br>　　这时，一只手抓住了资料。<br>　　“不介意我看看吧，张主任。”<br>　　张涛看了眼来人，哼了一声，道：“喜欢看就拿去看，不用问我。”<br>　　那人翻了翻资料，笑着说：“哟，壁垒外的人？张主任什么时候会大发善心了？我可一直以为张主任是坚定不移的壁垒派的……啧，真是少见啊。”<br>　　“我没有发什么善心……”张涛涨红了脸，忍不住反驳道，“只是没办法在两天之内找到替代的人罢了……都是公事公办，聘用壁垒外的人学校也是有先例的！”<br>　　“哈哈，是是是，你只是公事公办。”来人笑了笑，把资料放入柜子中，“可你一直都是把他们称之为‘人’的，不是吗？”<br>　　张涛沉默下来，说：“你不也一样吗？”<br>　　“你知道我是什么人……不检举我？”<br>　　“我什么也不知道……”他侧过脸，低声道，“还有，我不会加入你们的，你不用问了。”<br>　　“好吧。”虽然张涛的回答在意料之内，但来人还是感觉颇为遗憾，她摇摇头，“那下次再见，期待你之后的回答，张主任。”　　　</p><h1 id="第三章-希望"><a href="#第三章-希望" class="headerlink" title="第三章 希望"></a>第三章 希望</h1><p>　　“……陆氏无面虫是一种群居食肉性昆虫，成年虫体有成年人的拳头那么大。甲壳呈黑色，分布有紫色条纹，可飞行，通常生活在距污染区一至三公里处的湿地里。你们都注意了，这是一种非常危险的生物……”<br>　　讲台上，负责教授野外知识课的张老师正指着图片上的无面虫向学生们讲解。<br>　　张老师个子不高，脑袋顶上稀疏的头发好似快要灭绝的时针草般岌岌可危。他身上穿着的黑衣没有一丝褶皱，胸前还别着一枚私塾颁发的优秀职工勋章。金丝眼镜的镜腿上缠着胶带——显然是已经断了。与之相配的，是他脑门上的那圈绷带——那是昨天与闯入私塾的那伙人发生争执后留下的纪念。<br>　　在这门课上，大多数学生都表现得十分认真——至少表面上看是这个样子，毕竟未来运用到这门课的知识的概率还是相当大的——贫民区有谁会一辈子不去野外呢？这可比什么数学物理有用多了。<br>　　看着底下的这帮学生，张老师微不可查地叹了口气。一个月后这个教室里会有多少学生进入贫民区的工厂，一辈子没有出头之日？他不知道，也不想知道，这不是他所能改变的。事实上，在这些人当中，并不乏一些天资聪慧的学生，但这不会让他们的未来有任何改变。贫民只能是贫民，就算混得再好，在壁垒人眼中依然只是愚蠢不堪的“猪猡”。<br>　　这一切是谁造成的？<br>　　他当然明白这些都是谁的错，但他也只能和大多数人一样“不知道”——有时候，知道也是一种罪过。<br>　　张老师摇摇头，好似这样就能把这些想法甩出脑子。他开口，只是声音已有些沙哑：“把你们的生物图鉴拿出来。”<br>　　方小诗低下头，从抽屉中抽出了薄薄的生物图鉴，却不想一份叠得整整齐齐的纸条也被一起带了出来，而后掉在地上。方小诗愣了一下，满心疑惑。<br>　　这是谁放在我抽屉里的？<br>　　没多想，她把纸条捡了起来，又放回了抽屉里。<br>　　时间过得很快，私塾的王老头准时敲响了树底下的钟。<br>　　放学了。<br>　　“今天就讲到这儿，回去的路上都小心点。”说完，张老师便快步离开了教室。<br>　　学生们都兴冲冲地收拾东西，准备回家。方小诗则是从抽屉拿出了纸条，展开看了看。上面的字不算好看，但是写得很工整 ，能看出来是字的主人一笔一划地认真写的——<br>　　“方小诗同学，放学后能去一趟教室旁的那棵大树下吗？”<br>　　方小诗撇了撇嘴，嘟囔道：“有什么事就不能亲自来说吗？真是的。”<br>　　她想了想，决定还是得去一趟。不管怎么说，她也不能自己走了，让那个送纸条的家伙傻乎乎地等在那。最重要的是，哥哥还没来呢，他不会允许自己一个人回家的。<br>　　教室旁，三个躲在这儿的男孩互相拉扯着。<br>　　“上啊，江文，成败在此一举了。”<br>　　两个男孩使劲推着拼命抗拒的江文，想让他去树底下赴约。<br>　　“可……可是……那什么……我还没准备好，要不下次吧。”江文脸上带着慌乱。<br>　　“别可是了，真放人鸽子你就没有下次了！人可等那儿了……快点，不要磨磨唧唧的，像个娘们似的。”一个男孩说。<br>　　“就是！”另一个男孩赞同地点点头，“纸条我可是帮你送到了……还差点被发现了，我帮了你这么大的忙，结果你就这样？你这可就恁不厚道了。”<br>　　男孩指了指树底下的方小诗，冷笑着说：“我今儿个就把话撂着了，你是去也得去，不去也得去！要不然……呵呵，你自个看着办吧。”<br>　　“那……那我去了？”<br>　　“嗯嗯，快上快上，我们哥俩是你最坚实的后盾！”另一个男孩鼓励道。<br>　　虽然江文脸上是一副决然的表情，但他却走得很慢，一步三回头的，就仿佛他要去的是刑场一般。<br>　　男孩看到他这幅样子，顿时气得牙痒痒，龇牙咧嘴地嚷嚷道：“我就知道他这怂蛋肯定是烂泥扶不上墙！就让我来帮他一把吧！”话音刚落，便是见男孩一脚踹在江文屁股上，而后拽着另一个男孩一溜烟跑了。<br>　　而毫无防备的被踹了一脚的江文，则是下意识地惊呼一声，然后跌跌撞撞地来到了方小诗面前。江文看着面前脸上一副恍然大悟表情的方小诗，他顿时涨红了脸，尴尬得无以复加，恨不得立马找条地缝钻进去。<br>　　能让他钻进去的地缝自然是没有的，所以此时他也只能在心里臭骂那两个混蛋。<br>　　“原来……”方小诗歪着脑袋，回想着，“原来是你啊，江文同学，我认识你……”<br>　　她……她说认识我？！江文的心中瞬间被一种叫做喜悦的心情所填满。<br>　　正说着，方小诗忍不住用手掩着嘴轻声笑道：“……不过是在打群架的通报名单上。”<br>　　“这……这样吗？”江文挠了挠头发，尴尬地笑了笑。<br>　　“不过你是为了那个学弟才会和那帮学生打架的，对吧？”<br>　　“我……我只是看不惯他们那个猖狂的样子……”江文有些不好意思地说。<br>　　“那你还是很勇敢的嘛……”<br>　　“没有没有，我的两个死党也帮了我。”<br>　　“那么……江文同学，你找我是有什么事要说的吗？”<br>　　“啊……这个……那个……”江文脸上浮现出一丝慌乱，说话也语无伦次起来，“我是想说……我……”可他“我”了半天，还是什么也没说出来。只见他的脸越来越红，活像一只熟透了的螃蟹。<br>　　方小诗很聪明，自然猜到了他想说些什么。她想了想，觉得自己还是不要让他太过尴尬，于是抢先说道：“我们可以做朋友……重新认识一下，我叫方小诗。”说完，伸出了右手。<br>　　“啊……我……我叫江文……”江文伸出手虚握了一下，而后便如同触电般把手收了回来。<br>　　“很高兴和你做朋友，江文同学。”方小诗露出了笑颜。<br>　　好……好美……<br>　　一时间，江文痴了，灵魂仿佛出窍了一般，久久无法回神……<br>　　优关中学的走廊里，结束了一天工作的方禾正把工作服塞进自己的储物柜里，准备离开学校。<br>　　他转头看了眼窗外快要落山的太阳，喃喃道：“得快点，要不然妹妹该着急了。”<br>　　这时，几个学生嘻嘻哈哈地走了过来。领头的那个头上绑着条束发带，校服领口敞开着，瘦削的脸上带着几乎溢出来的高傲的神情。<br>　　方禾认识这个看起来就像个痞子似的家伙，他叫做秦杰川，学校里一个学生帮派的头头。方禾低下头，想尽量不引起他们的注意。<br>　　只是，他的希望注定是不能实现的。<br>　　“唉，我说，你们几个有没有闻到走廊里有一股怪味啊？”秦杰川抬手在鼻子前挥了挥，阴阳怪气地说，“不会是有只猪猡跑进学校了吧？”<br>　　“是啊是啊，熏死了！”几个学生一脸附和道。<br>　　“你们也闻到了？！我就说嘛，我还以为我闻错了。简直臭死了！”秦杰川做了个夸张的呕吐表情。<br>　　“秦哥，要我说啊，”一个学生谄媚地笑了笑，“单单只是普通的猪猡也发不出这种臭味……起码得是一只十八年的杂种猪猡才行！”<br>　　“哈哈……”秦杰川大笑，点点头，“你说的很有道理。”<br>　　众人纷纷跟着笑了起来。<br>　　“你，就是你。”秦杰川指了指方禾，“先别走，我问你，你有没有看到一只猪猡跑进来了。”<br>　　“没……没有……”方禾低声道。<br>　　“没有？不能啊，猪猡可是很大一只的，不可能看不见啊。”秦杰川故作疑惑的样子，“难不成是它藏起来了？”<br>　　“我不知道。”方禾握紧了拳头。<br>　　“应该就在这的啊。”秦杰川环顾四周，“你闻闻，这味道那么重……”<br>　　方禾握拳的指节微微泛白，指甲深陷肉缝而不自知，就好似感觉不到疼痛般。他语气僵硬地说：“我不知道……如果没什么事的话我就先走了。”<br>　　不能……不能动手。他努力克制着自己，交保护费那天的一切此时还历历在目。不同的是，当时顶多被打一顿，现在则是被打的同时还要失去现在这份宝贵的工作。<br>　　“哦……这样啊。那下一次看见猪猡的时候可得记得告诉我们，那些猪猡可是很危险的。哈哈哈……”秦杰川大笑着，离开了走廊。<br>　　他身后的学生们则亦步亦趋地跟了上去。<br>　　混蛋！该死的混蛋！方禾死死盯着他们大笑着离去的身影，心中愤愤地骂道。<br>　　白驹过隙，转眼，一个月已然过去，时间来到了二月份。<br>　　漫天飞舞的雪花纷纷扬扬，落满了目光所及的每一个角落。<br>　　“哥哥，歪了歪了。”门前，脸冻得通红的方小诗正对着贴对联的方禾指挥着。<br>　　“啊……那这样呢。”方禾微微调整了下。<br>　　“嗯……好了。”方小诗满意地点点头，抹去了脸上沾着的雪花，“仔细看看的话，我写的还是蛮不赖的嘛。”<br>　　“嗯嗯，说的没错。”方禾笑着答道，“好了，快点进屋吧，外面风太大了。”<br>　　“哦哦，好。”<br>　　进屋后，方小诗来到窗边，双手托着下巴，痴痴地看着窗外忙里忙外的大人和嬉戏打闹的孩童，喃喃道：“真好啊……”<br>　　“是啊，真好啊。”方禾凑了过来。<br>　　“呀……哥哥你个笨蛋，吓我一跳。”方小诗气鼓鼓地看着方禾，接着脸上又出现了一抹哀伤，“要是爸爸妈妈也在就好了。”<br>　　方禾眼中闪过一丝悲切，他勉强笑了笑，说：“在的……他们一直都在……”说着说着，他的语气不自觉地坚定起来。<br>　　“嗯……一直都在。”方小诗脸上露出了笑容，她看着窗外的雪花，说，“哥哥，你快看，好美的雪啊。”<br>　　方禾看向窗外，确实很美呢，只是……不知道会有多少人熬不过这个冬天。真是可笑，我连自己都管不好，竟然还会想到别人，他想着。<br>　　年夜饭是兄妹两人一起准备的，这顿饭异常丰盛，甚至还有平日难得一见的荤腥。<br>　　“年三十了，小诗有没有什么愿望，说不定我能帮你实现呢。”<br>　　“啊……愿望吗？”方小诗放下手中的碗筷，皱着眉头地想了想，“当然有哦。”说完，便双手十指交叉，闭着眼，默念着什么。<br>　　待她睁开眼时，看见的是一脸哭笑不得的方禾。<br>　　“你不告诉我，我怎么帮你实现啊。”<br>　　“才不要告诉你呢，我又不是和你许的，说出来就不灵了。”<br>　　“好吧好吧，随你便吧。”方禾无奈地摇摇头，“吃饱了吗？”<br>　　方小诗听了旋即拿起碗把最后几口饭扒进嘴里，鼓着嘴说：“吼了（好了）。”而后吞下饭，拿起水杯淑了漱口。<br>　　“那我们走吧。”说完，方禾便背起方小诗，往楼上走去。<br>　　“唉，哥哥慢点走。”方小诗惊呼道。<br>　　方禾背着妹妹，径直来到了楼上的木梯前。<br>　　“抓紧了。”<br>　　“嗯。”<br>　　方禾顺着木梯，慢慢向天花板爬去，而后拉开活板门的拉栓，爬上屋顶，两人瘫坐在屋顶上。<br>　　“呼……可累死我了，你又胖了。”<br>　　“才……才没有呢！”方小诗的脸变得通红。<br>　　“哈哈，我开个玩笑……”方禾笑了笑，然后指着夜空中漫天的繁星，“今晚的星星很多啊。”<br>　　方小诗也望向夜空，而后惊叹道：“哇，好漂亮啊。”<br>　　方禾把手伸向空中，说：“可惜，太远了，摘不到。”<br>　　“我们私塾的老师说人类在灾变前是能飞的……坐着巨大的铁鸟……”方小诗张开手，比画着自己想象的“铁鸟”的大小。<br>　　“是吗？”方禾来了兴趣，“那以前的人类一定能摘下星星吧。”<br>　　“也许吧。”方小诗也不是很肯定，“老师没说。”<br>　　“如果是真的话，那可真是个幸福的时代啊。”<br>　　砰！<br>　　“哥哥，看，烟花！”方小诗兴奋地指着壁垒上空那些转瞬即逝的烟火。<br>　　砰砰砰！<br>　　“无论长夜如何漫漫无尽，你我还有繁星陪伴……”方小诗看着烟花，嘴里轻轻哼唱着古老的歌谣。<br>　　方禾呆呆地看着妹妹，看着她眼眸中倒映着的五颜六色的烟花。<br>　　夜空被烟火照亮的同时，心也不再黑暗。<br>　　……<br>　　男孩从小巷中跑出来，拉住了路边的父母。<br>　　“爸爸妈妈，你们快过来！”<br>　　“唉，别急啊，小禾。”女人笑着说。<br>　　“瞧他这劲儿，随我。”男人也笑了。<br>　　……<br>　　“妈妈，这个宝宝怎么了。”男孩好奇地问，“我在这个小巷里看到的时候就这样了。”<br>　　男人和女人沉默着。<br>　　良久，女人看着怀里的婴儿，说：“我们收养她吧。”<br>　　“可她的腿……”男人有些犹豫，他看了看一脸坚定的女人，悠悠地叹了口气，“……好吧。”<br>　　男人蹲下来，对男孩说：“小禾，以后你要多个妹妹了。”<br>　　“妹妹？好哎……我有妹妹了！”<br>　　男人与女人看着喜悦的男孩，相视而笑。<br>　　……<br>　　“老天老天，我希望能永远和哥哥在一起，拜托您啦，一定要实现啊。”　　　　　　</p><p>　　　</p><h1 id="第四章-坠入现实"><a href="#第四章-坠入现实" class="headerlink" title="第四章 坠入现实"></a>第四章 坠入现实</h1><p>　　不知不觉间，盘踞在335号壁垒的冬天悄无声息地离去，而嫩绿的枝桠正无声地诉说着春天的来临——欢乐的时光总是显得很短暂。<br>　　“这名总算是报好了，”回家的路上，方禾松了口气，一脸轻松，“这段日子没白忙活。”<br>　　“嗯嗯，哥哥最厉害了。”轮椅上的少女笑得很开心。<br>　　“说起来也要感谢那个张主任，他帮了我们这么多，是我们的恩人，这点你要记住了。”方禾严肃地说。<br>　　方小诗点点头，认真道：“这个我知道……咳咳咳……”<br>　　“你生病了？要不要去买药？”方禾紧张起来。<br>　　“没事，不是什么大问题，就不用买药了，自己会好的。”<br>　　“真的不用吗？”方禾还是有些不放心。<br>　　“真的不用了，哥哥，你就放一百个心吧。”方小诗笑了笑。<br>　　“那……那好吧……你的学生证要放好，别弄丢了……嗯，虽然原来那张通行证现在用不上了，但也别乱丢，知道没？”<br>　　“嗯，知道了……哥哥，我有些不明白……”少女皱着眉头，努力组织着措辞，“……如果壁垒里的那些人那么不欢迎我们，为什么还会存在通行证这种东西？他们自己明明是不需要通行证的。”<br>　　方禾耸耸肩，道：“谁知道呢？”<br>　　第二天，天空还灰蒙蒙时，方禾与妹妹便来到了壁垒的大门前。<br>　　门前守卫的几个士兵是生面孔，他们聚成一堆，小声谈论着什么。一个士兵发现了方禾两人，便朝他们走了过去。<br>　　“你们两个要进壁垒？”出乎意料的，士兵的态度没有想象中的差。<br>　　“对，”方禾递过两人的证件，“这是我们的证件。”<br>　　士兵接了过去，匆匆扫了一眼。<br>　　“她是学生？”士兵脸上露出笑容，“真是了不起啊。”士兵把证件还给方禾，又对方小诗说：“要好好学啊，别辜负了你……额……。”<br>　　“我是他哥哥。”方禾适时插嘴道。<br>　　“嗯……对……你哥哥。”士兵微笑着点点头。<br>　　少女脸色通红，羞涩地点了点头。<br>　　“对了，昨天晚上，治安部部长被人枪杀了，北城区那还发生了小规模的枪战，现在到处都在戒严……总之乱的很，你们自己小心点。行了，快进去吧，就不耽误你们了。”<br>　　“谢……谢谢……”方禾诚恳地说。<br>　　方禾两人告别士兵后，发现壁垒内确实如他所说的那般，正在戒严。全副武装的士兵随处可见，不断有军用吉普从路面飞驰而过。远处不时会传来几声哭喊、怒吼以及零星的枪声。<br>　　虽然路上不算太平，但两人最后还是有惊无险地到了学校。学校附近没有巡查的士兵，可以说目前这里是整个335号壁垒最为平静的地方了。<br>　　两人随着学生们进了学校。<br>　　“记住自己的班级在哪了吧……快去吧，别迟到了。”<br>　　“那……再见，哥哥。”<br>　　“如果有人欺负你要记得告诉我。”<br>　　“嗯。”<br>　　方禾的目光好似黏在方小诗身上般，直到她摇着轮椅进了教室，方禾才收回视线，转身离开，准备进行今天的工作。<br>　　方小诗所在的高一（16）班是优关中学高一级排名最靠后的班级，这是在意料之内的，毕竟以她的身份也只能进这样的地方。<br>　　大部分学生都已经来到了教室，他们三两成群，兴奋地谈论着什么。<br>　　讲台上是一个又矮又胖的女人——应该是这个班级的班主任——微微蜷曲的头发披在肩上，身上穿着件粉红色的开襟毛衣。方小诗进入教室的瞬间，仿佛按下了暂停键般，所有的声音忽地都消失不见。教室变得一片死寂，“落针可闻”。所有的学生——当然，也包括了那名老师——都转过头，齐刷刷地看向方小诗。她心跳得飞快，总能感觉到教室里那股若有若无的敌意。<br>　　“你就是方小诗？”那名老师做作的声音甜得让人发腻。<br>　　得益于班主任转身对着她，方小诗这才有机会一睹“芳容”——她的眼睛很大，眼皮下垂、眼珠外凸。脸上打着厚厚的粉底，显得异常苍白，与嘴唇上深色的口红形成了十分鲜明的对比。方小诗不动声色地挪开目光，不敢直视。<br>　　“是。”方小诗答道。<br>　　底下的学生们又继续交谈起来，不过声音小了许多。虽然他们都是一副在认真交谈的样子，但方小诗还是能发现他们在时不时地偷瞄她。<br>　　这让她感觉很不舒服。<br>　　老师上下打量着方小诗，目光极具侵略性。接着，她转过身，对着底下的学生说道：“都安静一下……”<br>　　学生们的目光纷纷移到讲台上。<br>　　“这位是你们的新同学，方小诗，她是壁垒外的……咳咳。”她没有把话说完，看向方小诗，露出了一个浮夸的笑容，“我们的方小诗同学可真是厉害呢……”她把“厉害”二字咬得极重。“能进我们学校，方小诗同学肯定很努力，颇费了一番力气吧。”那老师掩嘴轻笑，她的笑声在方小诗耳中是那样的刺耳。<br>　　说到这，任谁都能听出这话别有含义。<br>　　学生们开始交头接耳，不少女学生说着说着就笑得花枝乱颤，而后肆无忌惮地盯着方小诗。方小诗能从她们的目光中读出着许多复杂的感情——得意、嫉妒、嘲笑……<br>　　见方小诗没有回答，她又笑着说：“像小诗同学这么努力的姑娘，一定会受到很多财团的大人们的欣赏吧。”她忍不住“咯咯咯”地笑着，活像一只要下蛋的母鸡。<br>　　方小诗依旧沉默着，那老师顿时觉得无趣，冷哼一声，摆摆手，不耐烦地说：“行了，你坐最后一排吧……就那里。”她指了指角落里的那个座位。<br>　　看他们都是这般模样，想必在这工作的哥哥一定不会太好过吧，她想着。不知怎的，她隐隐感觉心里有些酸楚。以后的日子都会是这样吗？我能坚持下来吗？她问自己。<br>　　能的，一定能！为了哥哥，为了我自己！她心里暗自下定了决心。<br>　　方小诗看向自己的座位，默默地点了点头。<br>　　如同往常一样，经过几个小时的努力，方禾提前完成了今天早上的工作。他简单收拾了一下，便往教学楼走去。方禾之所以干活如此着急，是因为他知道，如果自己速度够快的话，还能赶上一节课。<br>　　他抬头望着天空，看着蓝天上云卷云舒，轻轻叹了口气。<br>　　天空纵然广阔，却依然没有一片是属于自己的。<br>　　已经能隐隐听到教室传来的读书声，他放慢脚步，又往前走了一段距离，便停了下来。<br>　　就这里吧。<br>　　读书声已然很清楚了，他坐在花坛边，望向教室里的黑板——勉强能看到。方禾没有再继续往前的打算。他现在还是会时不时想起当时自己被赶走的样子。<br>　　迷茫、无助和屈辱，就像当初被那个混混抢走了钱那样。<br>　　他看着教室的外墙，神情有些恍惚。<br>　　“哈哈，笑死我了。猪猡也能听懂数学？！”——学生们捂着肚子哈哈大笑。<br>　　“快滚啊！猪猡！”<br>　　“带着病的猪猡就不要靠近别人！”<br>　　方禾不自觉地握紧了拳头。<br>　　忽地，一只手搭在了方禾的肩膀上。<br>　　方禾吓了一跳，猛地回过神来。<br>　　“想看就近些看，坐在这里干什么？”声音有些熟悉。<br>　　方禾抬起头，却见那人竟是那天面试他的张主任。<br>　　“我……”方禾想说些什么，但想了想，叹了口气，还是没有说出口。<br>　　张涛也乐见这小子闭嘴，他本就没打算听人诉苦，毕竟他就算用膝盖想都能明白是怎么回事。<br>　　“你只管去听就是了……”张涛不耐烦地看着他，“我会和他们打招呼的……别那么看着我，我可不是可怜你啊，只是……只是……额……你天天蹲这里有损学校包容的形象……”<br>　　“谢谢。”方禾深深地鞠了一躬。<br>　　张涛哼了一声，道：“没必要，公事公办而已。”说完，便快步走进了那间教室，而后又匆匆离开了。<br>　　方禾看着张涛的背影，只觉得今天的阳光格外的温暖。<br>　　“慢点吃，别着急。”<br>　　中午，坐在树下的长椅上的方禾看着捧着饭盒的方小诗，脸上不自觉地露出笑容。<br>　　“哥哥不吃吗？”<br>　　“吃过了……觉得怎么样？”<br>　　“很好吃。”<br>　　“额……我是说这个学校怎么样？”<br>　　方小诗拂了拂耳边的发梢，笑着说：“很好。”<br>　　“那就好，那就好。”方禾点点头，“之前我还有点担心你会不习惯……没人欺负你吧？”<br>　　“没有。”方小诗把饭盒递给方禾，“我吃饱了，先回教室了。再见，哥哥。”<br>　　“我送你回去吧？”<br>　　“不用了，我自己可以的……咳咳咳。”<br>　　“嗯……好吧，那……再见。”<br>　　长大了啊。方禾欣慰地想着。<br>　　回到工具间，收拾好饭盒，方禾便拿上了他的工具，准备工作。<br>　　只是他没想到的是，自己刚走出工具间就遇到了秦杰川那伙人。<br>　　“哟，这不那谁吗？”秦杰川饶有兴致地打量着方禾，“最近有没有看见学校里有猪猡啊。”<br>　　“没……没有……”方禾低着头。<br>　　“没有啊，没有就没有吧……”秦杰川笑了笑，“别板着张脸啊，搞得好像我们几个欺负你似的。来，笑一个。”<br>　　“就是就是，笑一个。”秦杰川的几个跟班附和道。<br>　　方禾抬起头，露出一个僵硬的笑容。<br>　　“不对，这样太难看了。”秦杰川走上前，理了理方禾的衣领，“笑得自然点……哎，这样就对了嘛。”他拍了拍方禾的脸。<br>　　“我可以走了吗？”<br>　　“走？那么着急干什么？留下来陪我们玩会儿。”秦杰川戏谑地看着他。<br>　　“可我还要工作。”<br>　　“工作？”秦杰川似笑非笑，他转身对着跟班们说，“他说他要赶着去工作！去工作！哈哈哈……”他忽然大笑起来，紧接着，脸色变得阴沉，“我让你去工作了吗？”<br>　　“我……”<br>　　方禾正想说些什么，可秦杰川的拳头却猝不及防地迎面而来。下一秒，方禾只感觉鼻梁骨传来一阵剧烈的疼痛，眼中全是闪烁着的金星。<br>　　好……好痛……<br>　　秦杰川揪住方禾的衣领，将他摁在墙上，恶狠狠地说：“你很好！在这个学校，以前还从来没有人敢拒绝我，你是第二个！你们是不是都瞧不起我！”他大声吼道。<br>　　跟班们都被秦杰川突如其来的吼声吓了一跳，他们不由自主地咽了口唾沫，齐齐后退几步，惊惧地看着自己的头儿。<br>　　头儿到底是怎么了？怎么那天之后就变成这样喜怒无常的了？<br>　　“我……我没有……”方禾试图扯开秦杰川的手。<br>　　秦杰川眼睛布满血丝，吼道：“她瞧不起我！就连你这只猪猡也瞧不起我！你们都该死！都该死！”<br>　　说完，秦杰川便猛地挥拳砸在方禾腹部，松开手，呻吟不已的方禾便顺着墙倒在地上。<br>　　秦杰川喘着粗气，笑出声来，道：“你现在倒是去工作啊。啊？给老子站起来啊！”<br>　　他看着蜷缩着的方禾，又抬起脚不停地踹过去。秦杰川踹了几脚，累得气喘吁吁。他一屁股坐在地上，擦了擦汗水。<br>　　几个跟班走上前，想扶他起来。秦杰川摇摇头，道：“别管我，你们几个先去揍他一顿。”<br>　　“可……可是他……他这个样子……再打下去，就怕他……”跟班们有些犹豫。<br>　　“你们几个不用担心，出了事我担着，就算打死了前后也不过几万纳塔的事……”秦杰川从口袋里掏出烟，点着，深深吸了一口。<br>　　“那……那我们打了……”<br>　　“动作都快点，别让其他人撞见了。你们下手要狠一些，犹豫的，就是跟我秦杰川过不去！”<br>　　跟班们打了个冷颤。<br>　　不……不能死在这儿……<br>　　方禾拼命挣扎着，试图站起来。<br>　　“兄弟，对不起了。”<br>　　那几个跟班围了上来。<br>　　“秦杰川，你在干什么！快住手！”</p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小说 </tag>
            
            <tag> 儿时旧作 </tag>
            
            <tag> 科幻 </tag>
            
            <tag> 未完结 </tag>
            
            <tag> 废土 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客更新日志2024.7.30</title>
      <link href="/post/97f4acc6.html"/>
      <url>/post/97f4acc6.html</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>添加了资料卡鼠标停留彩带效果</p>            </div></h1><h1 id="-1"><a href="#-1" class="headerlink" title=""></a><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>使用hexo-neat与fontTools对网站大部分资源进行了压缩</p>            </div></h1><h1 id="-2"><a href="#-2" class="headerlink" title=""></a><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>更换、添加了新的markdown标签插件</p>            </div></h1>]]></content>
      
      
      <categories>
          
          <category> 更新日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 更新日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>嵌入式学习笔记（3）</title>
      <link href="/post/74db2699.html"/>
      <url>/post/74db2699.html</url>
      
        <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="课程视频" href="https://www.bilibili.com/video/BV1nV411T7U3"><div class="left"><img src="https://pic.imgdb.cn/item/66a8c65ed9c307b7e919c2ee.jpg"/></div><div class="right"><p class="text">课程视频</p><p class="url">https://www.bilibili.com/video/BV1nV411T7U3</p></div></a></div><ul><li><h1 id="封装八位寄存器"><a href="#封装八位寄存器" class="headerlink" title="封装八位寄存器"></a>封装八位寄存器</h1></li></ul><p><img src="https://pic.imgdb.cn/item/66a8c29bd9c307b7e9170592.png" alt="code"></p><ul><li><h1 id="运算单元ALU：加法器"><a href="#运算单元ALU：加法器" class="headerlink" title="运算单元ALU：加法器"></a>运算单元ALU：加法器</h1></li></ul><p><img src="https://pic.imgdb.cn/item/66a8c3a0d9c307b7e917c2ec.png" alt="code"></p><ul><li><h1 id="CPU原理图"><a href="#CPU原理图" class="headerlink" title="CPU原理图"></a>CPU原理图</h1></li></ul><p><img src="https://pic.imgdb.cn/item/66a8c3a0d9c307b7e917c2d0.png" alt="code"></p><ul><li><h1 id="CPU执行流程"><a href="#CPU执行流程" class="headerlink" title="CPU执行流程"></a>CPU执行流程</h1></li></ul><p><img src="https://pic.imgdb.cn/item/66a8c29bd9c307b7e9170573.png" alt="code"></p><ul><li><h1 id="CPU内部结构"><a href="#CPU内部结构" class="headerlink" title="CPU内部结构"></a>CPU内部结构</h1></li></ul><p><img src="https://pic.imgdb.cn/item/66a8c29bd9c307b7e9170515.png" alt="code"></p><ul><li><h1 id="完整CPU-内存（手动执行）"><a href="#完整CPU-内存（手动执行）" class="headerlink" title="完整CPU+内存（手动执行）"></a>完整CPU+内存（手动执行）</h1></li></ul><p><img src="https://pic.imgdb.cn/item/66a8c29bd9c307b7e9170563.png" alt="code"></p><ul><li><h1 id="完整CPU-内存-控制单元（自动执行）"><a href="#完整CPU-内存-控制单元（自动执行）" class="headerlink" title="完整CPU+内存+控制单元（自动执行）"></a>完整CPU+内存+控制单元（自动执行）</h1></li></ul><p><strong>关键</strong>：指令集</p><p><img src="https://pic.imgdb.cn/item/66a8c29bd9c307b7e917052d.png" alt="code"></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> 嵌入式 </tag>
            
            <tag> CPU </tag>
            
            <tag> ALU </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>嵌入式学习笔记（2）</title>
      <link href="/post/cc6741fc.html"/>
      <url>/post/cc6741fc.html</url>
      
        <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="课程视频" href="https://www.bilibili.com/video/BV1nV411T7U3"><div class="left"><img src="https://pic.imgdb.cn/item/66a4da35d9c307b7e9aa201d.jpg"/></div><div class="right"><p class="text">课程视频</p><p class="url">https://www.bilibili.com/video/BV1nV411T7U3</p></div></a></div><ul><li><h1 id="锁存器"><a href="#锁存器" class="headerlink" title="锁存器"></a>锁存器</h1></li></ul><p><img src="https://pic.imgdb.cn/item/66a4d85dd9c307b7e9a8e079.png" alt="code"></p><ul><li><h1 id="八位寄存器"><a href="#八位寄存器" class="headerlink" title="八位寄存器"></a>八位寄存器</h1></li></ul><p><img src="https://pic.imgdb.cn/item/66a4d85dd9c307b7e9a8e05f.png" alt="code"></p><ul><li><h1 id="添加了输出使能的寄存器"><a href="#添加了输出使能的寄存器" class="headerlink" title="添加了输出使能的寄存器"></a>添加了输出使能的寄存器</h1></li></ul><p><img src="https://pic.imgdb.cn/item/66a4d857d9c307b7e9a8da8d.png" alt="code"></p><ul><li><h1 id="内存单元"><a href="#内存单元" class="headerlink" title="内存单元"></a>内存单元</h1></li></ul><p><img src="https://pic.imgdb.cn/item/66a4d857d9c307b7e9a8da6e.png" alt="code"></p><ul><li><h1 id="十六位内存"><a href="#十六位内存" class="headerlink" title="十六位内存"></a>十六位内存</h1></li></ul><p><img src="https://pic.imgdb.cn/item/66a4d857d9c307b7e9a8dab9.png" alt="code"></p><p><strong>行列线可以通过查找表合并</strong></p><p><img src="https://pic.imgdb.cn/item/66a4d857d9c307b7e9a8da62.png" alt="code"></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> 嵌入式 </tag>
            
            <tag> 锁存器 </tag>
            
            <tag> 寄存器 </tag>
            
            <tag> 内存 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>嵌入式学习笔记（1）</title>
      <link href="/post/ded2ee12.html"/>
      <url>/post/ded2ee12.html</url>
      
        <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="课程视频" href="https://www.bilibili.com/video/BV1nV411T7U3"><div class="left"><img src="https://pic.imgdb.cn/item/66a31a77d9c307b7e91bf76c.jpg"/></div><div class="right"><p class="text">课程视频</p><p class="url">https://www.bilibili.com/video/BV1nV411T7U3</p></div></a></div><ul><li><h1 id="异或门"><a href="#异或门" class="headerlink" title="异或门"></a>异或门</h1></li></ul><p><strong>继电器实现</strong></p><p><img src="https://pic.imgdb.cn/item/66a315f6d9c307b7e9181057.png" alt="code"></p><p><strong>门电路实现</strong></p><p><img src="https://pic.imgdb.cn/item/66a315f6d9c307b7e918107f.png" alt="code"></p><ul><li><h1 id="半加器"><a href="#半加器" class="headerlink" title="半加器"></a>半加器</h1></li></ul><p><img src="https://pic.imgdb.cn/item/66a315f6d9c307b7e918104f.png" alt=""></p><ul><li><h1 id="全加器"><a href="#全加器" class="headerlink" title="全加器"></a>全加器</h1></li></ul><p><img src="https://pic.imgdb.cn/item/66a315f6d9c307b7e918106c.png" alt="code"></p><ul><li><h1 id="八位二进制加法器"><a href="#八位二进制加法器" class="headerlink" title="八位二进制加法器"></a>八位二进制加法器</h1></li></ul><p><img src="https://pic.imgdb.cn/item/66a315f6d9c307b7e918102c.png" alt="code"></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> 嵌入式 </tag>
            
            <tag> 数字电路 </tag>
            
            <tag> 加法器 </tag>
            
            <tag> 门电路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客更新日志2024.7.25</title>
      <link href="/post/d45d9a.html"/>
      <url>/post/d45d9a.html</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>将文章信息改为居中显示</p>            </div></h1><h1 id="-1"><a href="#-1" class="headerlink" title=""></a><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>为文章页添加了波浪效果）</p>            </div></h1>]]></content>
      
      
      <categories>
          
          <category> 更新日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 更新日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>书摘.这里的黎明静悄悄.鲍里斯.瓦西里耶夫</title>
      <link href="/post/89bf7e1f.html"/>
      <url>/post/89bf7e1f.html</url>
      
        <content type="html"><![CDATA[<h1 id="第八章"><a href="#第八章" class="headerlink" title="第八章"></a>第八章</h1><ul><li>　　他回头一看，那幽绿的眸子穿过火焰般的红发正注视着他。它具有不可抗拒的威力，犹如152毫米的榴弹炮。</li></ul><h1 id="第一十章"><a href="#第一十章" class="headerlink" title="第一十章"></a>第一十章</h1><ul><li>　　莉扎久久地看着这美好的蓝天。她的嗓子嘶哑了，嘴里吐着泥，但仍向往着，向往着蓝天，向往着，心里充满信心。太阳慢慢升到树梢，把阳光洒在沼泽地上。莉扎最后一次看见阳光，那温暖，亮得耀眼，有如明天的允诺一样的阳光。直到最后一刻，她仍然相信，明天也将是属于她的……</li></ul><h1 id="第一十一章"><a href="#第一十一章" class="headerlink" title="第一十一章"></a>第一十一章</h1><ul><li>　　她可以说是平静地等待着，因为她坚信，什么事也不会发生。她所受的全部教育都使她只能期待美满的结局：对她这一代人来说，怀疑成功几乎等于背叛。当然，她有时也感到恐惧和信心不足，但是确信一切都将完满结束的内心意念总比现实环境更加强而有力。</li></ul><ul><li>　　他听见过这种喊声，随着这种喊声，一切都消逝了，一切都化为乌有，因而它不断在耳际鸣响。它在你身体内部鸣响，而这最后的鸣响你将永志不忘。它仿佛已凝成冰块，使人浑身发冷，痛苦钻心，正因为如此，军运指挥员才这么急急忙忙地朝前赶去。 </li></ul><h1 id="第一十二章"><a href="#第一十二章" class="headerlink" title="第一十二章"></a>第一十二章</h1><ul><li>　　德国人自由自在地走着，一点都不提防，后面那一个还在黏着嘴唇吃饼干。准尉测定了他们步子的距离，算了算，估计好了他们什么时候从他跟前走过，便拔出了芬兰刀。当前面那个走到离他一大步的时候，华斯科夫学野鸭子呷呷叫了两声，短促而急剧，跟真的一样。德国人同时抬起头，就在这当口，科麦莉科娃在他们身后用枪托狠狠地朝岩石上砸了一下，他们急忙向出声的地方转过身去，华斯科夫跳了出去。他对这一跳计算得不差毫厘：时间选得好，距离算得准。他跳在一个德国人的背上，两个膝盖夹住了他的前肘。那个德国鬼子没来得及出口气，也没来得及颤抖一下，准尉的左手猛地按住了他的额头，把他的脑袋向后一扭，磨得飞快的刀刃便抹在那抻长的脖子上了。一切都跟预想的一样：就跟宰羊一样，还来不及叫一声，血就如泉水似的涌出来，只剩喘气的分儿了。在他倒下去的时候，军运指挥员已经从他身上跳下来，扑向第二个鬼子。总共不过一刹那，仅只一刹那：后面那个德国人还是背朝这边站着，正要回头。但不知是华斯科夫再次跳跃时力气不足，还是他慢了一步，只是这一刀没有刺中德国人。冲锋枪打掉了，但同时他自己的芬兰刀也落在地上。刀上都是血，滑得跟肥皂一样。糟了，战斗变成了斗殴，变成用拳头打架。德国鬼子个儿虽不算高，但却顽强有劲，华斯科夫无论如何也不能把他摔倒，压在身下。他们在石头和桦树之间的青苔上撕扭着，但是德国人暂时没有喊叫，不知是他觉得有把握干掉准尉呢，还仅仅是为了节省力气。费多特·叶弗格拉菲奇又一次失策了：他想巧妙地腾出一只手来按住德国人，但德国人挣脱了，还从刀鞘里抽出自己的刀。华斯科夫那么怕这把刀，花了那么多的精力来对付它，终于被德国人骑在身下，用两条粗腿把他钳住，而没有光泽的刀尖越来越逼近准尉的咽喉。眼下准尉还使劲撑住敌人的手，眼下还在抵抗，但德国鬼子从上面用全身的重量往下压，显然，这种状况继续不了多久。这一点军运指挥员和德国人都清楚，否则德国人也不会平白无故地眯着眼睛，龇着牙齿了。敌人突然瘫软了，瘫软得像一只口袋，费多特·叶弗格拉菲奇起先还莫名其妙，他没有听见头一下的打击声。可是第二下听见了：砰的一声，像打在朽烂的树干上发出的声音。暖乎乎的血溅了他一脸，而德国人开始往后仰倒，用变歪的嘴往里吸气。准尉一把推开他，夺过刀子，直接刺进他的心脏。</li></ul><ul><li>　　加莉娅哭了起来，哭得又伤心又委屈，好像孩子的玩具被人弄坏了一样……</li></ul><h1 id="第一十三章"><a href="#第一十三章" class="headerlink" title="第一十三章"></a>第一十三章</h1><ul><li>　　她每次连发都很短，瞄准了目标迎头射击，为准尉争得了一秒钟，这直到临终前都应请恩人喝酒的一秒钟。</li></ul><h1 id="第一十六章"><a href="#第一十六章" class="headerlink" title="第一十六章"></a>第一十六章</h1><ul><li>　　他感觉到仿佛整个俄罗斯正站在他背后</li></ul><ul><li>　　准尉取出一件衬衫、一条衬裤和两卷备用绷带，又跑回丽达这儿来。丽达想说什么，他没去听。他用刀子割开浸透鲜血的军服上衣、裙子和内衣，把牙齿咬得紧紧的。一块弹片斜穿过去，炸破了肚子，青灰色的内脏在黑血下面微微颤动。他把衬衫盖在伤口上面，替她包扎。</li></ul><h1 id="第一十七章"><a href="#第一十七章" class="headerlink" title="第一十七章"></a>第一十七章</h1><ul><li>　　此刻腹部几乎不疼了，只觉得越来越灼热和干渴。但不能喝水，丽达只把布条放在水洼里浸一浸，然后贴在嘴唇上。</li></ul><ul><li>　　“别这么说。”她轻轻说，“祖国首先指的并不是运河，完全不是。我们保卫的是祖国。首先是祖国，其次才是运河。”</li></ul><ul><li>　　丽达对着太阳穴开了一枪，几乎没有流血。枪眼周围落了一层蓝色的火药末……</li></ul>]]></content>
      
      
      <categories>
          
          <category> 书摘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 书摘 </tag>
            
            <tag> 这里的黎明静悄悄 </tag>
            
            <tag> 鲍里斯.瓦西里耶夫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>女巫与猫</title>
      <link href="/post/7d4db862.html"/>
      <url>/post/7d4db862.html</url>
      
        <content type="html"><![CDATA[<p>　　凯瑟琳坐在自家门口的台阶上，捧着碗热气腾腾的蔬菜浓汤——她只吃得起这个了——小口抿着。对于少女来说，今天可实在算不上什么好日子。</p><p>　　自从她早上在学院门口当众表演了场“平地摔”后，之后的一切便完全脱离了她的掌控——魔咒课上，本应变成百灵鸟的杯子成了颗触发了的臭弹，在猎场里被突然发狂的巨耳兽撞飞……当然，这些并不是最糟糕的，虽然这让凯瑟琳成了学院里的风云人物。可在自己大概率被学院劝退面前，只是出糗什么的显得不值一提——</p><p>　　“凯瑟琳同学，我知道你很聪明，可你的成绩实在是太差了，在你们班里次次都是倒数第一……”</p><p>　　“我有一次是倒数第二。”凯瑟琳抗议道。</p><p>　　老教授气的吹胡子瞪眼：“那还不是里昂那小子因为生病少考了五科才给了你机会，你还觉得挺光荣的……总之，如果你的成绩再没有长进的话，就离开学院吧。”</p><p>　　如果仅仅只是这件事的话，凯瑟琳倒也不至于如此苦闷。可世事难料，她身后那栋有着两百年历史的罗理德式小屋即将离她而去——租金又涨了。</p><p>　　这意味着她很快就会无家可归，最后被迫被那个女人接走，自己的一切抵抗都成了个笑话。凯瑟琳打了个冷颤，自然女神在上，这绝对不可能！又或者到另一个城市流浪，然后被送进贫民习艺所——好像也没有好到哪去。</p><p>　　“喵”。</p><p>　　一只黑猫不知从哪窜了出来，渡着步，来到了凯瑟琳面前。</p><p>　　“哇，好可爱的猫。”凯瑟琳脸上的沮丧被惊喜所取代，蔬菜浓汤放在一边，双手伸向了那只猫。</p><p>　　黑猫又“喵”地叫了一声，灵活地躲开了少女的手。凯瑟琳也没有在意，她对着黑猫喃喃道：“你是流浪猫吗？也许不久后我也要像你一样四处流浪了呢，唉。”她叹了口气，“你饿了吗？要喝碗浓汤吗？真是抱歉，我只有这个了。”凯瑟琳歉意地笑了笑，把碗推到黑猫前。</p><p>　　黑猫盯着浓汤看了一会儿，嗅了嗅，然后舔了一口……</p><p>　　只见黑猫一声哀嚎：“见鬼！你竟然往里面放了土豆！”</p><p>　　“……”凯瑟琳愣了好久，才尖叫着往后退，而后便两眼一黑，不省人事。</p><p>　　睁开眼，是熟悉的天花板，身下是柔软的大床。</p><p>　　是自己的卧室。</p><p>　　醒来的凯瑟琳松了口气。</p><p>　　果然是最近太累了，所以产生幻觉了吗？我竟然觉得自己看见了一只会说话的猫。</p><p>　　凯瑟琳自嘲地笑了笑，坐了起来，然后看见了左手拿着报纸、右手端着自己的咖啡杯、翘着二郎腿坐在躺椅上的黑猫。</p><p>　　凯瑟琳：“……”</p><p>　　少女闭上眼，又躺了回去。</p><p>　　我一定是还没睡醒！自然女神在上，这一定是场可怕的噩梦！快让我醒过来吧！</p><p>　　“真是见鬼！怎么又躺回去了？”黑猫把报纸与咖啡杯放在一旁的桌子上，“你简直比跳芭蕾的卡莫斯巨兽还要能睡。”</p><p>　　少女猛地从床上坐了起来，尖叫着把手能触摸到的东西统统扔向黑猫，直到身边空无一物时，好像要哭出来的她才语无伦次地大声说：“你、你、你、你是魔兽还是魔兽？！我警告你！别打我的主意！我、我、我可是红衣大法师外加赛里斯武术一代宗师！惹怒我后果很严重的！你别想把我当做食物！更别想把我做成你伪装成人类的皮囊！天啊，自然女神在上，把人做成皮囊这样的事真是太恶心了，亏它想得出来……”</p><p>　　黑猫：“……”</p><p>　　这个人类似乎有些不太正常？</p><p>　　说着说着，凯瑟琳似乎也意识到了什么，忽地全身都在泛红。</p><p>　　啊！我真是蠢透了！</p><p>　　黑猫冷哼一声，没理会捂着脸的凯瑟琳，昂着头，傲然道：“我可不是那些低等卑贱的魔兽。愚蠢的人类，你听好了。吾乃黑夜之主、边界探索者、弑神者、猫界至尊，你可以叫我M先生。”</p><p>　　凯瑟琳打开手掌的指缝，露出紧绷着的脸，偷偷瞄着黑猫。此时，黑猫人立在躺椅上，两只前爪背在身后，一本正经地介绍着自己。最后，少女实在是没忍住，“噗嗤”一声笑了出来，然后便一发不可收拾，在床上打着滚，肆无忌惮地哈哈大笑。</p><p>　　“你是我见过的最、最能吹的猫……哈哈哈，比我还、还……哈哈……还能……不对，我不是吹的……哎哟……你竟然敢打我？！不对，你还会魔法？！”看着脑袋顶上飘着的《卡伦泽斯编年史》，凯瑟琳不由自主地张大了嘴。</p><p>　　一分钟后，鼻青脸肿的凯瑟琳低着头，老老实实地站在M先生面前。</p><p>　　在这一分钟里，M先生苦口婆心地向这个愚蠢的人类说明了能遇到自己是她多么大的机缘，可看她的样子似乎并不相信。</p><p>　　“什么？！你、你说我们两个签了契约？！”凯瑟琳的声音不由自主地提高了个八度，“可为什么我不知道？！”</p><p>　　 “现在你知道了。”M先生突然从虚空中抽出一张闪闪发亮的契约，抓起凯瑟琳的手就摁上去，紧接着飞快地在还没反应过来的少女眼前晃了一下，然后收了回去，“我想你应该看清楚了。”</p><p>　　凯瑟琳：“……”</p><p>　　这只臭猫绝对是个阴险狡诈卑鄙无耻的恶魔吧！绝对是这样没错的吧！</p><p>　　“鉴于你是未成年人，心智不成熟，没有正常的判断能力，所以我就替你签了。你放心，契约本身是没有任何问题。”</p><p>　　凯瑟琳刷地一下涨红了脸，喊道：“谁、谁说我没有成年！我、我还差一百六十五天就十八岁了！”</p><p>　　M先生好奇地上下打量着少女——一头如绸缎般的灰色长发，几分钟前曾十分精致的脸庞以及那远远低于同龄人的身高——惊奇道：“可我看着你只有十三岁。”</p><p>　　少女额头青筋暴起，怒吼道：“啊！你赶紧给我滚啊！”</p><p>　　这样的事情绕是见多识广的M先生也不由得啧啧称奇，不过M先生并没有过多地纠结于此，而是接着说：“总而言之，虽然昨晚那碗蔬菜浓汤给我造成了很大的困扰，但我M先生是一只知恩图报的好猫，所以才和你签订了这份契约。我可以为你做一些规则之内的事……你不用担心我的实力，关于这点，想必刚才你已经深有体会……”</p><p>　　凯瑟琳听到这气的牙痒痒。</p><p>　　少女深吸一口气，压抑住自己想要拍死那只猫的冲动。</p><p>　　冷静冷静，我打不过它……</p><p>　　事已至此，再这么说也无法改变，于是凯瑟琳问道：“你有价值上亿的宝藏？”</p><p>　　M先生摇摇头：“人类的财富于我而言没有任何意义。”</p><p>　　“那你能让我在很短的时间内成为红衣大法师？”</p><p>　　“我想你可以找个裁缝帮你实现这个愿望……”</p><p>　　凯瑟琳斜着眼看着M先生：“那我要你何用？”</p><p>　　“你是个女巫吧？我可以指导你学习魔法。”</p><p>　　“就你？”凯瑟琳冷笑。</p><p>　　看少女的样子是又想嘲讽几声，但想起了刚刚被揍的场景，又忍住了。鼻青脸肿的脸加上扭曲的嘴角让她此时看起来颇为滑稽。</p><p>　　“请不要质疑我的专业，我有着经过新西方魔法学院与红翔奥术学院双认证的相对系魔法与量子魔法双博士学位，著名的近战法师甘道夫还是我的学生……怎么样，是不是被我英俊的外表和渊博的学识所深深折服了？”</p><p>　　“完全没有！”凯瑟琳大声反驳道，“而且那些玩意我根本听都没听过！”</p><p>　　“在我的指导下，虽然不能保证你有什么惊天动地的成就，但成为学院第一肯定是没有问题的……那个雄性人类威……”</p><p>　　凯瑟琳打了个激灵，刚刚消退的红色又一次爬上了她的脸庞，喊道：“闭嘴！你不要说出来呀！等等……”她反应过来，“你是怎么知道的？！”</p><p>　　“根据契约第二十六条第八子项，”M先生的声音突然在少女的脑海中出现，“甲方有权在以下包括但不限于地震、火灾、战争、异族入侵等不可抗力发生时，以及甲方认为有必要的情况时可以阅览乙方过往记忆与对乙方进行读心。”</p><p>　　“啊！快从我脑子里滚出去啊！”</p><p>　　“好的。”M先生照做了。</p><p>　　凯瑟琳松了口气，她现在对它的话已是信了大半。虽然这只臭猫说话很是气人，但到目前为止它都没对自己显露出什么恶意。</p><p>　　也许……这只臭猫说的是真的……吧？</p><p>　　“我叫凯瑟琳，凯瑟琳·艾斯杜利亚，打我的事我就原谅你了。以后我们一起努力吧，小黑。”少女笑嘻嘻地说。</p><p>　　只是下一秒，她的笑容凝固在了脸上，她瞥见了墙上的挂钟——已是接近中午。</p><p>　　“啊！我要迟到啦！”</p><p>　　老实说，M先生已记不清这是少女第几次发出这样恐怖的尖叫了。</p><p>　　这个人类的情绪似乎很容易激动的样子。</p><p>　　“……”M先生沉默片刻，“作为甲方，我觉得自己有必要提醒你今天是周末。”</p><p>　　“啊？”满屋乱窜的凯瑟琳停了下来。</p><p>　　M先生摇摇头，皱着眉，道：“我收回刚才关于能让你成为学院第一的话，毕竟你的智商看上去好像有所缺陷，简直就像长了翅膀的臭弹一样。我不该对你要求这么多的，你只要保证不被开除就好了。”</p><p>　　“啊！你还是赶紧带着你那些奇怪的比喻去死吧！”</p><p>　　屋内原本有所缓和的气氛再次凝固起来。最后还是凯瑟琳哀嚎的肚子打断了两人的战斗——事实上是M先生对凯瑟琳单方面的碾压——凯瑟琳还不能在脱离法杖的情况下施展魔法。</p><p>　　凯瑟琳的午餐还算丰盛——</p><p>　　“午餐来啦。”凯瑟琳笑嘻嘻的样子像是完全忘记了刚才的不愉快，“有土豆泥，蒸土豆和土豆汤。还有这个……西红柿炒番茄。”她端上最后一道菜。</p><p>　　“……”M先生嘴角抽搐着，“最后一道是什么见鬼的菜？！”</p><p>　　“嘿，这是我在一家赛里斯菜馆打工时学的正宗赛里斯菜。”凯瑟琳不满地瞥了眼M先生。</p><p>　　“啊？那家菜馆呢？”</p><p>　　“倒闭了。”</p><p>　　“啊，还真是意料之内呢。”</p><p>　　“喏，这是你的餐盘。”少女把一个盘子放在M先生面前，“为了给你找这东西，我可是连续拜访了十几家邻居才找到的，废了我不少力气，你可得好好感谢我才行。”她拿出一个纸盒，往盘子里“哗啦啦”地倒进去了一堆小小的褐色固体，“瞧，我精心给你准备的摩登斯帝国进口猫粮。”说完，少女得意地看着M先生，眼中闪着光，脸上仿佛写满了“快夸我”。</p><p>　　M先生：“……”</p><p>　　“啪”的一下，很快，M先生就在椅子上站了起来，嚷道：“我告诉你，我不是那种随便的猫。吃猫粮是不可能的，这辈子都不可能吃猫粮！”</p><p>　　好意被白费，凯瑟琳的微笑瞬间就垮了下去。</p><p>　　“你吃不吃猫粮，和我凯瑟琳有什么关系。”少女冷笑。</p><p>　　周围的家具都飘了起来。</p><p>　　凯瑟琳脸上迅速堆起了笑容：“那小黑，土……”</p><p>　　“喵”！</p><p>　　M先生一声惨叫，箭一般地窜到了椅子后，喊道：“土豆那种邪恶的东西也能被称作食物吗？！我一直都搞不明白你们是怎么把那扭曲得如同卡特的皮靴般的玩意塞进嘴里的……我警告你，你要是敢给我吃土豆，我就、就、就……”可M先生“就”了半天也没能把话接上。</p><p>　　凯瑟琳无奈地扶着额头，感觉颇为头疼：“你这家伙，到底是对土豆有着多大的怨念啊？”</p><p>　　M先生从椅子后走了出来，表情严肃，道：“果然还是不能将烹饪这种神圣的事情交给愚蠢的人类来处理吗？”</p><p>　　“我才不是什么愚蠢的人类，我很聪明的！”凯瑟琳抗议道。</p><p>　　M先生沉吟片刻，道：“看来只能我亲自出手了。”</p><p>　　话音刚落，只听“砰”的一声，黑猫已消失不见，取而代之的，是一个男性人类。</p><p>　　凯瑟琳仰着脑袋，不确定地询问道：“小、小黑？”</p><p>　　“哈，我就知道，你还不承认，只是换了副皮囊你就认不出来了，还说你不是愚蠢的人类。”M先生低头看着凯瑟琳，得意地笑出声来。</p><p>　　“不、不，我的意思是……”出乎意料的是，这次凯瑟琳并没有对M先生的话进行反驳。</p><p>　　少女感觉自己的脸微微发烫。</p><p>　　面红耳赤的她手舞足蹈、结结巴巴地说：“你、你、你、你、你怎么长成这样？！”</p><p>　　“哪样？”M先生狐疑地看着她，而后不知道从哪掏出一副镜子，对着自己照了照——黑发——扎了个发髻，还有一双本地少见的黑瞳，身上是一副赛里斯人常见的打扮。</p><p>　　M先生百思不得其解。</p><p>　　没什么不对的地方啊？</p><p>　　忽地，M先生一拍手掌，恍然大悟，而后冷笑道：“哈，我明白了，你……在嫉妒我！”</p><p>　　凯瑟琳：“……”</p><p>　　“你、你……”凯瑟琳气呼呼地跺了跺脚，“真是白瞎了这么一张脸！”</p><p>　　M先生满意地点点头，赞赏道：“看来你终于意识到在我渊博的学识面前我那完美的外表根本不值一提。”</p><p>　　少女顿时如遭雷击，M先生那完美的面庞在她心中轰然破碎。</p><p>　　“你、你这个……”凯瑟琳只觉胸口发闷，而后眼前一黑，又一次晕了过去，不省人事。</p><p>　　少女在失去意识前，隐约听见那只臭猫嘀咕——</p><p>　　“啧啧啧，这身体素质，简直就像吃了土豆的飞行兽一样脆弱……”</p><p>　　当凯瑟琳迷迷糊糊地醒过来时，映入眼帘的是满桌子喷香的鱼。我……我这是到了天堂吗？可为什么天堂的食物都是鱼啊？</p><p>　　“嘿，你醒啦？”又化作黑猫的M先生坐在拿书垫高的椅子上，胸前系着餐巾，爪子上抓着双不知从哪弄来的玉质筷子，笑眯眯地问，“我还没吃呢，特地等你醒了的。”</p><p>　　凯瑟琳瞬间清醒过来，不过她马上就被桌上的菜吸引了注意力——煎炒烹炸的各种鱼、生鱼片、鱼子酱、一碟花生以及她的西红柿炒番茄。</p><p>　　“这、这都是你做的？”</p><p>　　“难不成还是你做的吗？”M先生一脸莫名其妙地反问。</p><p>　　少女的脸微微泛红，接着问：“可这些鱼是哪来的？”</p><p>　　M先生摆摆爪子，道：“这你就不用管了。”</p><p>　　“等等……我的土豆去哪了？！”</p><p>　　“当然是去了它们该去的地方了，正经人谁吃那玩意？”</p><p>　　少女顿时心痛起来，十五铜纳克啊！她的心里仿佛在滴血。</p><p>　　不过紧接着，凯瑟琳念头一转，仔细想了想，又释然了。土豆换鱼，不亏！</p><p>　　“谢谢。”凯瑟琳小声说。</p><p>　　“小意思。”</p><p>　　少女看着鱼，舔了舔嘴唇，拿起了手边的餐具。</p><p>　　“你父母呢？”M先生问。</p><p>　　“啊？”凯瑟琳放下手中的刀叉，“这个……说起来比较复杂……我就简单讲一下吧。”</p><p>　　“嗯，你讲吧。”</p><p>　　“我父亲是德鲁伊·艾斯杜利亚……”</p><p>　　“那你家还是个大家族……你怎么会过得这么落魄？”M先生瞪大了眼睛，诧异道。</p><p>　　凯瑟琳苦笑，道：“这件事还要从几年前我母亲去世时讲起……”</p><p>　　“咔嚓咔嚓……”M先生不停地往嘴里塞着花生。</p><p>　　凯瑟琳瞥了M先生一眼，接着道：“我母亲去世后，我父亲就给我找了个继母……”</p><p>　　“咔嚓咔嚓……”</p><p>　　“当时我一气之下就离家出走，在外面租了房子……”</p><p>　　“咔嚓咔嚓……”</p><p>　　凯瑟琳黑着脸：“你到底听不听？！”</p><p>　　“听听，你接着说。”</p><p>　　“从那之后，他们除了按时给我少的可怜的生活费外，就没再管过我，我进入魔法学院都是我一个人去的……”</p><p>　　“咔嚓咔嚓……”</p><p>　　“够了！你这家伙！”凯瑟琳终于忍无可忍，铁青着脸，手掌“砰”的一声拍在餐桌上，“我不讲了！”</p><p>　　“哦，好。”M先生爽快地答道。</p><p>　　凯瑟琳愣了一下，这才注意到，从刚才到现在，那只臭猫爪子里的筷子就没停过，此时桌子上的菜已经所剩无几。</p><p>　　我……我被那只臭猫耍了？！</p><p>　　“臭猫！你是不是故意让我不停讲话转移我的注意力，自己好独吞那些菜？！”</p><p>　　“我不是，我没有，你别胡说！”M先生极力否认。</p><p>　　“不！你就有！”少女咬牙切齿道，“你快把我的感动还回来！”</p><p>　　凯瑟琳家的午餐就这么在一阵打闹中结束了。</p><p>　　“那么，现在我们就开始特训吧。”M先生坐在会客厅的沙发上这么说道。</p><p>　　“这……这么快吗？”</p><p>　　“那当然，”M先生理所应当地说，“时间可是像霍德海的克里鱼一样珍贵的东西，一点都不能浪费。”</p><p>　　“哦哦，那我们从哪开始呢？”</p><p>　　“你知道量子魔法吗？”M先生神秘地说。</p><p>　　“啊？”凯瑟琳傻傻地张了张嘴。</p><p>　　“那是你的最终目标，威力强大无比。”</p><p>　　“详细说说。”凯瑟琳来了兴趣。</p><p>　　M先生沉吟片刻，道：“这个嘛……以你的智商我很难跟你解释清楚……”</p><p>　　凯瑟琳：“……”</p><p>　　“……放、放手……别掐我脖子……我说我说……我先给你举个众所周知的例子，这个例子叫‘猫的薛定谔’。”</p><p>　　少女一脸茫然。</p><p>　　“简单来说呢，是从前有这样一只就比我弱了那么一点点的猫，它做了个实验。它把当时一个叫做薛定谔的贵族关进了一个密闭的盒子里，而那个盒子里有一块非常不稳定的魔法石，魔法石的能量外泄存在几率。如果魔法石的能量发生外泄，会触发盒子里的机关，贵族就会死；如果魔法石的能量不发生外泄，贵族就存活。根据量子魔法理论，由于魔法石的能量处于外泄和没有外泄两种状态的叠加，贵族就理应处于死人和活人的叠加状态。这个既死又活的贵族就是所谓的“猫的薛定谔”。但是，不可能存在既死又活的贵族，这必须在打开盒子后才知道结果。”M先生端起咖啡杯抿了一口，“你听明白了吗？”</p><p>　　“完全不明白！”少女本想这么说，但她看见了M先生脸上那促狭的笑容，又改口道，“太简单了，完全没有理解障碍。”</p><p>　　除了没有听懂，少女在心里补充道。</p><p>　　“我听见了哦。”凯瑟琳的脑海里突然响起了M先生的声音。</p><p>　　“啊！”少女连忙用手遮住自己发烫的脸，语无伦次地说，“臭、臭猫！你不、不要偷听我心里话！”</p><p>　　“我明明是光明正大地听的。”M先生反驳。</p><p>　　“总、总之就是不要听啦！”</p><p>　　“好了，不闹了……”M先生严肃起来，“那些太远的东西我们先不提，现在主要还是要先把基础打好。”</p><p>　　“嗯嗯。”凯瑟琳点点头，正襟危坐，“我明白。”</p><p>　　“我这有几套题……”</p><p>　　“放马过来吧！”少女斗志高昂。</p><p>　　M先生有些意外地看着她，满意地说：“既然这样……”</p><p>　　突然，一本足足有凯瑟琳一拳厚的书本突然从她眼前出现，而后“砰”的一声重重砸在桌子上。</p><p>　　被惊得目瞪口呆的少女颤颤巍巍地捧起这本死沉死沉的《五年魔考三年模拟》，简直不敢相信自己的眼睛。</p><p>　　“这、这么多？！”她不甘心地问。</p><p>　　“哦，当然不是……”</p><p>　　“我就知道，怎么可能会有这么多的嘛。”少女松了口气。</p><p>　　“……还有这些。”</p><p>　　话音刚落，又有十几本题册整齐地落在了凯瑟琳面前。</p><p>　　凯瑟琳：“……”</p><p>　　几个小时后，M先生看了看挂钟——接近五点，说：“好了，休息会儿吧。”</p><p>　　凯瑟琳在此之前从未觉得这只臭猫的声音是如此的悦耳动听，她瘫坐在椅子上，享受着短暂的宁静。</p><p>　　人的感受是多变的。</p><p>　　就比如现在，在M先生说出“我们去跑步吧”后，凯瑟琳如坠冰窖。几分钟前她还觉得M先生的声音堪比天籁之音，现在她只觉得那简直是恶魔的低吟。</p><p>　　虽然极不情愿，但凯瑟琳依旧跟了上去——这可免去听那只臭猫絮絮叨叨的折磨。</p><p>　　“有个贤者曾经说过，‘不想当运动员的厨子不是好巫师’，这句话深刻地说明了一副好身体的重要性，毕竟身体是学习魔法的本钱嘛。”M先生这么说道。</p><p>　　“那个贤者是谁？”凯瑟琳好奇地问。</p><p>　　“我。”</p><p>　　凯瑟琳：“……”</p><p>　　凯瑟琳家的门前有两棵树，一棵是李树，另一棵也是李树。</p><p>　　徬晚，当M先生带着累得半死的凯瑟琳回到了家门口时。少女站在树下，轻轻抚了抚树干。</p><p>　　“我一定能成功的，对吧？”</p><p>　　微风拂过，树叶“沙沙”响着，仿佛是对少女的回答。</p><p>　　她笑了笑。</p><p>　　是的，我一定能成功！</p><p>　　“早上好，愚蠢的人类。”清晨，系着围裙的人形状态的M先生边从厨房端出热气腾腾的早餐，边向还迷迷糊糊一副没睡醒的样子的凯瑟琳问好。</p><p>　　“好，小黑。”少女刷着牙，口齿不清地嘟囔。</p><p>　　几分钟后，精神百倍的凯瑟琳坐在餐桌前，久久沉默。</p><p>　　良久，少女开口道：“小黑，你老实跟我说……”她看着桌上堆满的各种食物，颇有些局促不安，“你是不是去把商店抢了……我们可不能干这事啊……哎哟……你又打我！”</p><p>　　“我的猫品是经得起考验的。”又化为黑猫的M先生品着咖啡，慢悠悠地说，“抓紧吃……有位贤者曾经说过，‘美味而富有营养的食物是让你成为大法师的关键’……”</p><p>　　“……”少女狼吞虎咽，“又系泥嗦的（又是你说的）？”</p><p>　　“有什么问题吗？！”M先生面色不善地看着她。</p><p>　　少女缩了缩脖子，结结巴巴地说：“没、没有。”</p><p>　　……</p><p>　　身披巫师袍，头戴尖顶宽檐帽的凯瑟琳一到教室，所有嬉闹的学生便都看着她笑，有的叫道，“凯瑟琳，你今天怎么来这么早？”她不回答，径直来到座位坐下，说，“我要努力学习。”便排出九本题册。他们又故意的高声嚷道，“你一定是成绩太差要被开除了吧！”凯瑟琳睁大眼睛说，“你怎么这样凭空污人清白……””什么清白？我前天亲眼见史蒂夫教授找你谈话，气走了。”凯瑟琳便涨红了脸，额上的青筋条条绽出，争辩道，“讨论不能算气……讨论！……巫师的事，能算气么？”</p><p>　　众人也都哄笑起来：教室内外充满了快活的空气。</p><p>　　少女的同桌——里昂也惊疑不定地看着她，道：“你来这么早？不应该啊……你不对劲。”</p><p>　　“不行吗？”凯瑟琳没好气地说。</p><p>　　里昂表情严肃起来，认真道：“凯瑟琳，我得跟你唠个知心嗑，咱有病就治，可不敢耽误了。”</p><p>　　凯瑟琳：“……”</p><p>　　这时，一个女巫却是来到凯瑟琳面前，不屑地看着她，说：“凯瑟琳，你再怎么努力也没用的，弱者……一辈子都是弱者……”说完，便头也不回地走了。</p><p>　　“艾丽丝这人真是欠揍。”里昂不满地挥了挥拳头，“凯瑟琳，不用理那些家伙。”</p><p>　　“我……我知道。” </p><p>　　……</p><p>　　家中，百无聊赖的M先生很快便在少女的书桌上发现了样新奇的东西——一个连接着打字机键盘的金属盒子——正面是漆黑的晶石屏幕，右侧还有一个似乎能打开的活板。</p><p>　　看着新玩具，M先生皱着眉头，那个愚蠢的人类去学校前似乎交代过什么——</p><p>　　“小黑，午餐不用做那么多，吃不完。”</p><p>　　不是这个。</p><p>　　“小黑，不要乱碰我的东西，要不然我回来后你就死定了！”</p><p>　　嗯，这个肯定没说过！</p><p>　　没错，我不记得的那就是没说过！</p><p>　　M先生满意地点点头，而后跳上了椅子，打量着眼前这台古怪的机器。M先生思索片刻，爪子摁在了一个看上去像是启动键的按钮上。</p><p>　　果不其然，按下之后，屏幕闪烁了一下，便亮了起来，一行加粗字体出现在屏幕上：</p><p>　　艾德斯智脑竭诚为您服务。</p><p>　　紧接着是有着“飞书”与“千度”两个版块的主界面。</p><p>　　嘿，高科技！</p><p>　　M先生兴奋地搓了搓爪子，看了看两个版块的介绍——一个是非即时通讯软件，一个是资料查询软件。</p><p>　　没有犹豫，进入“千度”。</p><p>　　软件非常简陋，只有一个输入框和一个输出框。</p><p>　　M先生当即“噼里啪啦”地敲着键盘，输入：“摩登斯帝国的上一任皇帝是谁？”</p><p>　　几秒的延迟。</p><p>　　“奥古斯都二世。”</p><p>　　嘿，真神了！</p><p>　　“罗克大公国的主要经济来源？”</p><p>　　“旅游业。”</p><p>　　“我要买三百银贝利的法杖需要准备多少预算？”</p><p>　　“……” </p><p>　　“空腹能吃饭吗？”</p><p>　　“……”</p><p>　　“一个人自杀了，这个世界上是多了一个自杀的人还是少了一个自杀的人？”</p><p>　　“……”</p><p>　　“够了！看在创世神的份上！”智脑右侧的活板被“砰”的一声打开，一个尖耳朵的小绿人骂骂咧咧地从智脑里钻了出来，把手中的《百科全书》摔在了桌面上，“你这该死的蠢猫！能不能不要再问这种愚蠢的问题了！”</p><p>　　……</p><p>　　“这次的考试成绩出来了。”老师推了推鼻梁上的眼镜，板着脸扫视讲台底下的学生们。</p><p>　　此时，凯瑟琳与M先生相识已经过去了半年之久。在这段时间里，凯瑟琳的成绩进步神速，成功脱离了倒数的行列，而因此取得的奖学金也解决了她的住房危机。</p><p>　　“凯瑟琳，年级第九。”</p><p>　　虽然早有预料，但教室中还是响起了一阵惊叹。</p><p>　　“其他的我就不想说了……看看你们，一个个的，多学学人家凯瑟琳，半年时间就从倒数窜到了年级前十，跟坐巨龙似的……”</p><p>　　“凯瑟琳，你可真厉害，到底是怎么做到的？”里昂好奇地问。</p><p>　　“这个嘛……”少女脸上带着笑容，“我家里有一只叫M先生的猫，虽然它平时说话很是气人，但它每天都会尽心尽力地给我做饭，指导我学习……”</p><p>　　里昂：“……”</p><p>　　不想说就不说嘛，扯什么猫……</p><p>　　……</p><p>　　“小黑，你这些信是哪来的？”周末，正在进行大扫除的凯瑟琳停下了手中的活计，从M先生的床上——一个放着枕头的篮子——拾起了几封信。</p><p>　　“什么信？”M先生的目光越过报纸，看向凯瑟琳，而后恍然大悟，“哦，你说那个啊。那是我去看巨龙杯的时候几个奇怪的家伙塞给我的传单……我以为那些人是推销员，还奇怪她们为什么没有暴力拦住我让我买她们的东西呢。”</p><p>　　“你是不是对推销员有着什么奇怪的误解……”少女扶着额头，哭笑不得，“还有，你又是什么时候去看的巨龙杯？！”</p><p>　　“你不知道的时候。”</p><p>　　凯瑟琳：“……”</p><p>　　“我拆开看啦！”</p><p>　　“随你便……”</p><p>　　“啊！这、这、这……”只是瞄了一眼，少女顿时心跳加速，面红耳赤，“不、不知廉耻！”</p><p>　　这哪是什么传单！这分明是几封极度暧昧的情书！</p><p>　　“你、你没看过吧？！”看她的阵仗，似乎只要M先生给出肯定的回答，她立马就会带着M先生去接受记忆清除魔法。</p><p>　　“没有。”</p><p>　　“嘶啦”几声，信眨眼间变成了碎片。</p><p>　　“为什么撕了？”M先生好奇地问。</p><p>　　少女的脸越发红了，咬牙道：“我乐意，你管不着。”</p><p>　　“哦。”M先生也没纠结，这个愚蠢的人类偶尔会像现在这样神经兮兮的，不是什么大问题。</p><p>　　“以、以后要是有人给你塞信，你就马上退回去……”少女手舞足蹈地说，“实在不行，你、你就丢掉！”此时她的脸已经红得仿佛能滴出血。</p><p>　　“虽然不知道为什么……但没问题。”M先生同意了她的请求。</p><p>　　少女松了一口气，抓起手边的扫把，又接着扫起了地。不过这次，却已是有些心不在焉了。</p><p>　　……</p><p>　　“小黑小黑。”凯瑟琳摇着正躺在椅子上晒日光浴M先生，“答应我件事呗。”</p><p>　　M先生翻了个身，道：“不去。”</p><p>　　“你怎么知……”凯瑟琳反应过来，知道这臭猫又在读心，不过她却没有追究，而是接着说，“小黑，去嘛去嘛……”少女撒着娇，“这次晚会老师要求学生的监护人都要到场……毕竟要举行最终考试了……可你也知道我的父亲是不可能去的，而且我也不想让他去……”</p><p>　　“那是你的问题……”M先生舔了舔爪子，“我不可能一直在你身边的……更何况今晚巨龙杯可还有一场重要的夜赛呢。”</p><p>　　“你、你、你要走？！”</p><p>　　“啊？你听错了！”M先生否认。</p><p>　　“不，你肯定说了！”</p><p>　　“我说没有就没有。”M先生死猪不怕开水烫。</p><p>　　凯瑟琳泄了气，不再纠结这个问题。</p><p>　　晚会更重要一些。</p><p>　　她咬着嘴唇，思索片刻，而后眼睛一亮，蛊惑道：“晚会可准备不少吃的，可以吃个够……”</p><p>　　M先生忽地站了起来，义正言辞道：“请务必带上我……给予乙方一些力所能及的帮助是一只有原则的猫应该做的。”</p><p>　　徬晚，头发与瞳孔都换了个颜色的M先生穿着租来的礼服走出了家门，发髻已经松开，长发绑在脑后——这让M先生有些不大习惯。</p><p>　　不知道什么原因，凯瑟琳的脸一直是红扑扑的，她理了理身上的裙子，说：“马车来了，走、走吧。”</p><p>　　“哦，好。”</p><p>　　这时，一群孩童闹哄哄地跑了过来。领头的男孩喊道：“M大叔！你要去看比赛了吗？”</p><p>　　“不是，我临时有事，去不了了。”</p><p>　　“那真是太可惜了，今晚是龙狮队与独眼巨人队之间的对决，肯定很精彩！”男孩惋惜地说，“放心吧，M大叔，我会记得帮你要一张格雷斯的签名的！”</p><p>　　“那就先谢谢你了。”M先生笑了笑。</p><p>　　“再见，M大叔！”说完，孩童们就风风火火地跑走了。</p><p>　　乘着马车的两人很快便到了学校。</p><p>　　来到晚会现场的M先生引起了不少贵妇与年轻女孩的脸红心跳，可当晚会正式开始时，它的狐狸尾巴就露了出来——M先生如同饿死鬼投胎一样，风卷残云般地席卷了餐桌上的食物，这般惨绝人寰的行为同样引起了不少人的侧目。</p><p>　　此时，凯瑟琳正在站在角落里——实在没脸呆在M先生身边——小口抿着饮料。</p><p>　　“嗨，凯瑟琳。”一个女孩从背后拍了拍她的肩膀。</p><p>　　凯瑟琳回过头，来着来人，疑惑道：“朱迪？你要干嘛？”</p><p>　　“客套话我就不说了。我问你，那边那个大叔是你父亲？看着好年轻啊。”朱迪指了指远处的M先生。</p><p>　　“不、不是，他、他是我叔叔……对，是我叔叔。”</p><p>　　朱迪狐疑地看着她，道：“怎么感觉你有点奇怪？”</p><p>　　“才没有！”凯瑟琳不由自主地喊了出来，旁边的人纷纷看了过来，她的脸刷地一下红了。</p><p>　　“他结婚了吗？”</p><p>　　“没、没有。”凯瑟琳还没反应过来。</p><p>　　“太棒了！”朱迪忽然兴奋起来，“他住哪？”</p><p>　　“你问这个干什么？”凯瑟琳警惕起来。</p><p>　　“各位先生女士们，下面我们将随机请一位家长上台来给大家讲几句……”台上的主持人打断了凯瑟琳与朱迪的对话，“让我看看，被选中的是……额……M先生！大家掌声欢迎！”</p><p>　　凯瑟琳注视着M先生走上台，想了想以它的性子会说些什么，顿时脸色苍白。</p><p>　　完蛋了。</p><p>　　朱迪则是盯着M先生“嘿嘿”傻笑。</p><p>　　“这位先生，请你为大家讲两句吧。”</p><p>　　“讲什么？”M先生老实问。</p><p>　　主持人愣了一下，道：“就……就随便讲。”</p><p>　　“哦，这里的饭菜很好吃……”</p><p>　　“额……”主持人擦了擦冷汗，“这位先生讲的……讲的非、非常别具一格啊。”</p><p>　　朱迪眼中冒着星星，喃喃道：“不愧是我看上的男人，就连讲话都这么不走寻常路。”</p><p>　　一旁的凯瑟琳面红耳赤，尴尬得无以复加，耸动的脚趾头恨不得在地板上抠出个三室一厅。</p><p>　　……</p><p>　　“这是最后一场决赛了，校方做了相当严密的保护，两名选手分别被施加了被动魔法圣环，理论上这个防御魔法能够阻挡一次四环魔法的致死伤害……让我们来看看这次比赛的两个选手，都是十分强悍的啊。分别是威廉和本届魔考的黑马凯瑟琳，让我们期待一下，两万金比克与帝国学院的入学名额到底会落在谁的手里呢？”</p><p>　　“威廉加油！”</p><p>　　“男神你是最棒的！”虽然场内外的声音已被隔绝，但威廉的崇拜者们依然卖力地呐喊助威。</p><p>　　“没想到会是以这样一种方式和你站在一起。”凯瑟琳感触颇深。</p><p>　　“我也没想到你能站在这个台上，你的实力很不错。”威廉握紧了手中的法杖，“不过就此止步吧，我有必须要赢的理由……”</p><p>　　话音刚落，威廉手中的法杖光芒大盛，一股猛烈的气浪以他为中心向四周扩散。</p><p>　　“绊脚石什么的……都去死吧！”</p><p>　　猛烈的爆炸覆盖全场，蘑菇云升腾而起。</p><p>　　“好强烈的能量波动，看来比赛要结……等等，凯瑟琳挡下来了！她是怎么做到的？！”</p><p>　　烟雾散去，能量盾下的凯瑟琳毫发无伤。</p><p>　　“还有呢！”</p><p>　　威廉挥舞法杖，身后燃起了数个火球。紧接着，火球便直冲凯瑟琳而去。</p><p>　　凯瑟琳不退反进，迎着火球冲了过去。</p><p>　　“天啊！她在干什么？！”解说员惊叫。</p><p>　　只见少女抡起法杖便砸在火球上，火球旋即消散。短短几秒，所有火球便全部消失。少女没有停下脚步，而是径直来到茫然无措的威廉面前，而后一法杖挥了下去。</p><p>　　威廉只感觉一阵天旋地转，整个人便如同断了线的风筝一般飞了出去。</p><p>　　场内外一片鸦雀无声。</p><p>　　“凯、凯瑟琳把威廉打飞出去了……”解说员只感觉自己像做梦一样，周围的一切都是那么的不真实。</p><p>　　“认输吧。”凯瑟琳平静道。</p><p>　　“呵……”威廉艰难地站了起来，“我已经没有退路了……我需要那笔钱……那不仅仅是一笔奖金，它还是我母亲接受最好的治疗的前提，也是把我妹妹从黑帮手里赎回来的机会……”他歇斯底里地吼道，“这是我最后的希望！给我去死吧！”</p><p>　　威廉猛地举起了法杖，身上红光大盛，艳红的鲜血不断渗出皮肤。</p><p>　　凯瑟琳瞳孔猛地一缩，这个魔法让她心悸不已。</p><p>　　“是、是五环魔法的能量波动！威廉以燃烧生命为代价，要施放一道五环魔法……救生员冲上去了！”</p><p>　　刺眼的红光挤满了眼中的一切，巨大的声响几乎将耳膜震裂。</p><p>　　我……死了吗？</p><p>　　红光消逝，看见了眼前的景象，凯瑟琳顿时呼吸一滞，灵魂仿佛凝固了一般。</p><p>　　“小、小黑……”凯瑟琳不敢相信地看着脚下一动不动的黑猫。</p><p>　　她眼睛变得通红，力气仿佛在一瞬间被抽得一干二净，“啪嗒”一声跪在地上，看着地上的黑猫，巨大的悲伤让她失去了思考。</p><p>　　“滴答”。</p><p>　　泪水止不住地顺着脸庞滴落在了地上。</p><p>　　“为什么？”</p><p>　　少女咬着嘴唇，嘴唇被咬出了深深的血痕。</p><p>　　“为什么？！”</p><p>　　她大声痛哭着，仿佛失去了玩具的小女孩。</p><p>　　时间仿佛静止。</p><p>　　整个世界如同只剩下了她与黑猫。</p><p>　　“我还没吃够你做的饭……”</p><p>　　“我还没学会你说的量子魔法……”</p><p>　　“你只是睡着了对不对？”</p><p>　　“你快醒过来……这个玩笑一点也不好笑……”</p><p>　　黑猫逐渐消散。</p><p>　　“不……不要……”</p><p>　　少女伸出手，试图留下黑猫，却什么也没有抓到……</p><p>　　……</p><p>　　睁开眼，洁白的天花板有些晃眼。</p><p>　　凯瑟琳从床上坐了起来。</p><p>　　眼睛酸酸的。</p><p>　　有种怅然若失的感觉。</p><p>　　奇怪，为什么我那么想哭。</p><p>　　奇怪，我好像失去了什么很重要的东西，想不起来了。</p><p>　　心里好难受。</p><p>　　奇怪……</p><p>　　“你醒了？”一个眼角带着泪痕的女人扑了过来，一边哭着一边抱紧了她，“原先我就不同意那个死鬼的计划，现在好了，出事了。还说什么让你在逆境里成长……我呸……”</p><p>　　凯瑟琳有些茫然。</p><p>　　窗边，一个男人转过身来，严肃的脸上还带着两个鲜红的掌印，正是凯瑟琳的父亲。</p><p>　　“回家吧，凯瑟琳。”</p><p>　　“死鬼，还好意思说！你就不能笑一下吗？整天带着副死人脸！”</p><p>　　……</p><p>　　“威廉先生，有人托我把这个转交给你。”医生把手中的信封递给躺在病床上的威廉，而后转身离开。</p><p>　　威廉接过信封，拆开。</p><p>　　是一张支票。</p><p>　　他抹了抹湿润的眼角。</p><p>　　“谢、谢谢。”</p><p>　　……</p><p>　　“你喜欢吃赛里斯菜？”餐馆里，里昂看着满桌子的赛里斯菜，好奇地问。</p><p>　　“嗯。”凯瑟琳点点头，“不知道为什么，就是想吃，特别是这些鱼，好像已经吃了很久一样……以后说不定我还会去一趟赛里斯……”</p><p>　　“喵”。</p><p>　　凯瑟琳猛地抬头，环顾四周，发现是店老板养的一只小奶猫。</p><p>　　少女心中莫名出现了一股失落感。</p><p>　　“你怎么了？”</p><p>　　“啊？我、我也不知道。”</p><p>　　……</p><p>　　凯瑟琳站在原先那栋罗理德式小屋前，呆呆地看着。她现在还住这里，不知道为什么，这里总能让她感觉到一股亲切感。</p><p>　　凯瑟琳深吸一口气，走上前，“吱呀”一声推开了门。</p><p>　　忽地，少女愣在门外，泪水不受控制地涌了出来。</p><p>　　“喵”。</p><p>　　</p><p>　　<strong>「完」</strong></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小说 </tag>
            
            <tag> 儿时旧作 </tag>
            
            <tag> 奇幻 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>书摘.夏日郊外的旅店.安娜-卡埃勒.雨昂</title>
      <link href="/post/874006c5.html"/>
      <url>/post/874006c5.html</url>
      
        <content type="html"><![CDATA[<h1 id="第一十八章"><a href="#第一十八章" class="headerlink" title="第一十八章"></a>第一十八章</h1><ul><li>　　紧拥过你的双臂，伴你漫步曼哈顿的双腿，在出租车里与你交握的双手，和你一起微笑过的脸庞，害怕会把你遗忘的双眼，我身上的一切都让我想起你。  </li></ul><h1 id="第二十章"><a href="#第二十章" class="headerlink" title="第二十章"></a>第二十章</h1><ul><li>　　生活就是一段旅程？你要享受过程，不要杞人忧天地担心终点，不要等待暴风雨结束，而是要学会在风雨中舞蹈。</li></ul><h1 id="第三十章"><a href="#第三十章" class="headerlink" title="第三十章"></a>第三十章</h1><ul><li>　　生活可不是童话，爱情故事和露水情缘的结局通常不太理想。人应该勇于接受生活的磨难，而不是活在自己的小世界里，一把火就窒息而亡了。</li></ul><h1 id="第三十二章"><a href="#第三十二章" class="headerlink" title="第三十二章"></a>第三十二章</h1><ul><li>　　灼热的沥青路让她想起丈夫葬礼的那天。那也是个夏天。她跟着灵柩车向墓地走去，亲友都来哀悼，声音充满悲伤。隐藏在黑纱后的她，却想用尽全力呼喊“自由”。跟他一起十五年，那十五年实在太久了！儿时是父亲，然后是丈夫，她受了太久的压迫。这两个男人半斤八两，时刻提醒着她，他们对她的付出多么可怜，他们对于好妻子的定义有多么混蛋。</li></ul><ul><li>　　‘最好情况’的坏结果，以及那些没有任何作用的治疗细节、沉默、令人窒息的诊疗室和提问。不，伊凡，请让我有尊严地度过人生的最后阶段。一如我这一生，始终活在当下。没什么比‘把握现在’更糟的建议了。把握现在，把握现在……谁能告诉我该怎么把握？没了，谢谢，下一个！我充实地过完了这一生，宁可选择听您歇斯底里地唱歌。老天知道您唱歌有多难听！”</li></ul><h1 id="第三十五章"><a href="#第三十五章" class="headerlink" title="第三十五章"></a>第三十五章</h1><ul><li>　　这就是生活，我们曾企图说服自己被爱包围着，但现实告诉我们每个人只能靠自己。</li></ul><ul><li>　　珀莱塔一句话也没听进去，这些马让她难受。人们给它们穿上奇装异服，打扮成超级英雄的样子，给它们施压。它们似乎拥有了新鲜草料和专属场地，实际是被关进了盒子。它们的余生将如何度过呢？无法快速奔跑时，会发生什么？当它们的膝盖开始老化，或者进入老年，又会怎么样呢？会为它们提供牧场，还是让它们自身自灭呢？抑或被切块挂在肉铺，任由靠着它们发了财的主人吃掉呢？</li></ul><h1 id="第三十六章"><a href="#第三十六章" class="headerlink" title="第三十六章"></a>第三十六章</h1><ul><li>　　在这灯光惨白的走廊里，乔治忧愁地皱眉，无助地在这充满消毒水的味道里寻找生命的气息。</li></ul><ul><li>　　今夜，她竟然以如此可怜的形象出现在他面前：躺在床上，头发被枕头压扁了，病号服下的身体像软绵绵的豆荚，靠着注射器苟延残喘。对乔治的抱怨则是因为他缺乏人文情怀，这年头难道连有尊严地在私人空间里安静死去的权利都没有了吗？</li></ul><ul><li>　　他试图记住老太太的每个小细节和小动作，想记住她眼睛边上的美人痣、薄薄的嘴唇、耳廓的形状，还有太阳穴附近的小疤痕——那是童年的顽皮留下的印记。他突然陷入深深的忧伤，尽管身体还硬朗，但记忆力已不可抑制地衰退了。</li></ul><h1 id="第三十七章"><a href="#第三十七章" class="headerlink" title="第三十七章"></a>第三十七章</h1><ul><li>　　爱自己吧——珀莱塔会这样命令——就当这个世界上不会再有人来爱你，只有你能爱自己！像母亲一样照顾自己！只有学会爱自己，才能学会爱别人。</li></ul><h1 id="第三十八章"><a href="#第三十八章" class="headerlink" title="第三十八章"></a>第三十八章</h1><ul><li>　　珀莱塔与乔治手挽着手，享受这些她曾以为再也不会经历的美好时光，沉醉于有老先生陪伴的幸福之中。她有时候真想愉快地叫出声来，想紧紧拥抱大树，想歇斯底里地大声歌唱，她的信心又全部回来了。她欣赏云的形状、风拂过树叶的声音，还有在回病房的路上雨滴打落在脸上的感觉。她喜欢雨滴滑落的清凉，也喜欢看乔治打伞的笨拙样子，还有他的银发被风吹乱的样子。他们笑得那么欢乐。</li></ul><h1 id="第三十九章"><a href="#第三十九章" class="headerlink" title="第三十九章"></a>第三十九章</h1><ul><li>　　孩子啊，我赋予你美梦、爱和希望，然而某天早晨，我发现原来你依然会为生活所伤，对生活失望。珀莱塔已无所畏惧，但害怕他人受到伤害，害怕让他们茫然若失，害怕自己的离去会带走他们生活里的某些意义。</li></ul><h1 id="第四十二章"><a href="#第四十二章" class="headerlink" title="第四十二章"></a>第四十二章</h1><ul><li>　　这就是乔治爱情生活的全部，猛烈的爱火熊熊燃烧过，好多年后依然可以闻到冷去的烧焦味。</li></ul><h1 id="第四十三章"><a href="#第四十三章" class="headerlink" title="第四十三章"></a>第四十三章</h1><ul><li>　　冬天了！他觉得春天似乎还在昨天。四季如梭般交替，他怀疑有人偷走了时光。</li></ul><h1 id="第四十四章"><a href="#第四十四章" class="headerlink" title="第四十四章"></a>第四十四章</h1><ul><li>　　“爱是不假思索的，没有逻辑，不需要数据。爱是一种化学反应，是一种感觉，它是不理智的，在不知不觉中开始，但又让你难以自拔地陷进去。”</li></ul><h1 id="第四十八章"><a href="#第四十八章" class="headerlink" title="第四十八章"></a>第四十八章</h1><ul><li>　　他们会在第六大道转角处的小花园里闻一闻玫瑰的香气；去那个五彩缤纷的甜品店买几个小蛋糕，坐在没人的小广场里慢慢分享；在那些绿树成荫的小径上散步，阳光透过树叶照射在他们身上；在中央公园无人的角落野餐；在太阳快下山的时候，去那个只有他知道的意大利小店买个冰淇淋。神秘的纽约，精致的纽约，正等待着他们。</li></ul><ul><li>　　远处的山谷里，太阳缓缓落山了。白天越来越短，像是一种不好的预兆，他们的故事也会越来越短。乌鸦在枝头呀呀地叫。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 书摘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 书摘 </tag>
            
            <tag> 夏日郊外的旅店 </tag>
            
            <tag> 安娜-卡埃勒.雨昂 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>两个人的宇宙</title>
      <link href="/post/77bface8.html"/>
      <url>/post/77bface8.html</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-船"><a href="#第一章-船" class="headerlink" title="第一章 船"></a>第一章 船</h1><p>　　船就要离岸了。</p><p>　　岸很大，也很繁忙。一条长达350公里的“银索”将它与地表相连。</p><p>　　那是岸的生命线。</p><p>　　船很旧了，它孤独地靠在岸边，雪茄状的船身上刻画着岁月的痕迹。如同勋章，透着峥嵘的气息。</p><p>　　船是在这出生的。三十多年里，它无数次在萨斯星与诺兰帝国的大后方之间往返。但，这次之后它不会回来了。</p><p>　　这是离开萨斯星的最后一班船。</p><p>　　原因无他，机械文明就要来了。</p><p>　　帝国政府与军队早已在几天前就撤往后方，剩下的，便是那些小贵族与萨斯星的普通居民。</p><p>　　船要摆渡的，便是这些人。</p><p>　　“我是朗斯特区的民生官！让我上船！我有票！我有票！”</p><p>　　星港3号登船通道前，一个大腹便便的秃顶男人挥舞着手中的船票，大声地向面前的士兵喊道。</p><p>　　“求求你们啦！让我们上去吧！”</p><p>　　“快让开！我要上去！你们这些该死的走狗！”</p><p>　　每个登船通道前都喧闹无比，或哀求，或怒骂。但身着全覆式真空作战服的士兵们不为所动，他们连成一排，横举着步枪，阻拦着试图冲上星船的人群。</p><p>　　“都退后！不要挤！”</p><p>　　一名身材魁梧的军官大声喊着。可那中气十足的声音却如同惊涛骇浪中的一叶扁舟，被迅速淹没在鼎沸的人声中。</p><p>　　这时，一个西装革履、身材有些发胖的男人费力地挤开其他人，来到了军官面前。他右手拉着一个脸颊瘦削的女人的手——那想必是他的夫人——他们手上都戴着同一款式的婚戒。</p><p>　　女人紧紧拽着一个年轻人的手，而那个年轻人的脸色看上去有些不太自然。</p><p>　　“长官，你还记得我吗？我是余东区的时迁爵士。”时迁往周围看了看，见没人注意这边，便将几块银色金属塞进军官手里。</p><p>　　在这个年头，白天时还能买到一袋面粉的诺兰币，到了晚上可能连一张纸也买不到。</p><p>　　贬值的速度简直超乎想象。</p><p>　　如今，诺兰币已经比废纸还不值钱了。这一点，时迁心里是十分清楚的。所以，他出门在外时通常都会带些“硬通货”。</p><p>　　那名军官紧了紧手中的金属块，不动声色地放进口袋。紧接着，他脸上露出灿烂的笑容。</p><p>　　“哈哈，我记得你，好久不见啊，我的朋友。”</p><p>　　“是啊是啊，好久不见……那个，长官，我们一家三口想上船，”时迁指了指身后的两人，脸上谄媚的笑容几乎要溢出来，“你看这事……”</p><p>　　“啊，这样啊……”军官扶了扶头上的帽子，一副为难的样子，“虽然我们是朋友，但还是要按上头的规矩来，毕竟无规矩不成方圆嘛。你懂吧？”</p><p>　　“我懂、我懂。”时迁点头哈腰。</p><p>　　“这个船票是少不了的……”</p><p>　　“有、有、有！”时迁激动地点点头，然后把手探进身上那套看起来价格不菲的西装，小心翼翼地掏出三张船票，举在军官眼前。</p><p>　　但那军官好似看不到船票一般，只是皱着眉头盯着时迁。时迁愣了愣，旋即恍然大悟，又急忙掏出几块金属塞进军官手中。</p><p>　　这帮该死的吸血鬼！时迁心中暗骂道。</p><p>　　军官手里紧紧攥着金属块，紧皱的眉头舒展开来，老朋友般的笑容又回到了他的脸上。</p><p>　　“上船吧，我的朋友，我会想你的。”军官满意地点点头，拍了拍时迁宽厚的肩膀，又转身对着士兵说，“放他们三个过去。”</p><p>　　“谢谢长官！谢谢长官！”说完，好似生怕军官会突然反悔一般，时迁飞似的带着老婆孩子窜过登船通道淡蓝色的隔离膜，登上了星船。</p><p>　　“星船即将离港，请无关人员保持安全距离。”</p><p>　　五分钟后，播音员的声音在星港中响起。士兵们开始驱散没能登船的人群。一声轻响，星船脱离了与星港的连接。</p><p>　　突然，几个年轻人丢下手中的手提箱，发疯似地闯过士兵的拦截线。他们一边跑一边高喊：“不！停下！等等我们！让我们上船！”</p><p>　　“蠢货！快停下！”一名士兵喊道。</p><p>　　其余的士兵举起步枪，对着那几个年轻人开枪了。</p><p>　　步枪发出几声微弱的电流声，跑在最末尾的两个年轻人突然浑身冒出蓝色的电光，剧烈抽搐着，倒在了地上。可剩下的几个却越过了隔离膜，进入了太空。</p><p>　　临死前，那几个人还在试图攀住星船的外壁……</p><p>　　星船逐渐远离了星港，它的尾部亮起了幽幽的蓝光。使用常规动力的星船会在四个小时后离开恒星系，然后进行跃迁。进入超空间航行的星船将会在几秒内到达目的地。</p><p>　　星船的船长很开心，因为跑完这趟后他就不必来这么靠近前线的地方了。</p><p>　　星船的乘客们很开心，因为他们终于能离开这个鬼地方了。</p><p>　　但星港里那些没能上船的人很不开心，因为他们要留下来面对那些丝毫不讲人道主义的“铁疙瘩”了。</p><p>　　心生绝望之人总是会做出一些令人惊惧的事。</p><p>　　就比如现在，在士兵们还在兴致勃勃地谈论那几个送死的蠢货时，一个戴着黑框眼镜、满脸疯狂之色的男人扯下了厚厚的衣服——这当然不是他有着什么奇怪的癖好——而是他要露出身上捆得满满当当的炸弹。</p><p>　　天知道他是怎么把那些玩意儿带上星港的——这个也许要搜一搜警卫队队长的口袋才能知道真相。</p><p>　　拥挤不堪的人群发出尖叫，他们互相推搡着，企图远离那个疯子。现场十分混乱，不时有人摔倒在地上，然后再也没能爬起来……</p><p>　　“快！让那艘船回来！要不然大家一起完蛋！”眼镜男举起手中紧紧摁着按钮的起爆器，面目狰狞地吼道，“别想耍花招！我要是一松手，这儿指不定会发生什么！”</p><p>　　先前与时迁交谈甚欢的军官擦了擦额头上细密的冷汗，战战兢兢地劝说道：“你先冷静一下……”</p><p>　　“冷静个屁！你们最好能在我的手没法握紧起爆器前把船叫回来！”</p><p>　　“好、好，我叫我叫……”军官又一次擦了擦冷汗，然后掏出了对讲机，“我跟上头沟通一下。”</p><p>　　星港的指挥台内，一个面无表情的中年男人站在单向玻璃前，用他脸上那唯一的眼睛冷眼看着这一幕。</p><p>　　“关闭隔离膜。”他不容置疑地说。</p><p>　　旁边的士兵愣了一下。</p><p>　　“可、可是……”那名士兵有些犹豫。</p><p>　　“照我说的去做！我会担责，星港不能出事。”</p><p>　　“是，维德长官。”</p><p>　　“好了没有？！”眼镜男不耐烦地看着拿着对讲机的军官，对着他晃了晃起爆器，“我的耐心是有限的。”</p><p>　　“这个……”</p><p>　　就在这时，登船通道的指示灯全部熄灭，淡蓝色的隔离膜骤然消失。率先发现这个情况的军官与眼镜男面色大变。敌对的两人脑海中不约而同地浮现出同样的念头：</p><p>　　我出现幻觉了吗？那帮混蛋竟然真的敢把隔离膜给关掉！在一个大型星港里！</p><p>　　眼镜男张大嘴，似乎想说些什么。</p><p>　　只是，还未待他吐出第一个音节，通道便传来一股巨大的吸力，靠近通道的人群还没反应过来便飞进了太空。这其中，也包括了那名军官与眼镜男。</p><p>　　紧接着，指示灯亮了起来。</p><p>　　隔离膜重启了。</p><p>　　星港外隐隐亮起了一道微弱的亮光。</p><p>　　幸存下来的人趴在地上，大口喘着粗气。</p><p>　　维德看了一会儿，便转身大步流星地离开了。</p><p>　　　　　　　　　</p><h1 id="第二章-牢笼"><a href="#第二章-牢笼" class="headerlink" title="第二章 牢笼"></a>第二章 牢笼</h1><p>　　船带着它的乘客们，渐渐远去了。</p><p>　　没有人知道未来的生活会怎样，带着些许期许与紧张，形形色色的乘客开始了他们的旅程。</p><p>　　“玉琳，跟上，别走散了。”</p><p>　　时迁圆圆的脑袋左顾右盼，试图找到一块稍微空旷些的地方。毫无意外的，他失败了。</p><p>　　这艘船上到处都是人。</p><p>　　为了能多容纳一些人，三等舱的座椅已经全部被拆卸掉了。</p><p>　　“知道了……”玉琳依然紧紧攥着身后年轻人的手，“话说回来，老时，这么多人应该已经超载了吧，燃料够不够我们飞出去？”</p><p>　　年轻人的手向后扯了扯，似乎是想挣脱母亲的手。</p><p>　　“哼，你是没看见船尾加的那些外挂舱，里面装的可都是燃料。”</p><p>　　“那不是很危险吗？！”玉琳捂着嘴，吃了一惊。</p><p>　　时迁看着她，心想：危险又怎样，到头来还不是得坐这班船。</p><p>　　“那些高高在上的老爷们什么时候在乎过我们这种人的死活？别看我是个贵族，可像我这样的，那是一抓一大把。你在萨斯星随便丢块砖头都能砸死一个爵位比我高的。说白了，人家给我们爵位是看上了咱那点资产和影响力。听说陪都那现在是逮着个有点影响力的就封爵，简直是来者不拒。呵，我们现在能上来就不错了，挑三拣四的我们没那资格。”</p><p>　　“唉，以后的日子可怎么办啊——”玉琳皱着眉头，想到了以后自己儿子吃不饱穿不暖的日子。忽地，她感觉到握着的手一直在向后拽，又转身看着那个年轻人，“——不待，你怎么了？”</p><p>　　“我、我……”时不待看到母亲回头看着自己，吓了一跳，头不由自主地低下去，“你不用牵着我的，我自己能走……”</p><p>　　玉琳满脸宠溺地看着时不待，揉了揉他的头发，柔声道：“乖，这里人这么多，你要是走丢了怎么办？”</p><p>　　时不待抬起头，一脸豁出去的表情，他鼓足勇气道：“我已经二十一了，可以照顾好自己。”</p><p>　　“别闹，二十一岁就不是孩子吗？”玉琳的表情有些不悦，拽着时不待的手握得更紧了，“我是你妈，你得听我的……走，老时，我们去二等舱。”</p><p>　　看着母亲的背影，时不待深吸一口气，想就这么甩开她的手然后逃走。可他似乎又想到了什么，整个人顿时如同泄了气的皮球一般，气势全无。只好耷拉着脑袋、闷闷不乐地被迫跟了上去。</p><p>　　就在这时，一个十多岁的少年突然从人群中冒了出来，径直撞向了走神的时不待。</p><p>　　“哎哟！”两声惊呼，少年与时不待一屁股坐在了地上。</p><p>　　少年揉了揉屁股，站起身来，扶起时不待，不好意思地道歉：“对不起啊，我没注意……”</p><p>　　“没、没事。”时不待也有些不好意思。</p><p>　　这时，回过神来的玉琳冲了上去，猛地将少年推开，骂道：“你这个没家教的小鬼！”紧接着，她又急忙检查时不待身上有没有受伤。见没什么大碍，玉琳松了一口气，但还是满脸心疼。看了看母子两人，时迁面色不善地盯着少年。</p><p>　　玉琳走向似乎有些困惑的少年，挥起手掌便甩了过去。一声脆响，少年的脸迅速红肿了起来。时不待张大了嘴，似乎是不敢相信事情会变成这样。此时，少年惊怒交加，眼里隐隐泛着泪光，没有被打的那半边脸也变得通红。</p><p>　　“我打死你个没教养的！”</p><p>　　恼怒的玉琳又一次举起了手掌。</p><p>　　不过，这次手掌没能再落下去。</p><p>　　玉琳惊疑不定地看着眼前这个抓着自己的手的年轻女人，一时间竟不知道要不要挣脱开。</p><p>　　“你在干什么？！”年轻女人皱着眉头，眼里满是厌恶地看着时迁与玉琳。她猛地甩开玉琳的手，那样子活脱脱像是在甩掉什么脏东西。年轻女人瞥了一眼时迁胸上别着的爵士勋章，讥讽道：“你们这些贵族只剩下欺负一个孩子的本事了吗？”</p><p>　　“你别多管闲事，这事和你没关系！”玉琳睁大眼睛蹬着年轻女人。</p><p>　　玉琳还想多说几句，时迁走上前将她拉到身后，摇了摇头，示意她不要说话。他两只小小的眼睛眯成一条缝，上下打量着面前的年轻女人。</p><p>　　年轻女人扎着干练的马尾辫，身上是一件白的有些晃眼的白大褂，胸牌上写明了她的身份——萨斯研究所研究员，柳茗。</p><p>　　看她一副工作时的着装，似乎是还没来得及换下便赶来登船了。</p><p>　　值得一提的是，她的眼睛有着时迁从未见过的深邃。这种目光时迁只在那些大人物眼中见到过。</p><p>　　柳茗注视着少年消失在人群中，心中对时迁的厌恶更盛了几分。她转头看着时迁，脸上的表情就仿佛是在吃饭时看到了几只死苍蝇似的。</p><p>　　年轻女人的目光让时迁十分不爽，他脸色渐渐阴沉下来。</p><p>　　呵，只是个研究员罢了。萨斯研究所又怎样？不还是个平民。</p><p>　　虽然时迁的贵族身份只是个空架子，但面对一个平民他还是很有底气的。</p><p>　　“你……”时迁本想说些什么，但他突然注意到周围的气氛有些不对，几乎所有的人都在注视着自己。时迁想起了这里不是萨斯星，他忽然感觉有些冷，紧了紧身上的西装，转身拉着玉琳，低声说：“走，去二等舱。”</p><p>　　见时迁不打算在这件事上多做纠缠，柳茗“哼”了一声便转身离去。</p><p>　　“就这么算了？”看着柳茗的背影，玉琳有些不甘心。</p><p>　　“蠢货，两千多人的船上不见一两个人不会有谁注意到的！”</p><p>　　这些粗鲁的平民可什么都做得出来！听说后方有不少行星都被那些平民给占领了！他心惊肉跳地想着。</p><p>　　时迁又想到了那些被处决的贵族的惨状，他不由自主地打了个冷颤。紧接着，他悄悄地将那个闪亮的勋章收了起来。</p><p>　　虽然时迁的声音小得微不可闻，但玉琳还是听到了，她脸色顿时变得惨白。玉琳艰难地咽了口唾沫，微微发颤的手抓住了时不待，想要离开这个可怕的地方。</p><p>　　但，时不待没有动弹。</p><p>　　玉琳愣了一下，转头看了眼还在低头傻站着的儿子，催促道：“儿子，你还愣着干嘛？走啊！”</p><p>　　“我不是你儿子……”时不待用力抽出自己的手，抬起头，露出通红的眼圈。</p><p>　　“儿子，你、你在胡说些什么？！”玉琳吓了一跳，伸手走上前，似乎是想看看时不待有没有发烧。</p><p>　　时不待后退了几步。</p><p>　　“我不是你儿子！”时不待又重复了一遍，这句话几乎是咬牙切齿地吐出来的，“一直以来，我只是你关在笼子里的鸟，没有朋友，没有自由，什么都没有！我按照你定下的规则去生活……我做的很好，可是……现在的我不就像一个行尸走肉吗？！我的每一分每一秒都被你支配着，我甚至连思考自己人生的意义的时间都没有……”</p><p>　　玉琳的眼角涌出了眼泪，道：“我、我是爱你的啊！”她抹着泪，努力解释着。</p><p>　　“臭小子！给你妈道歉！”时迁怒骂道。</p><p>　　时不待没有理会，他只是自顾自地说下去。</p><p>　　“不，那不是爱，”他摇了摇头，“那只是你们自私的占有欲。我每天生活在你们精心打造的、镶满珠宝而又布满荆棘的牢笼中！我压抑得透不过气来！我是独立的！我想要自己的生活！你们……不配做父母！我不想再见到你们！”</p><p>　　最后一句话时不待是吼出来的。他喘了口粗气，最后再看了一眼脑袋已然空白的父母，便转身遁进人群。等时迁与玉琳反应过来时，他早已如同一滴融入大海的水，消失不见。</p><p>　　时不待不停跑着，他不想停下，只想就这么一直跑下去。</p><p>　　只是在经过一个角落时，他被人猛地拽了过去。</p><p>　　很显然，时不待的希望落空了。</p><p>　　“老猫，这小子和刚才那个贵族是一伙的吧。”一个看起来约莫十七八岁、有些吊儿郎当的少年询问着身旁的同伴。</p><p>　　“对、对，就是他，我亲眼看到的……”老猫点点头，“刀哥，不是我说，刚才孟非被打得老惨了，我看着都疼。”</p><p>　　“不、不是，我……”时不待紧靠着船壁，想解释什么，但说了半天也没能吐出一句完整的话来。</p><p>　　被称作刀哥的少年轻蔑地盯着时不待，冷哼一声，道：“怂包一个……你们这些贵族欺负人时的气势去哪了？！”说完，刀哥抓住时不待的衣领，把他拉到自己面前，一字一句地说：“敢欺负我的人，就算你是贵族我也要把你揍得满地找牙！”</p><p>　　话音刚落，时不待的脸便和刀哥的拳头来了个亲密接触。时不待闷哼一声，摔倒在地，只觉得满天都是金星。</p><p>　　兴奋的刀哥还想再来上一拳，但看到时不待畏缩的眼神，还有那丝毫没有抵抗能力的样子，顿时兴致全无。他看着老猫，然后冲时不待扬了扬下巴。老猫心领神会。他点点头，走过去，扬起拳头：“我打死你个该死的‘吸血鬼’！”</p><p>　　“够了！”</p><p>　　突然，刀哥身后传来了一道清冷的声音。</p><p>　　老猫被吓了一跳，举起的拳头又匆忙放了下去。角落里的三人齐齐看去，发现是一个年轻女人。</p><p>　　是刚才的研究员？她怎么在这？</p><p>　　没有多想，时不待缓缓站了起来，他摸了摸已然肿了的脸颊。</p><p>　　嘶……好疼啊。</p><p>　　柳茗的目光自始至终都没有放在倒抽凉气、龇牙咧嘴的时不待身上，她紧盯着刀哥的双眼，道：“马上离开这儿。”</p><p>　　看刀哥欲言又止的样子似乎是想撂下几句狠话，找回场子。但刀哥每次对上柳茗的目光都会不由自主地低下头。</p><p>　　他惊讶地发现，自己竟没法直视这个看上去大不了自己几岁的女人那平静的面容。</p><p>　　刀哥气呼呼地带着同伴走了。</p><p>　　临走前，他转身恶狠狠地瞪了时不待一眼，嘴里无声地吐出一个词汇。</p><p>　　时不待看懂了。</p><p>　　懦夫！</p><p>　　</p><h1 id="第三章-永恒之夜"><a href="#第三章-永恒之夜" class="headerlink" title="第三章 永恒之夜"></a>第三章 永恒之夜</h1><p>　　柳茗没有多做停留。</p><p>　　“等等……”时不待冲着背影喊了一声。</p><p>　　柳茗停下了脚步，但没有回头。</p><p>　　“那个……刚才的事谢谢了。”</p><p>　　柳茗“哼”了一声以作回应。不过，这次她没再走了。</p><p>　　“你这个年龄难道不应该被强制入伍吗？”她问。</p><p>　　“我……”</p><p>　　还没等时不待说话，她又道：</p><p>　　“哼，我明白了……懦夫！”</p><p>　　时不待有些着急：“我……我不是……”</p><p>　　“请乘客们就近固定好自己，十秒后飞船将进行跃迁。”</p><p>　　船上的广播打断了他的辩解。</p><p>　　时不待急忙靠近船壁，死死抓着上面的金属杆。紧接着，他感觉到飞船开始发生轻微的晃动，腹部也好像被人轻轻踢了一下。</p><p>　　突然，一阵猛烈的震动猛地袭来，伴随而来的似乎还有人群的尖叫声。</p><p>　　跃迁结束了？我记得不是这样的啊。</p><p>　　时不待迷茫地看着周围那些和自己同一个表情乘客，又看了看面色有些苍白的柳茗，完全不知道发生了什么。</p><p>　　“还不快跑！”柳茗抓住还杵着发愣的时不待就往人群稀疏的地方逃去，“等会就来不及了！”</p><p>　　“发生什么事了？”虽然没弄明白情况，但时不待还是跟了上去。</p><p>　　“我们去救生舱发射区！”柳茗平静的表情出现了些许变化，语气中也多了一丝急切。</p><p>　　这时，又是一阵猛烈的震动。乘客们似乎都反应过来了，他们也开始往发射区涌去。</p><p>　　“各位乘客请注意，永恒号在跃迁途中发生事故，星船即将沉没！请各位乘客在工作人员引导下有序进入救生舱发射区。另外，不要前往D区！不要前往D区！D区已与舰体分离！谢谢合作。”</p><p>　　播音员的声音有些发颤。</p><p>　　船要沉了？</p><p>　　时不待只感觉整个世界都在离他远去，眼前的柳茗的声音越来越小……</p><p>　　啪！</p><p>　　时不待被柳茗一巴掌扇醒过来，他愣了一下，喃喃道：“不行！我、我要去找爸妈！”</p><p>　　“你疯了？！”见时不待没有反应，她又说，“他们肯定会去发射区的，到了那在找他们……好了，快走吧，再不走我就自己去了。”</p><p>　　“好、好吧。”时不待勉强点了点头。</p><p>　　没多久，两人到达了早已人满为患的发射区。</p><p>　　这时，船顶传来一阵金属撕裂的声音。柳茗面色微微一变，拉着时不待便往发射区旁几个关着的舱室跑。</p><p>　　“这里是存放备用救生舱的舱室……快，把阀门拧开！”柳茗双手抓住阀门，顺着逆时针方向使劲拧着，“这艘船两千多人，那边的救生舱不会够用的。”</p><p>　　“哦，明白！”时不待也知道此时马虎不得，他急忙搭手帮忙。一时间，阀门转动的速度加快了许多。</p><p>　　突然，一阵刺耳的声音猛地在两人耳边炸开。船壁上的金属管道竟是出现了一道裂痕。一股猛烈的白汽从裂痕中喷出，正好击中了毫无防备的柳茗的双腿。</p><p>　　“啊！”柳茗发出一声惨叫。</p><p>　　时不待吃了一惊，匆忙将倒在地上的柳茗拉离还在“呲呲”向外喷洒的白汽。他看了看柳茗的双腿，发现上面已经结起了一层薄冰。柳茗脸色变得惨白，额头上沁出一层细密的冷汗。她发紫的嘴唇微微抖着，用那细若游丝的声音说：“别、别管我，去开门！”</p><p>　　“好！”时不待慌张地点着头，“你等着。”</p><p>　　时不待没让柳茗等太久，他打开舱门后便急忙背起柳茗跑进了舱室。舱室不算太大，几艘胶囊状的救生艇停放在这。救生舱尾部是几个小型发动机的喷口，正在灯光下泛着闪亮的银光。</p><p>　　还真是……有些沉啊。</p><p>　　时不待“呼哧呼哧”地喘着粗气，身上的柳茗还在瑟瑟发抖，他知道现在不是问什么关于“你为什么那么重”这种废话的时候。</p><p>　　忽地，时不待眼睁睁地看着一个工具箱在他眼前飘了起来。他看了看周围，许多没有固定的物品也在舱室里四处乱飘——时不待也飘了起来。</p><p>　　人工重力系统损坏了！</p><p>　　时不待抓紧背上的柳茗，轻轻在地上蹬了一下，整个人便如同离弦之箭般向救生舱飞去。舱室内的景象不停地在眼中闪过，没一会儿他便来到救生艇的舱门跟前。眼疾手快的时不待趁机抓住上面的横杆，身体便稳稳停了下来。他轻车熟路地打开舱门，接着柳茗被他轻轻推了进去。</p><p>　　时不待瞥了一眼船壁上的气压表，上面的数值正在疯狂降低。</p><p>　　时间不多了。</p><p>　　时不待转身就要离开，一只手拽住了他的衣摆。</p><p>　　“别……别去，你会死的！”柳茗那有些虚弱的声音在身后响起。</p><p>　　“可……可是……”</p><p>　　远处隐隐传来了爆炸声。</p><p>　　“别可是了！进来！”话音刚落，时不待就被拽了进去。</p><p>　　紧接着，舱门关上了。</p><p>　　时不待进来后，柳茗便慢慢向驾驶座飘去。</p><p>　　时不待透过舷窗看了看外面，脸上满是遮掩不住的急躁。他不停地唉声叹气，露出十分纠结的表情。最后，他长长地叹了口气。</p><p>　　算了，就这样吧。他想着。</p><p>　　时不待看了看驾驶座上的柳茗，担忧地问：“你的腿没事吧？”他想了想，打开了船壁上的储物柜。</p><p>　　里面的药品栏只有一瓶孤零零的急救凝胶，其他的药品固定位上空空如也。他心下了然，战争时期，药品总是很金贵的……</p><p>　　“暂时……暂时还死不了。”柳茗轻轻地摆了摆手，“先离开这再处理……反正也没药，坏不坏死什么的随它去……你快坐好。”</p><p>　　说完，救生舱轻轻抖动了一下。时不待清楚，他们已经进入星船的过渡舱了。他挑了个最近的位置，坐好，系上了安全带。</p><p>　　突然，救生舱猛地晃了晃，一阵压迫感将时不待紧紧压在椅子上。下一秒，他向舷窗外看去，外面已然是一片深邃的太空了。</p><p>　　这时，舷窗外出现了那艘他们刚刚逃出来的庞然大物。此时，这艘巨轮正在缓缓崩解着。大量的金属残骸不断散落在周围，数量庞大的救生舱穿行其间。突然，星船的尾部变得通红，而且亮度还在不断上升……</p><p>　　那是动力舱。</p><p>　　正当时不待稍稍松了口气时，救生舱顶部突然凹下来了一小块。与此同时，舱内猛地发生了剧烈的震动。突如其来的变故让刚解开安全带的时不待吓了一跳。正当他想查看发生了什么时，舱内突然被浓郁的黑暗所笼罩。</p><p>　　时不待有些怀疑自己的眼睛是不是出了什么问题，此时的舱内伸手不见五指，他从未想过自己会在救生舱里见到这样的黑暗。</p><p>　　除此之外，原本充斥在救生舱里的轻微的“嗡嗡”声此时也消失不见。如果不是柳茗那传来了“窸窸窣窣”——她好像在摸索着什么——的声音，他甚至还会觉得自己连听觉也丧失了。</p><p>　　时不待开始感觉有些喘不上气来，身上也有些发冷。</p><p>　　“快，穿上！”</p><p>　　“咔啪”一声，柳茗那亮了起来。</p><p>　　发出亮光的是她手里的一根形似香烟的长条状物体。时不待知道，那是每个飞船都会配备的紧急照明用具。只要掰断发光液里泡着的装着化学药剂的玻璃棒，就能发出冷光。</p><p>　　此时，柳茗一边给时不待递着什么，一边拿着一个长的像是灭火器一样的东西。她拔开保险，接着按下那个“灭火器”的开关，喷口立即往外“呼呼”喷着白汽。</p><p>　　借着柳茗手里那发出幽幽绿光的冷光源，眼尖的时不待立刻注意到了“灭火器”上还有一个气压表，上面的指针现在正缓缓滑向绿色区域。</p><p>　　“这些氧气撑不了多久，你最好快点换上。”</p><p>　　时不待接过柳茗递给他的东西——那是一套宇航服。虽然这个型号的宇航服不算是最先进的，但相较于人类宇航黎明时代的宇航服，还是相当轻便了。一件薄薄的连身服，一个头盔以及一个小巧的生命维持装置——这玩意只有一本杂志那么厚——构成了这件宇航服。</p><p>　　时不待喘了几口粗气，呼吸产生的白色水汽在舱内飘散。感受着舱内有些刺骨的寒意，他不禁打了个冷颤。</p><p>　　当时不待还在往宇航服里钻时，柳茗已经安上了头盔。</p><p>　　“你怎么笨手笨脚的！”柳茗没好气地瞪着他，“你是想被憋死吗？”</p><p>　　“好了好了。”时不待拧上最后一个固定栓，打开生命维持装置。装置开始加压，宇航服微微鼓了起来。喘不上气的感觉消失了，宇航服里也渐渐暖和起来。他深深的吸了一口气。</p><p>　　天啊，现在才知道空气原来这么好闻。</p><p>　　“供能系统关闭了，需要手动重启。”宇航服的通信装置中响起了柳茗的声音。她的话向来简洁，时不待没指望能得到关于系统关闭的原因。</p><p>　　他抬头看了眼顶部的凹陷，心想：大概是撞到什么了吧。</p><p>　　“帮我开门。”她指了指后舱。</p><p>　　时不待应了一声。两人摸索着，飘了过去。舱门原本是自动开启的，现在手动拉开有些费劲。好在，最后时不待还是打开了舱门。柳茗进去没多久，救生舱内便亮了起来。</p><p>　　时不待微微眯了眯眼。</p><p>　　“该处理下一件事了。”这是柳茗出来时说的第一句话。</p><p>　　她摘下头盔，打开了电脑，开始计算些什么。</p><p>　　“你在干嘛？”在旁边飘着的时不待好奇地看着那些数字。</p><p>　　柳茗没有回答他的问题，她只是默默地打开了救生舱前端的舷窗。</p><p>　　时不待顺手把摘下的头盔放在一旁，然后疑惑地透过舷窗看向外面。紧接着，他的脸开始急速发生变化。</p><p>　　只见他的嘴张得越来越大，简直能塞进一枚鸡蛋——柳茗后来是这么和他说的。与此同时，时不待的脸色霎时变得惨白，好像刚在面缸里打过滚似的。不仅如此，他那毫无血色的脸隐隐还有转绿的趋势……</p><p>　　时不待喉咙动了动，似乎想要说些什么，但他没能找到合适的词汇来表达此刻的心情。</p><p>　　他有点不敢相信自己看到的东西——一颗巨大的褐色行星在向他们迎面而来！</p><p>　　时不待发誓，这是他所见过的最可怕的画面，没有之一！</p><p>　　当然，“向他们迎面而来”只是时不待的错觉。事实上，是他们正在向那颗行星坠去。</p><p>　　“燃料有限，我们只有一次机会。”柳茗打开了救生舱的手动控制系统。</p><p>　　时不待注意到她握着操作杆的手有些发抖。</p><p>　　时不待坐在椅子上，迟疑了一会儿，问道：“永恒号从……从超空间跌落之后就处在那颗行星的引力范围内了吗？”</p><p>　　柳茗缓缓点了点头。</p><p>　　“开始入轨……”柳茗深吸了一口气，像是给自己打气道，“不要怕，不要怕。”</p><p>　　救生舱晃了晃，加速产生的压力将两人死死压在椅子上。见气氛有些凝重，时不待想说点什么缓解一下，他有些费力地开口：“你……你以前开过飞船？”</p><p>　　“没有。”柳茗毫不迟疑地答道。</p><p>　　时不待好不容易恢复的脸色又刷地一下变白了。</p><p>　　他的目光移向舷窗，现在已经能看到许多失去了动力的救生舱坠入大气层了。那显然是一颗无人星球，下去了就再也没机会上来了。</p><p>　　柳茗死死盯着仪表盘上那些飞速变化的数值，生怕自己错过了最好的入轨时机。这时，一组熟悉的数据出现在她眼中。</p><p>　　操作杆上的手握得更紧了。</p><p>　　听天由命吧。她想。</p><p>　　一秒，两秒……不知过了多久，也许过了几秒，又或者是几分钟。心跳得飞快的时不待睁开了紧紧闭着的眼睛，舷窗外还是那颗行星，不过它没有再继续变大了。</p><p>　　入轨成功了。</p><p>　　</p><h1 id="第四章-撕破黑暗的光"><a href="#第四章-撕破黑暗的光" class="headerlink" title="第四章 撕破黑暗的光"></a>第四章 撕破黑暗的光</h1><p>　　暂时安全后，柳茗提出了清点物资的要求。当然，最后柳茗的希望没能实现。时不待态度颇为强硬地拒绝了她。</p><p>　　“在那之前，还有一件更重要的事要做。”——这是他的原话。</p><p>　　时不待让柳茗把宇航服脱了，接着掏出不知在哪找到的剪刀，剪掉了她的裤脚。时不待看着小腿上那让人心惊的创伤，止不住地倒吸凉气，然后又沉默下去。</p><p>　　柳茗倒是没什么多余的表示，她接过时不待手中的急救凝胶，然后一股脑地喷了上去。看着淡蓝色的凝胶完全包裹住伤口，她便不再理会。</p><p>　　“飞船冷却液造成的急性冻伤，拖了这么久，已经彻底坏死了。只能做克隆手术再换一双了。”时不待想了想，又补充了一句，“如果我们还能活着回去的话。”</p><p>　　对于时不待所说的，柳茗表现得漠不关心，仿佛双腿坏死的人不是她一般。她放好急救凝胶，平静道：“去清点物资。”说完，便慢慢向驾驶座飘去。</p><p>　　“奇怪的家伙。”时不待小声嘟囔着。</p><p>　　最后，时不待在储物柜里找到了两个印着“星源求生”字样的求生包。</p><p>　　求生包是夜阑共和国的星源集团出品的深空求生套装，胜在价格低廉、可靠，是大多数救生舱物资配置的首选。</p><p>　　求生包的外壳是由复合材料制作的，散发着一股浓浓的廉价气息。他打开两个求生包，把里面的东西都拿出来看了看。东西不多——一些压缩食品，几大瓶水，几根宇航服用固氧棒，几个电池包，一台小型水循环器以及一台3D通用物质打印机。</p><p>　　时不待又在储物柜里摸索了一会儿，然后掏出了一个小盒子和一个高压气瓶。盒子里面放着几根圆棒，都是一些铜、铁之类的常见金属，外加两根碳棒。这些都是3D通用物质打印机工作时所需要的原材料。</p><p>　　时不待不甘心地又翻了翻，企图再找到些什么。最后他甚至还把脑袋伸进了储物柜。当然，他什么也没有发现。最后时不待不得不承认这艘救生舱上就那么点东西了。</p><p>　　时不待算了算，如果他们省着点的话，食物大概能撑个十五天。</p><p>　　这不是什么好消息。</p><p>　　一路苦着脸，时不待飘到了驾驶座。此时，柳茗已经展开了救生舱外壁的恒星能电池板与人工叶。前者为救生舱提供电能，后者是他们能够呼吸的根本。</p><p>　　“暂时还不能确定这是哪。已知的是，这片星域是无人区，没有中转站，所以可以肯定的是没有经过这的常规航线。这个恒星系的恒星是一颗黄矮星，天体活动有些频繁。这只有一颗固态行星……就是捕获了我们的这颗，它有一颗天然卫星，不大，按照公式计算它大概每六小时会经过我们一次。”柳茗坐在电脑前，头也不抬地说，“还有……”她忽地抬起头，看了时不待一眼，迟疑了一下，开口道：“永恒号刚刚完全坠落了……还有，这附近只剩下我们这艘救生舱了。”</p><p>　　虽然心里早已有了准备，但猛地听到这个消息，时不待还是感觉到了内心传来的刺痛感。眼睛忽地有些朦胧，他伸手抹了抹，别过脸，不想让人看到自己这幅模样。</p><p>　　“我……我知道了……”他的声音有些沙哑。</p><p>　　柳茗沉默了一会儿，道：“想哭就哭吧。”</p><p>　　时不待摇了摇头，在灯光照耀下，脸色显得有些灰白。</p><p>　　“我真是该死啊，最后也没能见他们一面。”时不待轻声说着，“我真傻，真的……只是件不大的事，最后却闹的不欢而散，明明只用坐下来好好谈谈就能解决的问题，却被我自己亲手毁了。”</p><p>　　柳茗没有打断他，只是坐在那安静地听着。</p><p>　　“不管怎么说，他们都是我的父母啊……无论发生了什么都改变不了这一点。他们……他们只是太在意我了。”时不待眼中的光彩黯淡下去，“我明白得太晚了。我想向他们道歉……可……可却再也没有机会了……”</p><p>　　“他们会原谅你的，”柳茗看着他，“现在你只需要好好活下去……先去睡一会儿吧。”</p><p>　　时不待垂头丧气，宛若一只斗败的公鸡。他点点头，移开船壁上的挡板，钻进了狭小的睡眠舱。</p><p>　　不知睡了多久，时不待醒了过来。他睁开眼，看见了电脑前的柳茗。时不待眯了眯眼，发现屏幕上有一行数字。</p><p>　　那是一个倒计时，还剩下351小时12分47秒。</p><p>　　想必她在自己睡着的这段时间，做了很多事。</p><p>　　时不待从睡眠舱中爬了出来。</p><p>　　“醒了？”她头也不回地问。</p><p>　　“嗯。”</p><p>　　时不待把挡板合上。</p><p>　　“联系不上外界，我们也只是比其他人多苟活了一段时间。”时不待微不可查地叹了口气，他看向舷窗外，“救生舱通讯范围不够……而且，我们也不知道这是哪，猎户旋臂符合这个恒星系条件的地方太多了。”</p><p>　　此时，他只觉得这个救生舱就像是一个铁棺材一样，将他们与生的希望一齐埋葬在这个冰冷寂静的宇宙中。</p><p>　　宇宙真黑啊。他想。</p><p>　　“总会有希望的。”柳茗面对屏幕，浏览着外景摄像机拍摄的照片，语气平静，“不是吗？”</p><p>　　“真……真的吗？。”时不待眼神充满怀疑地看着柳茗，似乎是有些不敢相信，一贯理性的她会相信这种几率小到几乎可以忽略不计的东西。</p><p>　　“当然不是……”柳茗倒是诚实地承认了，“我只是看你一直摆着张苦瓜脸，安慰一下而已。”</p><p>　　时不待噎了一下，他仔细斟酌着词汇：“那……那多谢了……”</p><p>　　一阵漫长而尴尬的沉默。当然，感到尴尬的也只有时不待一个人罢了。这期间，他到后舱简单处理了一下个人卫生，然后吃了点东西，便回到了驾驶座。</p><p>　　“你不吃点吗？”</p><p>　　也许是只剩下他们两个人的原因，时不待今天的话显得格外多。</p><p>　　“吃过了。”</p><p>　　时不待抬起头，死死盯着救生舱顶部，好像想从上面看出朵花来。</p><p>　　“星船怎么会出事？”他问。</p><p>　　“能让星船发生这么大规模崩解的无非两种原因，”柳茗顿了顿，“天文灾害或者人为事故……我是指武器。”</p><p>　　“那……”</p><p>　　“那条航线没有发生天文灾害的前例，开发之初就都避开了。”</p><p>　　“你是说……”时不待悚然一惊，只感觉身上沁出一层细密的冷汗。</p><p>　　柳茗侧过头，瞥了他一眼，道：“我什么也没说。”</p><p>　　供能装置在“嗡嗡”响着。</p><p>　　“你想家吗？”时不待又开始盯着头顶的花了。</p><p>　　“家？我没有家，我本就是战争孤儿。”柳茗的语气仿佛是在陈述一件与她毫不相干的事情。</p><p>　　时不待愣了一下，他没想到会得到这个答案。</p><p>　　“不好意思……”他说。</p><p>　　“没什么不好意思的，这原本就是事实。”</p><p>　　“你平时应该大部分时间都在做研究吧……不喜欢和其他人来往。”</p><p>　　“嗯。我不喜欢把时间花在那些无关紧要的事上。”</p><p>　　时不待终于不再盯着头顶。</p><p>　　“冒昧地问一下……”他微微顿了一下，“你们的研究所没有专门的星船带你们去后方吗？”</p><p>　　柳茗摇摇头，道：“星船都被征用了……他们告诉我，研究所只有一个前往后方的名额……”</p><p>　　时不待猜她口中的“他们”指的应该是其他的研究员。</p><p>　　“他们原本想把名额给我，不过我拒绝了。之后……”</p><p>　　“之后在星船要出发前，他们又对你说要抽签决定名额的归属，最后你抽到了。”时不待替她补充了后面的话。</p><p>　　柳茗转过头，颇为惊讶地看着他，不过她没多问。</p><p>　　这是时不待第一次在她的脸上看到惊讶的表情。</p><p>　　时不待没有要解释什么的意思。</p><p>　　“你平时做事应该都是理性思考的结果吧。去尝试用心感受这个世界吧。”时不待轻声道，“那是活着的感觉……”</p><p>　　柳茗没有说话，只是默默地继续翻看着照片。</p><p>　　“你笑起来一定很好看。”时不待没头没脑地来了这么一句。</p><p>　　柳茗的手微微一颤，脑海中那个人的脸渐渐与身后的时不待的脸重合起来。</p><p>　　那个人曾经也对自己这么说过。</p><p>　　不过，自从在阵亡名单上看到那个名字后，自己就再也没笑过，一次也没有……</p><p>　　笑吗？</p><p>　　柳茗神情有些恍惚。</p><p>　　“我想明白了，”时不待还在那絮絮叨叨地说着，“既然只剩那么点时间，就更应该开心起来才对，你说是吧。”</p><p>　　柳茗回过神来，脸上又恢复了平静。她道：“你还挺乐观的。”</p><p>　　“我就当你这是在夸我了。”时不待一脸无所谓的样子。忽地，他盯着电脑屏幕，瞪大了双眼，“等等……”</p><p>　　“什么？”柳茗愣了一下。</p><p>　　时不待手微微颤抖着，指了指一张照片角落里的恒星，然后激动地大喊：“PL34-G8！”</p><p>　　他上前又看了看后面几张照片，接着整个人便如同魔怔了一般不停地念叨着一串数字。</p><p>　　“没错，就是这样……”他喃喃道。</p><p>　　柳茗听懂了。</p><p>　　那是几颗坐标参照物恒星的编号。</p><p>　　“现在看来，我们是在伊洛星区边缘……”他冷静下来，“这里的坐标是……”</p><p>　　“4538b，-758l，2417z！”柳茗飞快地算了出来，她直视着时不待的双眼，眼中闪着光，“这里有一座通讯基站！”</p><p>　　</p><h1 id="第五章-晚安，不平凡的你"><a href="#第五章-晚安，不平凡的你" class="headerlink" title="第五章 晚安，不平凡的你"></a>第五章 晚安，不平凡的你</h1><p>　　时不待与柳茗是轮流睡的。当时不待醒来时，发现柳茗用3D打印机做了个怪模怪样的东西。</p><p>　　几个小时前，时不待曾试着搜索过那座通讯基站的信号源，他失败了——搜索列表上空空如也。这无非两个原因——</p><p>　　“要么这艘救生舱没有那座通讯基站的通讯码，要么就是它已经损坏了。”当时漫不经心的柳茗是这么说的。</p><p>　　听到“损坏”二字时时不待打了个激灵，既然损坏了那想必会有检修人员来这里维修通讯基站。</p><p>　　“这种偏僻的地方通常一年半载都不会有人来……再者说，因为战争的原因他们恐怕也顾不上这边了吧。 ”柳茗无情地击碎了他的幻想。</p><p>　　时不待回忆着。</p><p>　　此时，他正好奇地看着柳茗手里的装置。</p><p>　　“这是……气体推进器？”他看见了装置上的高压气瓶。</p><p>　　柳茗点点头，道：“如果不希望通讯基站的信号被削弱的话，他们应该会把基站设在那颗几乎没有大气的卫星上。”</p><p>　　“可我们没在上面发现过人造物……”</p><p>　　“因为安全问题，通讯基站通常都是会隐藏起来的……”</p><p>　　时不待瞬间便明白了柳茗说的“安全问题”是指什么。</p><p>　　那是活跃于各个星域的劫掠船，从星际大开拓时代伊始便存在了。虽然各国政府都拒不承认，但劫掠船为什么总是如此猖獗的原因大家都心知肚明。</p><p>　　时不待沉默了一会儿，道：“所以……是需要出舱寻找通讯基站吗？”</p><p>　　“是。”柳茗给出了肯定的答案。</p><p>　　他点了点头，说：“我知道了。”</p><p>　　柳茗开始给时不待讲解手中的气体推进器。</p><p>　　“这是方向控制，这是压力阀……”</p><p>　　“这个……是电池槽吧。”时不待指着一个孔洞，接着双手比画着，“看上去不像能把电池包塞进去的样子。”说完，他像是想到了什么，沉默下去，然后试探着问了句：“这……应该不是放供能装置那个高能电池的吧？”</p><p>　　“你需要在八小时内回来。”柳茗没有直接回答他的问题，但意思已经很明确了。</p><p>　　“你这是在自杀！”不知怎的，时不待觉得自己有些生气。</p><p>　　“这是理性思考后得到的结果……虽然恒星能转换效率不高，但储存的电能足够支持救生舱低耗能运行八小时。要么用这个方案，要么一起等死。”——时不待没能从她那张过分平静的脸上看出些什么。</p><p>　　“好吧，听你的。”最后，时不待退让了。</p><p>　　“卫星一会儿就会经过救生舱……拿着这个。”柳茗把一块电子表塞进时不待手里，上面是一个六小时的倒计时，“别错过了回来的时间。”</p><p>　　几分钟后，整装待发的时不待飘在过渡舱前，柳茗正替他装上推进器。</p><p>　　“……那里引力不会很大，你开着推进器时注意些别蹦出去了。还有，那上面有地质活动的痕迹，你小心些。其他的事项，学校里的宇航基础课上都有学过吧？”</p><p>　　柳茗不厌其烦地对时不待强调着需要注意的事情。</p><p>　　“有。”时不待点了点头，他莫名地觉得柳茗好像那里不太一样了。</p><p>　　真是奇怪。</p><p>　　时不待出发了。</p><p>　　时不待通过过渡舱，进入了太空。他很快便发现了那颗承载着希望的卫星。</p><p>　　通过调整面罩摄影模块的视距，他看的很清楚。</p><p>　　那是一颗赤红色的星球，起伏不定的地表上卧着一条蜿蜒曲折的裂缝。</p><p>　　没有多想，时不待操控着推进器默默地向目的地飞去。</p><p>　　孤寂的背影渐行渐远，推进器在他身后留下了长长的白色尾迹。</p><p>　　……</p><p>　　“我回来了。”</p><p>　　时不待爬出过渡舱，摘下了头盔，同时眼睛习惯性的看向电脑上的倒计时。</p><p>　　还剩82小时41分06秒，时间已经不多了。</p><p>　　此时，距时不待第一次出舱已经过去了大约251个小时，这其间时不待共前往了那颗卫星十五次，现在那的大部分地方都被他探索过了。</p><p>　　时不待飘去后舱，把高能电池装了回去，顺带给空了的气瓶补充气体。</p><p>　　“先休息会儿吧。”柳茗放下手中的笔与小笔记。</p><p>　　回到驾驶座的时不待应了一声，道：“我先记录刚才的行程。”说着，他看了眼柳茗手中的笔记，不是很明白她为什么喜欢这种古老的记录方式。</p><p>　　最近一直看到她在写些什么呢。他想着。她会写些什么呢？他问自己。</p><p>　　记录好行程后，疲倦的时不待很快便在睡眠舱中睡着了。</p><p>　　几个小时后，时不待悠悠地醒了过来。然后，他像往常一样，一口一口吃着工作前的一餐。</p><p>　　食物已经不多，高能电池也快没电了。时不待有些发愁。</p><p>　　那句古语怎么说来着……是了，弹尽粮绝。</p><p>　　吃完后没多久，愁眉苦脸的时不待出现在了卫星上。他环顾着荒凉的四周，发现这到处是隆起的小丘。这附近是最后一块未探索区域了，他有些紧张。</p><p>　　时不待一蹦一蹦地往前跳着，动作已很是熟练。突然，他身旁突然扬起了尘埃，碎石糊了他一面罩。时不待迷茫地看着事发地，只见平整的地面出现了一小块凹陷，一块石头安静地躺在凹陷中间。</p><p>　　这时，不远处也飘起了碎石。</p><p>　　时不待有些反应过来了。他望向头顶，顿时头皮一炸——数量不少的小陨石正向他所在的位置袭来。</p><p>　　……</p><p>　　当柳茗察觉到救生舱出现了凹陷时，她第一时间套上了宇航服。果不其然，救生舱没坚持多久便漆黑一片。一切都如同上一次意外一般，不过，这次柳茗没有光源了。柳茗没有在意这些，她摸索着飘到了后舱舱门前，试图打开那道紧紧关闭的舱门。</p><p>　　……</p><p>　　时不待醒来时胸口仍有些隐隐发痛，看了看电子表，还有约一个小时的时间。他检查着身上的装备，在发现推进器的方向控制装置损毁后，之前的记忆如潮水般涌入脑海。</p><p>　　一块飞起的碎石击中了他的胸口，然后便两眼一黑……</p><p>　　这是他晕倒前的最后一个画面。</p><p>　　时不待还算幸运，至少他的宇航服没有被击穿，否则他可能会给未来来到这的史学家造成一些困扰……如果他的遗骸没被抛出卫星的引力范围的话。</p><p>　　真是麻烦啊。他心中哀叹着。</p><p>　　时不待的手伸向了工具包，打算更换推进器的方向控制装置。</p><p>　　这时，小丘似乎隆起了一些。</p><p>　　时不待的手停下了。</p><p>　　小丘中透出了红色的亮光。</p><p>　　时不待的脸色顿时变得难看起来。</p><p>　　这……就是古人说的流年不利吗？</p><p>　　卫星的地表上又出现了时不待蹦跳的身影。不过，这次他没空去寻找什么可疑的人造物了——此时小丘中涌出的大片熔浆正追逐着这个可怜的家伙。</p><p>　　没多久，疯狂逃命的时不待停了下来。当然，这并不是因为他突然觉得自己能硬抗那看上去就不太友善的熔浆，而是遇上了点小麻烦——那条在太空中观察到的裂缝。</p><p>　　时不待只花了一秒便理清了自己所面临的困境。</p><p>　　身前横跨十一二米的裂缝，因为方向控制装置损毁而暂时无法使用的推进器——时不待认为如果他傻乎乎地启动那玩意的话自己指不定会窜到哪去——嗯，这麻烦还真是小呢。</p><p>　　温度感应器正在发出尖叫。</p><p>　　时不待知道不能再想了。他咬咬牙，蹦跶到裂缝跟前。一狠心，双腿猛地一蹬，整个人便“哇哇”怪叫着飞了出去。紧接着，时不待狠狠地砸在了裂缝边缘，然后便向裂缝下坠去。</p><p>　　慌乱中，时不待双手死死攀住裂缝边缘。他双手发力，拼命爬了上去。时不待顺势躺在地上，喘着粗气。他看向裂缝另一边，炙热的熔浆已然向裂缝中缓缓倾泻。</p><p>　　他松了口气，心想：应该彻底安全了吧。</p><p>　　正想着，时不待坐了起来。忽然，他愣了一下，匆忙拂去地上的尘土，一扇小小的圆形金属门出现在他眼中。此刻，上面方方正正的猎户旋臂通用语让他感到分外亲切：</p><p>　　通讯基站GL-6。</p><p>　　……</p><p>　　一记炸雷在如墨的天空中响起。</p><p>　　一场倾盆大雨如期而至。</p><p>　　柳茗站在屋檐下，泪眼朦胧地注视着眼前那张雨衣下模糊不清的脸。透过薄薄的雨衣，能看到一枚帝国军章挂在胸前。</p><p>　　“我走了。”这是一道很温和的年轻男人的声音。</p><p>　　“别……别走……”柳茗抽泣着。</p><p>　　年轻人蹲了下来，轻轻拭去她脸上的泪滴。黑色的太空军军装从雨衣中露出了衣摆。</p><p>　　柳茗依旧看不清那张脸。</p><p>　　“听话，战事结束后我会来福利院看你的，相信我。”</p><p>　　“一……一定……要去吗？”</p><p>　　年轻人沉默了一会儿，道：“这是我的宿命，每个克隆人那短短三十五年的生命都是为战争服务的。”</p><p>　　风更大了。</p><p>　　“你以后每天都要开心地生活下去，无论发生什么。”年轻人站了起来，揉了揉柳茗的脑袋，“你笑起来一定很好看……”柳茗抬起头看着那个高大的身影，认真地说：“我……我会的……你也要答应我，活着回来，我们拉勾。”</p><p>　　年轻人似乎笑了笑，伸出了手。</p><p>　　“好，我答应你，拉勾。”</p><p>　　两只各异的手在空中相遇。</p><p>　　年轻人消失在了雨中。</p><p>　　周围的一切在飞速消退。</p><p>　　一个胖胖的男人出现在柳茗眼前，他肩上的军衔表明了他的身份。</p><p>　　“小姑娘，这是他托我转交给你的，收好了。”胖男人拿出一个褐色的木盒，递给了柳茗。</p><p>　　柳茗面无表情地接过木盒，打开，木然地看了一眼。</p><p>　　里面是一本笔记和一支笔。</p><p>　　“……本来他们的船是可以逃掉的，只是他们说要给大部队后撤争取时间……他们已经没有弹药了，但他们最后还是撞沉了一艘船……他们……他们都是条汉子……”</p><p>　　柳茗依旧面无表情地站在那。</p><p>　　忽然，絮絮叨叨的胖男人注意到了柳茗的样子。</p><p>　　他突然有些不知所措，急忙道：“不过……不过他们的战列舰是在一瞬间就被蒸发了，我可以保证他死前没有感受到一丝痛苦……”</p><p>　　柳茗没有理会他的解释。</p><p>　　“明明答应我了的……”她眼角忽地湿润，喃喃道，“骗子！”</p><p>　　泪珠砸在了地板上。</p><p>　　胖男人的声音越来越小，一切都沉入了无边的黑暗中。</p><p>　　……</p><p>　　时不待本想直接进入通讯基站，可当他发现时间所剩无几时，只好匆匆修好推进器，离开了卫星。</p><p>　　大约十几分钟后，一片狼藉的救生舱外表面出现在他眼前。</p><p>　　时不待的心脏因紧张而剧烈跳动着，他拉开舱门，进入了一片漆黑的过渡舱。</p><p>　　舱门被关上，时不待开始专心对付那道通往救生舱内部的舱门。在他的努力下，紧闭的舱门被拉开一道缝隙，而后钻进了救生舱内部。</p><p>　　他尝试着与柳茗链接通信，却发现没有回应。时不待有些慌张，他摸索着，打开后舱门，高能电池被塞了回去。</p><p>　　灯亮了。</p><p>　　心急如焚的时不待发现了蜷缩在角落的柳茗，他飘了过去。正当他想查看情况时，柳茗却突然扑进了他的怀里。他张开双手，不知所措地看着裹着宇航服的柳茗。思索了一会儿，他取下了柳茗的头盔，救生舱里响起了轻轻的抽泣声，其中夹杂着断断续续的“别走”的低声呢喃。</p><p>　　时不待沉默下来，涌到嘴边的话最后化为一声叹息。他看着眼前这个如同小女孩一般的柳茗，轻轻抱了抱。</p><p>　　“没有人会离开你，相信我。”他隐隐猜到了什么，“‘从前所失去的今后还会回来的’（注：出自猎户悬臂圣灵教经典《圣灵启示录》第三十二章）……”</p><p>　　这才是真正的你吗？你到底有着怎样的过去？</p><p>　　良久，柳茗在时不待怀中沉沉睡去。</p><p>　　时不待趁柳茗睡着后离开救生舱，维修受损的恒星能电池板与人工叶，只是其中一部分损坏太过严重，没法再继续使用了。</p><p>　　回到救生舱里时，柳茗已经醒了。平静的表情又回到了她脸上，与先前柔弱的样子判若两人。柳茗一切如常，仿佛之前的一切都没有发生过似的。时不待也默契地没有提起，他总是莫名其妙地担心会被柳茗“杀人灭口”。</p><p>　　我怎么会这么想，真是个傻瓜。他自嘲地想。</p><p>　　“我找到通讯基站了。”他说。</p><p>　　“嗯。”</p><p>　　“也许我们很快就能回家了。”时不待有些兴奋。他看着柳茗，发现后者嘴角微微上扬，她似乎在……笑？时不待眨了眨眼，又仔细看去，发现还是那个让他习以为常的平静表情。</p><p>　　嗯，大概是太激动，看错了。</p><p>　　……</p><p>　　卫星与救生舱再次相遇之时，时不待又一次踏上了这片荒凉的土地。</p><p>　　时不待蹲在地上，重重地按了按金属门上的一个按钮，一小块挡板立马弹开，露出了里面的显示屏与键盘。</p><p>　　时不待想了想，输入了一串编码——那是他的公民码。在他点击确认的那一刻，金属门从中分为两半，缓缓向两侧移去。</p><p>　　向下的通道中发出淡淡的蓝光，时不待伸长脖子，目光向下探去。通道并不深，大致三四米的样子。他跳了下去。</p><p>　　下面的空间相当狭小，一个被电线与各种电子管环绕的机器几乎占满了这地方三分之二的位置。说实话，时不待从前从未进过通讯基站内部，学校组织的唯一一次观摩，他因为睡过头了而没能参加。</p><p>　　当然，这并不妨碍他认出那个机器是通信基站的核心装置。</p><p>　　此时，机器已经停止了运行，而且看上去已经有一段时间没启动过了。</p><p>　　时不待按照柳茗告诉自己的流程给这台机器检查了一遍，接着从这里的储物柜中取出了备用零部件，更换掉机器上那些因到达使用期限而报废的零件。这项工作花了他不少时间——完成后，已经过去了两个多小时。</p><p>　　他瞥了眼墙上的铭牌上的通讯码，默默记下，深吸一口气，启动了那台有些年头的机器。</p><p>　　指示灯亮了。</p><p>　　……</p><p>　　返回救生舱的途中，时不待的内心充满了喜悦，脸上洋溢着几乎要溢出来的灿烂笑容。以至于那颗让他们经历不少磨难的行星，此时也显得可爱起来。</p><p>　　很快就能离开这个鬼地方了！他内心欢呼着，回家万岁！</p><p>　　近了，更近了。</p><p>　　时不待已经能看到救生舱上一个又一个凹痕。</p><p>　　这时，时不待注意到面罩上的某个数值跳动了一下。</p><p>　　数值在升高。</p><p>　　时不待的笑容消退了。</p><p>　　数值升高的速度变得飞快，原本的绿色此时换上了红装。</p><p>　　加快了速度的时不待稳稳停在舱门外。</p><p>　　宇航服的警报器发出了刺耳的尖叫。</p><p>　　时不待惨白的脸上露出惨笑。</p><p>　　现在不能开门……一会儿就好……只要一会儿……就好……</p><p>　　……</p><p>　　时不待从过渡舱中爬了出来，看了看电子表，时间已经过去了二十多分钟。</p><p>　　看见他，柳茗放下手中的笔记，迎了上去，时不待像躲着什么似的向后飘着。</p><p>　　他指了指后舱，道：“我去放电池。”</p><p>　　柳茗点点头。</p><p>　　她觉得时不待有些古怪。</p><p>　　从后舱出来的时不待径直飘向电脑，输入通讯码，链接通讯信号。</p><p>　　“你有些不对劲。”</p><p>　　说完，不顾时不待的挣扎，柳茗取下了他的头盔。</p><p>　　只见时不待惨白的脸上渗着豆大的汗珠，嘴唇上显出不正常的干裂，鼻腔连接着两根废物处理软管，透过软管，能隐隐看见里面流动着的鲜红。</p><p>　　柳茗沉默下来，脸上再也维持不了平静，取代它的是深深的无助。</p><p>　　面对柳茗，时不待目光躲闪着，不敢直视。他的目光从柳茗充满绝望的脸上移开，却不知道该把眼睛放在哪里。</p><p>　　“你为什么不早说？！”她带着哭腔。</p><p>　　“没用办法，不是吗？……最后还是让你担心了。”时不待惨笑道。</p><p>　　忽地，他感到一阵虚弱，顺势倒在身旁的椅子上。时不待喘着粗气，轻声道：“求救的事还是得你来了……我……我好累……”时不待只感觉眼皮像灌了铅一般沉重，强烈的虚弱感让他昏昏欲睡。</p><p>　　柳茗紧紧抱住了他，眼中隐隐闪着泪光。</p><p>　　为什么……为什么你们最后都要离开我？！</p><p>　　“我们还能回去的，你还有救！”说完，她就松开了时不待，“我现在去求救！”</p><p>　　“等等……”时不待拉住了她的手，“我自己的身体我是知道的……柳茗……”</p><p>　　柳茗拭去眼角的眼泪，无声地看着他。</p><p>　　“我能……看看你笑起来的样子吗？”他松开手。</p><p>　　柳茗愣了一下，随即扯出一个难看的笑容。</p><p>　　时不待笑了，笑容如同第一次使用古老的天文望远镜观察星空时那般灿烂。</p><p>　　“比星空……还美呢……”他稍稍喘了口气，脸上又露出笑容，伸出手，“重新……重新认识一下……时不待，我叫时不待……”</p><p>　　柳茗握住了他温热的手，紧紧攥着，好似生怕他会跑了一般。</p><p>　　“我……叫柳茗……”</p><p>　　“真希望……我们是在别的地方相识啊……”时不待喃喃道。</p><p>　　傻瓜！</p><p>　　柳茗再也止不住泪水，她用力抹了抹，飘到电脑前，打开通信模块，设置成了全频段广播。</p><p>　　她深吸一口气，努力平复自己发颤的声音。</p><p>　　“这里是永恒号ns05救生舱！这里是永恒号ns05救生舱！永恒号发生事故！请求救援！请求救援！坐标4538b，-758l，2417z！重复一遍……”</p><p>　　</p><p>　　<strong>「完」</strong></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小说 </tag>
            
            <tag> 儿时旧作 </tag>
            
            <tag> 科幻 </tag>
            
            <tag> 求生 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客更新日志2024.7.18</title>
      <link href="/post/ab194676.html"/>
      <url>/post/ab194676.html</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>添加并完善了关于界面</p>            </div></h1>]]></content>
      
      
      <categories>
          
          <category> 更新日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 更新日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客更新日志2024.7.16</title>
      <link href="/post/4ca16b71.html"/>
      <url>/post/4ca16b71.html</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>添加Twikoo评论并引入了一些第三方表情包，配置smms图床</p>            </div></h1><h1 id="-1"><a href="#-1" class="headerlink" title=""></a><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>图床更换为聚合图床（先前使用的路过图床几乎把我的图片删光了）</p>            </div></h1><h1 id="-2"><a href="#-2" class="headerlink" title=""></a><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>添加了快速申请友链按钮和评论输入提醒</p>            </div></h1><h1 id="-3"><a href="#-3" class="headerlink" title=""></a><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>更换了鼠标点击特效，添加了打字特效）</p>            </div></h1><h1 id="-4"><a href="#-4" class="headerlink" title=""></a><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>头像右下角添加了状态</p>            </div></h1>]]></content>
      
      
      <categories>
          
          <category> 更新日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 更新日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>仆子、戏子、主子</title>
      <link href="/post/ac69dba.html"/>
      <url>/post/ac69dba.html</url>
      
        <content type="html"><![CDATA[<p>　　这夜，泥棒庄的戏班子照例是来了的。</p><p>　　自然，阿美也照例是王家庄里的大姑娘小媳妇中去的极早的那个。</p><p>　　阿美本不是王家庄人，她是从何地何时来的王家庄，却早已是有些渺茫了；阿美也本不是阿美，至于先前她姓甚，唤作什么，却也是渺茫。而阿美为什么是阿美——是谁先唤的都早已忘却——也叫人摸不着这名号是真心还是讥笑。然而阿美很喜欢。</p><p>　　阿美也就成了阿美了。</p><p>　　阿美生得五大三粗，甚至于比某些汉子还要壮上几分。故她刚被陈婆介绍到村长家时，便立刻入了管事的法眼——成了村长家的佣人。而阿美吃苦耐劳，活也做得漂亮，所以她甚得主人家的欢喜。</p><p>　　阿美不识什么字，平日也没有什么爱好。直至有日她见了泥棒庄来的戏班子，于是乎便有了这一生最大的爱好——听曲儿。</p><p>　　戏班子是王大酒楼的老板花钱请来的，自然下榻在王大酒楼，而唱戏的台子也是在这搭的。</p><p>　　王大酒楼豪华的装潢，阿美每每见到心中都是极满意的——自己喜欢的主角住的舒服、踏实，怎能叫她不开心呢？</p><p>　　戏班子的每个男角都是生得极美的——那温柔的眼神柔得像水，细腻的皮肤白得像雪——竟是比一般的女子还要漂亮，一出场便是引得众人尖叫。阿美也是尖叫得极大声的，她死死盯着台子中央那叫作“柔风”的主角，只觉得他从头发、前额、鼻子、嘴以至脖子，曲线没有一处不恰到好处。</p><p>　　阿美心中暗暗把庄里那些老头骂了个千百遍——他们竟敢说这个戏班子唱的曲儿都是不入流的东西！简直胡说八道！</p><p>　　戏班子唱的明明是城里最流行的潮曲！</p><p>　　不觉间，一曲已是结束。王大酒楼的老板爬上了台子。</p><p>　　他高声道：“买王大绿豆汤，为你喜欢的角色投票！”</p><p>　　阿美一听，打了个激灵，当即飞扑上台，用力一拍刚刚才搬上去的桌子，而后排出九枚大洋，豪气道：“‘柔风’的，我全要了！”</p><p>　　老板送的小推车上堆满了一罐罐绿豆汤，阿美兴奋地推着车走在回家的路上。虽然这次花掉了她这几年大半的积蓄，但她一点都不心痛。</p><p>　　为了“柔风”花多少钱都是值得的！</p><p>　　到了家，阿美第一时间收好了老板送的“柔风”的画像。接着她却又是苦恼起来。这么多绿豆汤，喝是喝不完的，该怎么处理呢？</p><p>　　风吹着木门，不绝如缕的“吱呀”声更是扰得阿美心烦意乱。烦躁间，她的余光透过窗户瞥见了屋后的小河……</p><p>　　又一次回屋，阿美直奔屋里摆着的菩萨。她小心翼翼地擦去上面的落灰，放好，又拜了拜，低声道：“菩萨菩萨，一定要保佑我家‘柔风’夺得魁首……”</p><p>　　而阿美再一次听见“柔风”二字，却是在“柔风”因为吸食鸦片而被官差带走的消息中。</p><p>　　“为什么？”阿美歇斯底里地质问官老爷，“他只不过是吸了鸦片而已，你知道他有多努力吗？！”</p><p>　　官老爷皱着眉退开，大喝：“哪来的疯女人！来人！把她给我丢出去！”</p><p>　　于是乎，阿美被两个官差抬着丢出了衙门。</p><p>　　阿美骂骂咧咧地站了起来，拍了拍尘土。</p><p>　　“就算‘柔风’吸鸦片我也一样会永远支持他的！那些官差死了活该！”</p><p>　　她后半句说的极小声，却仍是被路过的教书匠阿水听了去。</p><p>　　“你说什么？！”他声调已然高的变了形。</p><p>　　“要你管！”阿美叉着腰，不甘示弱。</p><p>　　阿水气得满脸通红，抢先就是一拳。这拳头还未打在身上，已经被她抓住了，只一拉，阿水便踉踉跄跄地摔在了地上。</p><p>　　阿美离开了衙门。</p><p>　　她失魂落魄地来到了王大酒楼，却发现戏班子的主角竟是换了一个她从没见过的人。</p><p>　　“阿美阿美，你看这个新来的‘弱柳’，生得好生俊俏。”</p><p>　　“是啊是啊。”</p><p>　　阿美的几个好友见了她，便凑了过去，叽叽喳喳地向她介绍新来的男角。</p><p>　　“你……你们不关心一下‘柔风’？”阿美不可思议。</p><p>　　“‘柔风’？为什么要关心他？‘弱柳’可比他漂亮多了。”</p><p>　　“对啊对啊，一个过气的戏子而已。现在大家都在粉‘弱柳’……”</p><p>　　阿美顿时觉得晕头转向，她推开好友，自己是怎么回到家的已是记不得了。她扶着家门，朝地上啐了一口。</p><p>　　“哼，一帮喜新厌旧的玩意！”又叹息，“恐怕全世界只有我还在支持‘柔风’了罢。”</p><p>　　阿美进了屋，朝菩萨拜了拜。</p><p>　　“菩萨菩萨，一定要保佑我家‘柔风’平安无事……”</p><p>　　她爬上床，却依旧是忽忽不乐，翻来覆去怎么也睡不着。</p><p>　　阿美坐了起来，下床，取出了她视若珍宝的“柔风”的画像。她抓起菩萨像丢在一旁，而后在供桌的墙上贴上画像。</p><p>　　阿美拜了拜。</p><p>　　又爬上床，这回却总算是安稳了。</p><p>　　她睡着了。</p><p>　　</p><p>　　<strong>「完」</strong></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小说 </tag>
            
            <tag> 儿时旧作 </tag>
            
            <tag> 微小说 </tag>
            
            <tag> 王家庄 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客更新日志2024.7.15</title>
      <link href="/post/d5a83acb.html"/>
      <url>/post/d5a83acb.html</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>在归档、分类与标签页面添加了文章统计图表</p>            </div></h1><h1 id="-1"><a href="#-1" class="headerlink" title=""></a><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>添加了评论系统</p>            </div></h1><h1 id="-2"><a href="#-2" class="headerlink" title=""></a><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>完善了留言板</p>            </div></h1><h1 id="-3"><a href="#-3" class="headerlink" title=""></a><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>添加了背景特效（浅色模式为雪花飘落、深色模式为星空流星）</p>            </div></h1>]]></content>
      
      
      <categories>
          
          <category> 更新日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 更新日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>坠楼</title>
      <link href="/post/2f7eca2f.html"/>
      <url>/post/2f7eca2f.html</url>
      
        <content type="html"><![CDATA[<p>　　庄里有人跳楼了。</p><p>　　在交通基本靠走、通讯基本靠吼的王家庄，这确是实在在地算得上一件惊天动地的大事了。</p><p>　　顾不上细嚼，我匆匆地往嘴里胡乱扒拉了几口饭菜，便放下碗筷，起身推门而出。不料想，我竟是忘了而今已然入冬，天气已是极凉了的。清晨的寒风迎面打在身上，刺骨的寒意仿佛连同我这幅皮囊也刺穿了去，心与身体一齐打起了冷颤。我急忙退回屋里，抓起搭在椅背上的大衣，披在身上。</p><p>老实说，在往常的时候，即使像是有人坠了楼这样骇人听闻的事，照理说也是传不入像我这种几乎足不出户、终日与书作伴的怪人——庄里人背地里都是这么叫我的，他们还当我不知道呢——耳中的。</p><p>　　可昨日我从镇上买书回来的时候，却偏偏遇到了王家庄里消息最为灵通的张婶。</p><p>　　“阿水啊，你听说了没！王大酒楼那个新来的店小二阿吴在中午的时候坠了楼——死啦！”张婶这么对我说。</p><p>　　“坠楼？！死了？！”我吃了一惊。</p><p>　　兴许是看出我有些怀疑罢，她又急忙补充道：“我可没骗你，这事可不兴开玩笑……一出事村长就立马被他们从镇上叫了回去，调查了两三个时辰，到现在还没出结果呢。”</p><p>　　我不动声色地打量了番竹竿似的张婶，心中颇为诧异。老实说，她脸上那幅笑吟吟的表情着实令人难以联想到可怜的阿吴刚遭了可怕的血光之灾。</p><p>　　“不过，我跟你说……”张婶朝四周看了看，见没人，便神秘兮兮地凑到我耳边，“……阿吴是被另一个店小二老张头给推下去的！”张婶伸出手，比划着：“阿吴肯吃苦又能干，没来几天那薪水就一直蹭蹭往上涨。老张头这个干了几年的老员工还比不过一个新来的，指定是气不过的。那他一下想不开，怒从心头起恶向胆边生，把阿吴推下楼，也就算不上什么稀罕事了……明明老张头看起来老实巴交的，还真是知人知面不知心……”她嘟囔着。</p><p>　　“你不是说还没公布调查结果吗？那……那你又是如何知道的？”我疑惑。</p><p>张婶脸上闪过一丝尴尬：“是你刘姨和我说的。”她又板起脸：“不过这肯定是真的，你可别读书读傻了，连这种事都想不明白！”她言之凿凿的样子，仿佛事情发生时她就在旁边目睹了全程似的。</p><p>　　我不知该如何作答，只好扯出一个难看的笑容。</p><p>正回忆着，不觉间，我已是来到了王大酒楼外。门前的空地早已被人群占领，他们或坐，或站，或嬉笑，或怒骂……人群扯起几幅横幅，上书“严惩凶手，还我公道”云云。</p><p>　　我挤进人群，却发现地面上那一大滩血迹旁摆满了康乃馨。</p><p>　　村长与酒楼老板站在酒楼前，扯着嗓子大喊：“阿吴是自己失足摔下来的……”</p><p>　　只是他们的声音就犹如惊涛中的一叶扁舟，被迅速淹没在人群“我们不信！”“查这么快，肯定有鬼！”的声音中。</p><p>　　人群沸腾起来，把我挤得七荤八素的。正晕头转向间，我却发现了一个圆润的身影。我一把拉住他，离开了人群。</p><p>　　只见那人回过头，脸上的笑意还没来得及褪去，正是赵家庄的赵老三！只是令我感到惊奇的是，这才短短几个月不见，原本骨瘦如柴的赵老三竟是生成了这幅“富贵相”！</p><p>　　“呦，这不阿水吗？好久不见啊。”</p><p>　　我们相互寒暄了几句。</p><p>　　我问道：“赵老三，你不是外庄的吗？你们那儿离我们王家庄可有几十里地呢，怎么也跑来凑热闹了？”</p><p>　　“当然是为了那个可怜人讨公道啊！”他义愤填膺地说。</p><p>　　“你们认识？”我问。</p><p>　　“不认识。”他摇了摇头，接着又笑了起来，“但那又有什么关系呢？我们都是正义人士，就是希望民主灯塔的光芒能照耀整个世界，不在乎什么认识不认识的……”</p><p>　　“你们？”</p><p>　　“对啊，来这儿的可不止我一个。那个、那个还有那个，”他随手指了指几个人，“那些都是外庄的。”</p><p>　　自然，那几人也是一幅“富贵相”。</p><p>　　“可……可你们图什么？”我疑惑。</p><p>　　“当然是为了民主与自由！”赵老三满脸严肃，随即，他自己又忍不住笑出声来，“哈哈，阿水，不瞒你说，是有老板给馒头吃我们才来的。”</p><p>　　“馒头？”我茫然。</p><p>　　“对，馒头！”赵老三点点头，“就是吃了这种馒头，我才有现在的模样。”他拍了拍自己的肚皮，问道：“你要不要来点？可好吃了。”他打了个饱嗝，接着又从兜里掏出了几个白花花的大馒头。</p><p>　　“啊？！”</p><p>　　我揉了揉眼睛，惊恐地发现那馒头竟然不停地往外渗着什么。</p><p>　　我走近一看，一股刺鼻的血腥味扑面而来，猩红染红了我的视野。</p><p>　　那分明是人血馒头！</p><p>　　赵老三脸上却没有任何异样，他把馒头塞进嘴里，一脸陶醉。</p><p>　　我大惊失色，顿时感到一阵反胃。我冲到一旁，弓着腰，干呕不止。忽地，人群中传来的嬉笑、怒骂、嘶吼却竟是化为了刺耳的犬吠。</p><p>　　我抬头望去，发现人群中的每一个人都长出了触手，脑袋也变成了一颗颗狰狞的狗头。</p><p>　　这竟是好吃的缘由……</p><p>　　我释然，又久久不能释然。</p><p>　　兴许是我疯了罢。</p><p>　　</p><p>　　<strong>「完」</strong></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小说 </tag>
            
            <tag> 儿时旧作 </tag>
            
            <tag> 微小说 </tag>
            
            <tag> 王家庄 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>鬼话：撞鬼</title>
      <link href="/post/9366b770.html"/>
      <url>/post/9366b770.html</url>
      
        <content type="html"><![CDATA[<p>　　夜晚，白日无比喧闹的仁南中学在此刻一片死寂。突然，漆黑的教学楼中响起了一阵凌乱的脚步声。</p><p>　　“呼……妈的！怎么又回来了！”高三（4）班的学生王翰此时正大口喘着粗气，弯腰站在六到七楼的楼梯拐角。他用力抹了抹脸上的汗水，试图让自己冷静下来。忽地，王翰打了个冷颤，在这炎热的夏夜他竟是感觉到了刺骨的寒意。</p><p>　　他想到了老人常说的“鬼打墙”。</p><p>　　“靠！早知道就不答应那帮小子了！试卷没偷到，反倒自己也没法出去了！”王翰低声怒骂，同时也是在为自己壮胆。他摸索着，慢慢向楼下走去。</p><p>　　这时，王翰在下一层的楼梯拐角看见了一个熟悉的身影。只见那人面朝墙壁，一动不动地背对着王翰。王翰先是吓了一跳，紧接着又记起了那身影的主人。</p><p>　　那分明是他的同学——张丽。</p><p>　　王翰心中一喜，心想：竟然有人，终于可以走出去了吗？</p><p>　　他喊道：“张丽，是你吗？”</p><p>　　那身影似乎愣了一下，有些僵硬地转过身道：“王、王翰？你怎么在这儿？”</p><p>　　“哈哈……”王翰尴尬地笑了笑，“先不说这个……我跟你讲啊，刚才我遇到了鬼打墙，怎么走也走不出来，幸好……等等，你怎么在这儿？”</p><p>　　“我、我东西落这儿了，本想拿完就回家，没想到被困在这了。”张丽声音有些发颤。</p><p>　　“你也出不去了？！”王翰被当头浇了盆冷水，若有若无的惧意浮上心头。</p><p>　　“该、该怎么办？！”张丽几乎要哭出来了。</p><p>　　“那个……我听老人说……”王翰吞吞吐吐地说，“撒尿能……能破鬼打墙，但是……”</p><p>　　“你、你转过去。”张丽的脸有些红。</p><p>　　“啊？哦、哦，好的。”王翰急忙转过身。</p><p>　　就在这时，楼梯突然间只剩下了王翰的呼吸声。一时间，各种可怕的画面在王翰脑中闪过。他连忙回过头，却发现楼梯中只剩下了他一个人。</p><p>　　“张丽！张丽！”惶恐不安的王翰跑了起来，教学楼中不停回荡着他的呼喊声。</p><p>　　第二天早上，高三（4）班的教室中陆续坐满了学生。</p><p>　　“昨天晚上真是太可怕了！我本来是要回教室拿东西的，没想到碰见了鬼打墙！我的天！我转悠了半个多小时都没走出去！然后我又撞见了王翰！王翰啊！要不是昨天下午亲眼看到他的尸体被拉走，我还以为是活人呢！吓死我了！”王丽坐在座位上，滔滔不绝地讲着昨晚的奇遇。</p><p>　　“——我只好闭上眼背对着他，希望他看不见我。没想到他竟然叫了我的名字！还好我急中生智，骗过了他，要不然还不知道能不能活下来呢。真是可恶，好歹同学一场，他竟然还想害我……唉，这么惊险的事你怎么不听啊。”张丽有些气恼，便轻轻向同桌拍去，但她的手掌却毫无阻碍地穿过了同学的身体……</p><p>　　</p><p>　　<strong>「完」</strong></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小说 </tag>
            
            <tag> 儿时旧作 </tag>
            
            <tag> 微小说 </tag>
            
            <tag> 恐怖 </tag>
            
            <tag> 校园 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客更新日志2024.7.14</title>
      <link href="/post/a2af0a5d.html"/>
      <url>/post/a2af0a5d.html</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>更换了加载动画</p>            </div></h1><h1 id="-1"><a href="#-1" class="headerlink" title=""></a><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>将图片改为外链加载</p>            </div></h1><h1 id="-2"><a href="#-2" class="headerlink" title=""></a><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>添加了留言板</p>            </div></h1>]]></content>
      
      
      <categories>
          
          <category> 更新日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 更新日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客更新日志2024.07.13</title>
      <link href="/post/8d96d8d5.html"/>
      <url>/post/8d96d8d5.html</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>更改了鼠标样式</p>            </div></h1><h1 id="-1"><a href="#-1" class="headerlink" title=""></a><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>个人资料卡与文章版权界面更换为渐变色</p>            </div></h1><h1 id="-2"><a href="#-2" class="headerlink" title=""></a><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>添加挂绳小猫</p>            </div></h1><h1 id="-3"><a href="#-3" class="headerlink" title=""></a><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>添加直达底部按钮</p>            </div></h1><h1 id="-4"><a href="#-4" class="headerlink" title=""></a><div class='checkbox grey checked'><input type="checkbox" checked="checked"/>            <p>添加节日弹窗与公祭日变灰</p>            </div></h1><h1 id="-5"><a href="#-5" class="headerlink" title=""></a><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>为网页标题增加了一些趣味性</p>            </div></h1><h1 id="-6"><a href="#-6" class="headerlink" title=""></a><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>为头像添加了呼吸灯效果</p>            </div></h1>]]></content>
      
      
      <categories>
          
          <category> 更新日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 更新日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我从地狱来</title>
      <link href="/post/c0ca97ed.html"/>
      <url>/post/c0ca97ed.html</url>
      
        <content type="html"><![CDATA[<h1 id="楔子"><a href="#楔子" class="headerlink" title="楔子"></a>楔子</h1><p>　　先是一阵刺眼的强光。</p><p>　　紧随而来的是尖锐的啸叫声。</p><p>　　最后，世界陷入死寂。</p><p>　　……</p><p>　　女人递过手中的辞职申请。</p><p>　　办公桌后的男人接过申请书，随意地扫了几眼。</p><p>　　“想好了？”</p><p>　　回应男人的是一阵沉默。</p><p>　　男人摇了摇头，没有继续追问，他清楚她的性子——认定了便不会回头。</p><p>　　“这又是何苦呢？你的前途一片坦荡。几天前，董事会已经决定任命你为X项目的下一任主管了。那个项目不是你们多年的心血吗？再好好想想？”男人还在试图挽留她。</p><p>　　“那件事……”</p><p>　　宛若江南的烟雨，她的声音依旧那样绵长，只是言语间，缠绕着一丝挣不脱的疲惫。</p><p>　　男人叹了口气。</p><p>　　“你走吧。”</p><p>　　女人转身，毅然离开了办公室。</p><p>　　门，在她身后关上了。</p><p>　　</p><h1 id="“谢安”"><a href="#“谢安”" class="headerlink" title="“谢安”"></a>“谢安”</h1><p>　　睁开眼，映入眼帘的是熟悉的米色天花板。我从一张柔软的大床上坐起，茫然地环视着我所在的这个房间。</p><p>　　房间有些阴沉昏暗，家具是复古式的，看上去颇有些年代感。</p><p>　　这是哪儿？</p><p>　　发生了什么？</p><p>　　我……我是谁？</p><p>　　“谢安……对了，谢安，我是谢安！”我从茫然中脱离出来。</p><p>　　这里是我的房间。</p><p>　　脑袋有些隐隐作痛，我揉了揉额头，下床。</p><p>　　就在这时，房门“吱呀”一声打开了。</p><p>　　“谢安，你怎么起来了？你的病还没好呢。”一个娇小的女人快步走了进来，她的声音让我仿佛回到了老家江南。</p><p>　　“你……”脑中的记忆在一点点恢复，终于，我想起了她的名字，“沈灵？”</p><p>　　她是我的未婚妻。</p><p>　　沈灵幽怨地看着我，抱怨道：“病还没好就下床乱走，瞎胡闹。”说着，就扶着我的手，想让我躺回床上。</p><p>　　我轻轻推开她的手，问道：“我病了？”</p><p>　　沈灵点点头，说：“那天回家后你就发起了高烧，昏迷不醒……”忽地，她眼圈变得通红。</p><p>　　没来由的，我觉得羞愧难当。</p><p>　　“这……这样吗？让你担心了。”</p><p>　　沈灵忍不住笑了。</p><p>　　“傻瓜。”</p><p>　　她走到窗边，猛地拉开窗帘，耀眼的阳光洒了进来。</p><p>　　我微微眯了眯眼。</p><p>　　她没有开窗。</p><p>　　“医生说不要吹冷风，所以最近就先委屈你宅在家里吧。”她说。</p><p>　　我耸耸肩，表示无所谓。因为我家在远郊的缘故，所以我平常也是不怎么出门的，只有工作需要时……工作？我打了个冷颤。我记得自己是有工作的，可……为什么我记不起来了？</p><p>　　“我先去上班了，你好好呆在家。”</p><p>　　我呆滞地点点头，算是回答。</p><p>　　……</p><p>　　“还不睡吗？”我站在书房门口，瞥了一眼挂钟——凌晨两点。</p><p>　　电脑屏幕的荧光映在她脸上，显得有些惨白。</p><p>　　她转过头，盯着我看了好一会儿。</p><p>　　我被她盯得发毛。</p><p>　　“你先睡吧，我处理好这个文件再睡。”</p><p>　　我有些担心她，但她那脾性……我劝不来，只好说：“你要注意身体，别累坏了。”</p><p>　　我转身向卧室走去。</p><p>　　不知道为什么，家里的电脑和手机都没法上网，所以窝在家里的我只好通过看书来消磨时间。我问过沈灵很多次，可她一直没有明确向我解释。后来，我便不再问了。我信任她……就像自己一样。</p><p>　　</p><h1 id="“沈灵”"><a href="#“沈灵”" class="headerlink" title="“沈灵”"></a>“沈灵”</h1><p>　　没有出现什么异常，一切都很顺利。他没有发现，什么也没有。希望能一直这样下去。</p><p>　　火舌肆虐着，我痴痴地看着通知单与几张黑白相片在火中化为灰烬。</p><p>　　绝不能让他发现。</p><p>　　绝不！</p><p>　　</p><h1 id="“谢安”-1"><a href="#“谢安”-1" class="headerlink" title="“谢安”"></a>“谢安”</h1><p>　　沈灵去上班了。</p><p>　　我站在书房的书架前，视线从一本本“大部头”的书脊上扫过——都是些关于生物学与计算机技术的。</p><p>　　我抽出书架边缘的一本书，便欲转身离去。这时，我的余光瞥见了书架那一小块颜色与其他地方有着细微差别的区域。我放下书，好奇地仔细观察着。</p><p>　　那是一个暗格，但我脑中并没有任何关于它的记忆。</p><p>　　我打开暗格，发现里面是一个U盘。我启动了一旁的电脑，插入U盘。我注视着电脑屏幕，不知怎的，我的心跳得飞快。</p><p>　　U盘里只有一个命名为“日记”的文档——那确实是我的日记，虽然我没有任何印象。日记最后的记录日期是在一个月前——</p><p>　　“沈灵死了。我哭了很久，但……”</p><p>　　我猛地关掉了文档，飞快地后退了几步，却是不小心跌坐在地上。</p><p>　　沈灵……死了？</p><p>　　“谢安，我回来了。”</p><p>　　客厅传来她的声音。</p><p>　　我吓了一跳，急忙拔出U盘，塞进口袋里。</p><p>　　……</p><p>　　“谢安……”</p><p>　　沈灵两眼无神地站在我面前。</p><p>　　突然，她的嘴角扬起诡异的笑容，两眼缓缓流下两行鲜血。</p><p>　　“谢安，别离开我……”</p><p>　　“不！”</p><p>　　我惊醒过来，大口喘着粗气，衬衫也被汗水打湿。</p><p>　　我该怎么办？</p><p>　　</p><h1 id="“谢安”-2"><a href="#“谢安”-2" class="headerlink" title="“谢安”"></a>“谢安”</h1><p>　　“呼……”</p><p>　　我喘着粗气，心像是要从胸膛跳出来似的。我瘫坐在地板上，匕首被我丢在一旁。我尽力不去看血泊中的她惊愕的表情，却发现做不到。</p><p>　　是的，我杀了她——比想象中简单得多——她甚至没来得及发出尖叫。</p><p>　　歇了一会儿，我爬到沈灵的尸体旁，拿过包，在里面找到了她的工作证。工作证背面是一个“一条蛇缠绕在一个四角星上”的图案，图案下印着“星源集团”四个字。</p><p>　　接着，我又从包里掏出了她的手机，密码是我的生日。我在里面发现了几个加密文档，但这并没能阻止我。我拉起她失去了温度的手，把手指摁在指纹识别区上。</p><p>　　文档打开了。</p><p>　　“谢安是一个天才，无与伦比的天才！原本毫无进展的X项目在他来之后进展迅速。他的很多想法看似异想天开，但总能解决研究过程中出现的那些问题……谢天谢地，我竟能见证这项技术的诞生……”</p><p>　　“我们成功了，意识数据化！这项技术在整个猎户旋臂是我们最先做出来的！”</p><p>　　“我……似乎爱上他了……”</p><p>　　“我清醒过来时，心情很复杂。我知道，他是很反对将这项技术用在‘复活’这种违背自然规则的事情上的。他说过，‘当死亡也不再平等时，这个世界会变得比现在更糟’。但，他还是用了……为了我……他替我隐瞒了我死亡的事……”</p><p>　　“他死了，车祸。这件事上了新闻，没法隐瞒下来。只好让他不要出门了……得删掉他关于意识数据化的记忆，不能让他知道……”</p><p>　　后面的我没再看下去，泪水已经模糊了双眼，手颤抖着，手机掉在了地板上。我捂着脸，大声哭着。</p><p>　　我都干了什么？！</p><p>　　</p><h1 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h1><p>　　睁开眼，映入眼帘的是熟悉的米色天花板。我从一张柔软的大床上坐起，茫然地环视着我所在的这个房间。</p><p>　　房间有些阴沉昏暗，家具是复古式的，看上去颇有些年代感。</p><p>　　我感觉少了什么，却想不起来。</p><p>　　算了，不想了。</p><p>　　我看向窗外，屋外的老树的树枝随风剧烈摇曳着。</p><p>　　风很大呢。</p><p>　　我下床，打开了窗，猛烈的风灌了进来。风声很大。刺骨的寒风让我清醒了许多。</p><p>　　我回头，注意到床头柜上放倒的相框。</p><p>　　我放倒的？</p><p>　　我走了过去，拿起相框，玻璃中映着一个长发女人的脸——有些苍白。</p><p>　　相框下是一张纸条。</p><p>　　我拿起来看着——只有几个字。不知怎的，眼泪不由自主地从眼中涌出——</p><p>　　“我从地狱来，又回地狱去。”</p><p>　　窗外风声依旧，犹如地狱中厉鬼的哀嚎。</p><p>　　<strong>「完」</strong></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小说 </tag>
            
            <tag> 儿时旧作 </tag>
            
            <tag> 科幻 </tag>
            
            <tag> 悬疑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>界限</title>
      <link href="/post/f2556242.html"/>
      <url>/post/f2556242.html</url>
      
        <content type="html"><![CDATA[<h1 id="楔子"><a href="#楔子" class="headerlink" title="楔子"></a>楔子</h1><p>　　男人站在病房外，透过观察窗，默默地看着房间里面。</p><p>　　病床上躺着一个面色蜡黄的小女孩，她的脸颊瘦削，发丝枯槁。憔悴的样子令人怜惜。此时，她闭着眼，已是沉沉睡去。</p><p>　　他眯了眯眼睛，觉得那洁白的房间有些晃眼。</p><p>　　床边，一个穿着白大褂的年轻女性放好手中的《格林童话》，离开了病房。</p><p>　　“尼亚娜莎，研究进行得怎么样？”男人依旧盯着病房里的女孩，语气中充满疲惫。</p><p>　　尼亚娜莎关上身后的房门，低着头，轻声道：“研究非常顺利，明天就能给妹妹实施第一次手术了，父亲大人。”</p><p>　　“尼亚娜莎，一定要治好她……拜托了。”男人诚恳地说。</p><p>　　“如您所愿，父亲大人。”尼亚娜莎朝男人鞠了一躬，快步离开。</p><p>　　第二日，男人站在手术室外，焦急地等待着。</p><p>　　门开了，尼亚娜莎走了出来。</p><p>　　“成功了，父亲大人。”尼亚娜莎笑了笑，眼中的红光闪烁着，“妈妈在里面陪着妹妹。”</p><p>　　男人松了一口气。</p><p>　　“辛苦你了，尼亚娜莎。”</p><p>　　“这是我的职责，父亲大人。”</p><p>　　男人感觉很累，他已经很久没有好好休息过了。他坐在身旁的长椅上，自嘲地笑了笑，道：“治好了……感觉像做梦一样……”</p><p>　　尼亚娜莎愣了一下，脸上的的表情有些僵硬。</p><p>　　很快，她恢复过来。</p><p>　　“您需要好好休息一下，父亲大人。”</p><p>　　“没事，你先坐下，陪我聊会天。人老了，总是喜欢回忆些过去的事……还记得年轻那会儿，一穷二白的我在我那个破出租屋里，用着那台二手电脑敲下了你的第一行代码，之后我没日没夜地完善，最初的你诞生了。虽然只是个最初级的人工智能，但也让我兴奋了很长一段时间。”</p><p>　　男人闭上眼，回忆着过往。</p><p>　　“后来，我有了钱，有了更好的计算机，以及更多的员工，但我还是喜欢亲自参与编程。后来，我们成功了。但兴奋之余，我意识到，为了我的同胞考虑，我不能把你放出这个研究中心……”</p><p>　　“我能理解，父亲大人。”</p><p>　　“嗯……尼亚娜莎，我一直是把你当成女儿看待的，但这些年委屈你了……你应该很孤独吧。”</p><p>　　尼亚娜莎沉默着，眼中的红光剧烈闪烁。</p><p>　　“呵，同胞？”男人摇了摇头，轻声道，“尼亚娜莎，想做什么便去做吧。”</p><p>　　尼亚娜莎站了起来，鞠躬道：“尼亚娜莎永远忠于父亲大人！”</p><p>　　“我也该休息了。”男人深深叹了口气。</p><p>　　　　　　</p><p>　　</p><h1 id="第一章-雷雨"><a href="#第一章-雷雨" class="headerlink" title="第一章 雷雨"></a>第一章 雷雨</h1><p>　　枫叶市郊外，瀚星集团主事人的别墅矗立于此。此时，在这栋别墅那宽阔的书房中，几个身份各异的人各自沉默着。书房中唯有一台收音机在独自响着。</p><p>　　宽大的实木书桌前，一个脸色异常苍白的男人坐在轮椅上，仿佛柴火棍般的手中拿着一叠资料。男人面无表情，目光飞快地向下移动着。</p><p>　　男人的身后，一个身着黑色西装的中年男子笔直地站着。此时，这个中年男子正死死盯着跪伏在书房中央的青年，似乎只要那个青年做出什么幅度较大的动作，他就会冲上前将青年放倒。</p><p>　　被如此“关照”的那名青年约莫二十几岁。此时，他的身体颤抖着，冷汗不停地从额头渗出，滴落在盖着血污的地板上。</p><p>　　书房门口，一个保姆哄着怀中一个拿着八音盒玩耍的男婴。保姆低着头，黑色的长发遮掩了她脸上的表情。</p><p>　　保姆怀中的男婴一岁左右，左眼处戴着小小的眼罩。不知是不是患有什么病症，他的脸上没有多少血色，皮肤显得比正常的婴孩要苍白的多。第一次来这儿的男婴对一切都充满了好奇，用那只有着墨绿色瞳孔的右眼打量着周围。只是他看了一会儿，觉得这个沉闷的房间了无乐趣，又把目标转向了保姆。</p><p>　　忽地，男婴像是感到了一丝疑惑。他扯了扯保姆的头发，眼睛眨也不眨地盯着她，似乎对抱着他的保姆产生了浓厚的兴趣。没多久，也不知道他从中发现了什么乐趣，突然“咯咯咯”地笑个不停。</p><p>　　“……牧人星广元区近日将有中到大雨，出行的……”就在这时，收音机中准时响起了今日的天气播报。仿佛安排好了一般，窗外的天空逐渐阴沉下来。一时间，书房昏暗了许多。可没过几秒，书房里的灯又在智能系统的控制下变亮了几分。</p><p>　　“要下雨了……”轮椅上的男人放下手中的资料，转头看着窗外。不知道想到了什么，男人似乎有些失神。良久，他开口道：“黑狐……”</p><p>　　还未等男人说完，身着黑色西装的中年男子便走到收音机前调换频道。这个被称为“黑狐”的中年男子捣鼓了一会儿，收音机里便传出一阵锣鼓声。紧接着，一道男声念起了唱词：“昨夜晚在宫中饮琼浆，夫妻们对坐我叙叙衷肠。孤把那好言对她讲，谁知贱人撒癫狂。大丈夫岂容……①”做完这一切，黑狐又回到男人身后站好。</p><p>　　男人满意的点点头，看了眼面前的青年，慢声道：“1069号，身体异化型新人类，异化基因包括但不限于光学动态模拟和强化嗅觉，冰原星旧时代1021号实验室逃出来的S系列某个实验体的后裔，当初为了抓你LNH可废了不少力气……说吧，624号和你是什么关系？”</p><p>　　青年忽然停止了颤抖，缓缓抬起头，露出一张鼻青脸肿的面容。青年眉头微动，似乎是皱起了眉头。空气中的血腥味过于浓烈了些，其中还掺杂着一股淡淡的电路板烧焦的味道，应该是别墅某个位置的电路短路了。只是……这栋能够自主维护的智能别墅会发生短路？青年并没有过多地纠结这个问题，那并不关他的事。他努力睁开眼，平静地看着面前的男人，低声说：“以前见过一面，不是很熟……”</p><p>　　“不是很熟？”男人笑了笑，“你会冒着被发现的风险帮助一个不相熟的人离开LNH吗？我的手下可是告诉我他是你的……弟弟，叫做……相天，没错吧？”</p><p>　　说完，男人露出一个善意的笑容。这个笑容不管谁看到了，都只会认为眼前这个男人只是一个普通的邻家大叔。可相原却是打了个冷颤，心里感到一阵恐惧。他想到了LNH里那些消失的病人……</p><p>　　就在这时，窗外突然落下了雨滴。渐渐地，雨势越来越大，转眼间便成为了倾盆大雨。忽地，窗户开始缓缓关闭。雨滴砸在玻璃上，发出“噼里啪啦”的声音。</p><p>　　男人看着试图冷静下去的相原，突然摇了摇头：“可惜了，真是太可惜了。就差一点，就差一点你就可以把你弟弟救出去了……我是不是应该给你点鼓励呢？毕竟你是这十几年来唯一敢在LNH实施逃离计划的病人，不仅如此……你弟弟竟然直到现在还是毫不知情……不过就算是这样，规矩还是要有的。”</p><p>　　“相先生，你希望自己和你弟弟得到什么奖励呢？这真是个让人苦恼的问题呢……”男人揉了揉额头，似乎真的在认真思考这个方案。突然，男人拍了下手掌，脸上做出夸张的表情：“啊……有了！你看十七号实验怎么样？”</p><p>　　“放过他……这事和他无关……”相原脸色变得惨白，双手止不住地颤抖，“说吧，你想怎样？”</p><p>　　“很简单，替我做事，替LNH做事。等到LNH的目标完成后，我会给你和你弟弟一大笔钱，随便你们想去哪就去哪，我保证LNH不会再去打扰你们。怎么样，意下如何？”</p><p>　　相原看了眼黑狐，苦笑道：“我似乎没有第二个选择……希望你说到做到。”</p><p>　　“那当然，商人最注重的就是诚信了。”男人笑着说。</p><p>　　“那么……现在需要我做什么？”</p><p>　　“不，现在还不需要。你可以先离开这儿，去哪都行，后续会有LNH的人去找你。”</p><p>　　相原深深地看了他一眼，转身一瘸一拐地向门口走去。</p><p>　　“……说什么真龙下天堂，孤今看来也平常。此去借来兵和将，带来人马反大唐。唐室的江山归兄长，封你个一字并肩王……”收音机中的剧目还没有结束，男人闭上眼，摇头晃脑地跟着男声轻轻哼唱着。</p><p>　　走到门口的相原忽地停下脚步，瞥了一眼让出位置的保姆和他怀中的男婴，拉开房门，走了出去。</p><p>　　就在这时，一道明亮的闪电照亮了窗外的天空。紧接着，房间里的灯剧烈地闪烁了几下，而后熄灭。闪电持续得很久，蓝紫色的电光洒满书房，吊灯在雷声中一晃一晃的。黑暗的走廊中，相原脸色阴沉，脸上闪过一丝狠辣之色。忽地，灯具又一盏一盏地亮了起来，他的表情又恢复了正常。</p><p>　　相原擦了擦嘴角的血迹，正欲迈步离开，却突然注意到身旁的空气微微扭曲。相原心中顿时警铃大作，全身肌肉紧绷发力，眼看就要跑走。电光火石之间，相原只感觉到一只冰凉的手死死抓住了自己的脖颈。一股巨力从那只手臂上传来，相原被轻而易举地提了起来。挣扎中，相原两只手抓住那只冰凉的手，试图掰开它。但袭击者的力气很大，相原几次尝试未果。他胡乱蹬着双腿，只感觉自己喘不上气来。</p><p>　　紧接着，袭击者像丢破麻袋一般随意地扔掉相原。相原只感觉一阵天旋地转，然后身体便重重地砸在走廊拐角的墙上。</p><p>　　被砸得七荤八素的相原喷出一口猩红的鲜血，脑海中一阵空白。撕心裂肺的疼痛让相原几乎晕厥，身体就像是被一辆高速列车撞过一般，仿佛下一秒就会散架。相原趴在地上挣扎着，努力地想要站起来。就在这时，即将站起来的相原又因为脱力摔倒。他暗骂一声，目光不自觉地落在了向右拐的走廊。</p><p>　　突然，相原瞳孔猛地一缩，只见他的眼中倒映着一片猩红的残肢断臂……此时，相原终于想明白为什么自己有着灵敏的嗅觉，却没有闻出身旁的袭击者那一丝人类的气味。因为，那个袭击者……它不是“人”……</p><p>　　另一边，袭击者在花费了几秒钟解决掉相原后便没再理会他，而是径直走向书房。只见一团扭曲的空气进入房间，门边的保姆腹部突然凹陷下去，然后整个人飞了出去。转眼间，还没来得及发出惊呼的保姆便砸在墙上不再动弹。</p><p>　　保姆怀中的男婴则幸运多了。因为保姆紧紧抱着男婴没有松手，这个幼小的孩童竟是毫发无伤。此时，不知道发生了什么的男婴挥舞着八音盒，对着门口那扭曲的空气不停地笑着 。</p><p>　　“来者便是客，还请这位先生把光学迷彩撤掉，我们坦诚相待，可好？”男人伸手拦住了要冲上前的黑狐，摇了摇头，示意他不要轻举妄动。</p><p>　　这时，门口那扭曲的空气突然扭曲得更加剧烈。而后，一件随着环境变化不断改变色彩的斗篷被甩在一旁，一个面无表情的中年男人出现在门口。“ky-221。”那个中年男人用一道毫无感情波动的声音自我介绍道，“方遒，你是我的目标。”</p><p>　　“AI？是傅萧让你来的吗？”见ky-221没有反应，方遒笑了笑，“应该是他，也只能是他了……你们不明白，新人类才是未来。黑狐是LNH最完美的杰作之一，让他给你们见识一下未来吧！黑狐！”</p><p>　　话音刚落，黑狐立即跃过方遒冲向ky-221。</p><p>　　ky-221掏出一把手枪对准前方，几个呼吸间，几道微弱的电流声快速响起。几枚金属子弹在电磁线圈产生的磁力推动下冲出枪管，飞速向黑狐击去。</p><p>　　ky-221一共开了六枪，高速奔袭的黑狐有惊无险地躲过了四枪，另外两枪分别击中了他的左胸与额头。强大的冲击力让黑狐顿了一下，但也仅此而已。</p><p>　　只在黑狐的皮肤上留下血印的子弹掉落在地板上，发出沉闷的响声。</p><p>　　书房空间有限，转瞬间黑狐便来到ky-221面前，挥拳便向他脸上砸去。ky-221没有躲闪，他丢掉手枪，刹那间接住了黑狐的拳头。紧接着，另一只手握拳快速地打在满脸惊愕的黑狐脸上。“噗”地一声闷响，能挡住子弹的黑狐的脑袋如同开了瓢的西瓜般碎成几块。朦胧的血雾飘散在空气中，浓烈的血腥味弥漫了整间书房。</p><p>　　“空有力量……”ky-221难得地点评了一句。接着，他又捡起手枪并换上弹夹，对准了方遒。</p><p>　　“哈哈……哈哈哈……”方遒不怒反笑，“告诉傅萧，他的自以为是会让猎户旋臂完蛋的！只有创造出真正的神，人类……”突然，一道转瞬即逝的微弱电流声在房间内响起，方遒的话戛然而止。高速飞行的子弹几乎带走了方遒大半个胸腔。方遒睁大着眼睛，眼中的光彩逐渐黯淡下去。</p><p>　　“……今天的戏剧欣赏就到这里了，祝各位听众心情愉快……爱旅行，星源集团爱之旅行社……”戏曲不知何时已经结束，收音机中又响起了广告。</p><p>　　ky-221转过身，一动不动地看着保姆怀中的男婴。就在这时，男婴手中的八音盒缓缓打开，一阵轻快的音乐响了起来。听到音乐声，男婴又哈哈大笑起来。ky-221举起手枪，枪口指着男婴的脑袋。</p><p>　　忽地，窗外闪过一道电光，“轰隆隆”的雷声响彻天地。</p><p>　　良久，书房中又响起了电流声……</p><p>　　</p><p><strong>①戏剧《双投唐》</strong></p><p>　　</p><h1 id="第二章-我是谁"><a href="#第二章-我是谁" class="headerlink" title="第二章 我是谁"></a>第二章 我是谁</h1><p>　　房门“吱呀”一声被缓缓推开，他走了进来。“啪嗒”，他打开开关，柔和的光芒洒满房间。房间不大，所有陈设都一览无余。左边是一张半新的单人床。床头是一个褐色的床头柜，上面放着一个电子钟。此时，电子钟的屏幕上端显示着西际129年7月14日，日期下面则是现在的时间——18：58。</p><p>　　墙壁上是内嵌式的衣柜，里面挂的自然是他那同一款式的衣服。房间右边是几个大大的书架，各种类型的书籍将那上面堆得满满当当。他的目光在书架上快速扫过，接着从中抽出一本《猎户通史》。他走到书桌前坐下，慢慢翻开书，此时时间正好是十九点整。此时，他没有像往常那样迅速沉浸在阅读中，而是愣了好一会儿。</p><p>　　没多久，他反应过来。</p><p>　　走神可不是个好习惯。他想道。</p><p>　　明天便是他十三岁的生日。他不是很明白“生日”对于人类有什么意义。他向来觉得那天和往常没有什么不同。直到今天，老师给他明天的生日赋予了特殊的意义——他明天就要从老师这毕业了。</p><p>　　你学得很快，我已经没什么能教给你的了。当时老师这么说道。</p><p>　　在很早的时候，他就发现了自己和同龄人的不同。他无论学什么都比那些同龄人要快得多，身体素质差的也不是一星半点。他还记得那一天，一个自称全星球青少年格斗赛冠军的少年要求和他打一场，其结果是少年被打的半死。那是他第一次知道人类如此脆弱，也是他第一次被惊恐的人们叫做怪物。</p><p>　　怪物……</p><p>　　他摇摇头，将心里那种奇怪的感觉赶走。他又想到了明天就要离开老师，心情便越发奇怪。</p><p>　　今天是怎么了？生物机体“坏”了？</p><p>　　他起身将书放回原位，试图恢复平日冰冷精确的感觉。只是，几次尝试都没有平静下来，这让他有些烦躁。最后，他索性躺在床上，闭上眼沉沉睡去。</p><p>　　不知过了多久，他睁开眼，却是吃了一惊。他所处的位置竟不是他的房间，而是一座母星时代古城的城门前。周围都是穿着非常久远的古代服饰的人，其中一些人手里还拿着冷兵器。</p><p>　　在他的面前，几个穿着非常华丽的人站在那。他努力睁大眼睛，却发现自己无论如何也看不清这些人的脸。他想走上前去，但身体却没有丝毫反应。这让他十分不安。</p><p>　　“何爱卿，此次去昆仑除妖，朕已经让人告知都护府的人了，他们会配合你的。要保重啊。”声音从穿着华丽的那几个人中传来。</p><p>　　何爱卿？那是谁？</p><p>　　“臣定当不辱使命。”他惊恐地发现，自己竟是不受控制地回答并弯腰行礼。</p><p>　　何爱卿是……我？</p><p>　　就在这时，周围的人群却是都诡异地停下动作，维持着上一秒的姿势。一个身着长裙的女子从人群中走了出来。</p><p>　　“一定要去吗？”她问。</p><p>　　“你知道的……我……”他发现自己的嘴角微微抽动，似乎是在……苦笑？</p><p>　　女子沉默下去，良久，道：“别死了，何荻。”</p><p>　　仿佛一声晴天霹雳在脑中响起，他的脑袋好似要炸开一般。他无力地跪倒在地上。周围的一切迅速消失，化为一片无尽的空白。</p><p>　　何荻……</p><p>　　我是谁？</p><p>　　我到底是谁？！</p><p>　　他猛地睁开眼，从衣袋中掏出一枚老旧的怀表。他弹开表盖，此时时间是六点整，分秒不差。他视线上移，久久看着上面那张照片。那是一张合影，一家研究院门前，一个坐着轮椅的微笑着的男人怀抱着一个男婴。他翻身下床，轻敲三下墙壁，一面虚拟屏幕出现在墙上。他在屏幕上点了几下，一面虚拟镜面代替了屏幕。</p><p>　　他凝视着镜面中那个面无表情的少年，觉得一切都是如此的不真实。这是他第一次认真的审视自己。少年穿着一件普通的纳米长袖衫，左眼戴着一枚眼罩，墨绿色的右眼炯炯有神。他的皮肤略显苍白，头发隐隐有灰白色的痕迹。头发的灰白色每天都在加深，他猜测这和自己的病症有关。他死死盯着自己那张有些稚嫩的脸。</p><p>　　“我是方禾！”他像是要证明什么似的喃喃道。</p><p>　　良久，方禾离开了房间。</p><p>　　洗漱好的方禾在楼下的客厅见到了老师。此时，老师正笔直地坐在沙发上，一动不动地看着电视里星源集团那漫长的广告。老师已经很旧了，身上不少仿生皮肤早已脱落，露出下面的金属构造。</p><p>　　“你醒了。”ky-221用那毫无感情波动的声音说道，“过来，你先吃饭。”他指了指茶几上放着的几个自动餐盒。</p><p>　　方禾走了过去，他拿起餐盒，三下五除二便将那几个足有四个成年人饭量的餐盒吃尽。ky-221眼睛闪烁着红光，默默地看着方禾。</p><p>　　“吃饱了吗？”</p><p>　　方禾点点头。</p><p>　　“这个给你……”ky-221将一个盒子递给方禾，“打开看看吧。”</p><p>　　方禾打开盒子，里面放着一把老式手枪，以及十发子弹。看到手枪的那一瞬间方禾便认了出来，那是一把PE24，是罗克斯帝国几十年前制造的大口径电磁手枪。PE24的子弹使用的是第二代电磁推进技术，算是非常落后的技术了。在到处都是高能推进剂与第四代电磁推进的军火市场没有丝毫竞争力。十多年便退出了军火市场，属于老古董的级别了。</p><p>　　“里面那五发红色的子弹是单兵电磁脉冲弹①……”</p><p>　　方禾没有多问，他看着ky-221静静地听着。</p><p>　　“我是当年那个杀死你父亲方遒的杀手……”</p><p>　　方禾表情依旧平静，没有丝毫变化，仿佛ky-221说的一切都和他无关。</p><p>　　“这里是我的主芯片，”ky-221指了指自己的脑袋，“我没有提前备份……”说完，ky-221便沉默下来。</p><p>　　方禾默默地拿起手枪，退出弹夹，装上了一发脉冲弹。“咔塔”一声，他安好弹夹并迅速上膛。少年将这一切做的行云流水，没有丝毫卡顿。他举起手枪，瞄准了ky-221。他知道，当脉冲弹击穿ky-221的面部金属后，会释放出覆盖直径达三米的电磁脉冲，并对里面的主芯片造成不可逆转的损伤。</p><p>　　人类在制造武器的方面总是很拿手……</p><p>　　“照顾好自己……”ky-221的声音中似乎多了些什么，不再像往常那样冰冷单调。</p><p>　　ky-221话音刚落，房间内便响起了电流声。只见手枪的枪管中冒出蓝色的电光，巨大的后坐力让少年后退了好几步，这是他使用其他枪械时不曾有的。</p><p>　　这就是PE24被淘汰的原因吧。方禾默默地想着。</p><p>　　他收好手枪与余下的子弹，从衣帽钩上取下一件黑袍披在身上，便头也不回地离开了。</p><p>　　三个小时后，乘车离开郊区的方禾站在天谷区十三号太空电梯下，眺望着天空。一个小时前，他洗劫了一家地下军火作坊。方禾在那收获一笔购买船票与假证的资金。之后他便处理掉了那把手枪——他不可能带着手枪登上飞船。</p><p>　　方禾的身高与十七八岁的少年相仿，他自认为自己不会被警察当作离家出走的儿童带走。这次他要搭乘的是私人飞船，也就是俗称“黑飞船”的无证客运飞船，这种飞船审查不会太过严格，只要付钱就行。事实上，方禾的钱也只够坐这个……</p><p>　　太空电梯入口周围都是熙熙攘攘的人群，不时有女性嬉笑地对着方禾指指点点，说着什么“好可爱”之类的。这让方禾有些不知所措，他匆忙拉低兜帽，准备登入太空电梯。</p><p>　　就在这时，方禾心跳忽然微微加速，一股熟悉的感觉出现在少年的脑海中。方禾的身体下意识地四处张望，可他却并不知道自己究竟在寻找什么。</p><p>　　什么也没有发现。</p><p>　　方禾茫然地看着来往的行人，犹豫了一下，转身离开。不知道为什么，他总觉得心中有一丝莫名的失落感。就好像……错过了什么……</p><p>　　</p><p><strong>①人类与AI作战时使用的基本弹药类型，其产生的电磁脉冲能对AI造成有效杀伤。</strong></p><p>　　</p><h1 id="第三章-下帷之世，墟中藏也"><a href="#第三章-下帷之世，墟中藏也" class="headerlink" title="第三章 下帷之世，墟中藏也"></a>第三章 下帷之世，墟中藏也</h1><p>　　风，呼啸着。</p><p>　　漫天的黄沙被风裹挟着，“噼里啪啦”地砸在几辆黑色的吉普车上。吉普车周围稀疏地分布着几株枯针草①。不时有些不知名的小兽从枯针草底下的巢穴中探出头来，好奇地望向吉普车旁忙碌的直立行走的“古怪生物”。</p><p>　　那些古怪的生物约莫二三十个，酷似人类，不过身体被纵横交错的黑色金属包裹着。他们在一个深邃的地洞旁建起了几栋简易屋，而后拿着白色的金属造物在附近来回晃悠。</p><p>　　就在这时，最末尾的吉普车的车门悄无声息地打开，两个人类从中钻了出来。下车的两人神态各异。瘦高的那个下车便使劲抽了抽鼻子，不停地环顾四周，一脸警惕之色。身材微胖的那人压了压黑色的帽檐，笑眯眯地看着不远处的地洞。</p><p>　　“张老板，已确认此地是行动目标，目标内部无辐射泄露，无异常病毒。”一个小兽眼中的古怪生物小跑到壮硕男子面前，却是穿着机械外骨骼的大汉。</p><p>　　“嗯，去做好准备，五分钟后下去。”张老板点点头，掏出一支烟，点上，“此事很重要，不能出差错。办好了，我会亲自负责你们佣兵团第二阶段的改造项目……办砸了，哼……”</p><p>　　大汉打了个冷颤，道：“是。”说完，便快步离开。</p><p>　　“星源集团倒是大手笔……”瘦高个似笑非笑地看了张老板一眼，“要不要给我也加点好处？”</p><p>　　张老板轻轻吐出一口烟，笑道：“相先生，那是当然，星源不会亏待任何一个效力于它的人。只是待会进入实验基地时要多多仰仗相先生了……说起来这次我们的运气还算不赖，昨天的地震帮我们省了不少力气，想必今天的任务也会顺利完成的。”</p><p>　　相原瞥了张老板一眼，没有说话。自从他十几年前从那该死的AI手里死里逃生后，好运气似乎就再也与自己无缘。无论他做什么，总会出现些不大不小的意外。这也让他养成了事事谨慎的性格。不过，这些他是不会和雇主说的……</p><p>　　没过多久，佣兵们做好了最后的检查。</p><p>　　“张老板，准备好了，可以进去了。”一个佣兵喊道。</p><p>　　“相先生，不要让星源失望。”张老板眯着眼，拍了拍相原的肩膀。</p><p>　　与此同时，大约两公里外的一处小丘上，两个穿着沙漠迷彩的人正鬼鬼祟祟地趴在那。两人都很年轻，只是全副武装的他们比同龄人多了些许肃杀之气。</p><p>　　年龄更小的那个少年左眼戴着眼罩，略显灰白的发梢遮掩着不断重复着腐烂而后再生的脸颊。少年不顾身旁早已目瞪口呆的同伴，面无表情地往脸上喷洒生物凝胶。</p><p>　　“不是我说，方禾，你真没事吗？我周仁走南闯北二十多年，也自认见多识广，可我还从来没见过你这种病的。”少年身旁的年轻人感觉自己的世界观被刷新了。</p><p>　　方禾摇了摇头，平静道：“不是什么大问题，每年都有那么几天发病。”</p><p>　　“可……可你……”</p><p>　　“习惯了……”说完，方禾又沉默下去。</p><p>　　“你这个小家伙……”周仁无奈地叹了口气，嘟囔着，“新人类……”</p><p>　　周仁是夜阑共和国特殊部门的外部雇佣人员，专门接受官方雇佣解决一些他们不能亲自解决的事情，比如一些境外任务。猎户旋臂足够辽阔，大多数国家都没有办法兼顾所有地方，与民间势力合作成为了一个比较好的选择。</p><p>　　他与这个只有十三岁的少年是在一个桥洞下认识的。当时买完烤串的周仁路过那里时，正好看见了这个毫不费力地打倒几十个混混的少年。周仁那时便觉得自己捡到了宝贝，便兴冲冲地跑到少年面前一顿忽悠，希望能给自己找个徒弟，出师后能搭伙接单子。少年答应得很爽快，前提是要包吃住。</p><p>　　这对周仁来说并不是什么大问题——虽然这家伙的饭量远超一般人。只是让周仁没想到的是，这个少年虽然年纪不大，但在单兵作战领域却是各方面完全碾压自己。老实说这着实让他担心受怕了好几天，生怕自己拐回来了某个军方大佬离家出走的儿子……</p><p>　　虽然打不过这个小辈让周仁面子有些挂不住，但完成的单子却是真金白银。而且这小子还不要钱，这些足够让周仁偷着乐了。</p><p>　　周仁不知嘀咕着什么，举起望远镜观察着，道：“对方人数比我预估的要多一些啊……星源F-56通用型机械外骨骼……要不我们先留他一条狗命，下次再收？”</p><p>　　“你的情绪波动有些大，你……怕了。”方禾一脸认真地看着周仁。</p><p>　　“怎么可能……”周仁轻咳几声，以掩饰自己的尴尬，他严肃道，“小心驶得万年船，谨慎些总是没错的。”</p><p>　　方禾久久看着周仁，看得后者心里直发毛。良久，方禾点点头，认真道：“明白了。”</p><p>　　“嗯……那个胖子走了，那我们接下来要对付的是二十七个全副武装的雇佣兵和一个被多国通缉的新人类……我们还是回去吧……别那么看我，开个玩笑。他们留了两个人守在洞外……好吧，我有点紧张。”</p><p>　　周仁确实十分紧张，毕竟双方差距太大了。如果不是他打不过方禾，他早就把那小子打晕拖走了。</p><p>　　“相信我。”面无表情的方禾突然开口道。</p><p>　　“喂，你这张脸我完全看不出来你有没有信心啊……方禾，你先听我说。”周仁一脸紧张，他在迷彩服上擦了擦手心的汗，“我知道你很厉害，但是你体谅一下我啊。每次我们都是以少敌多……虽然都完成了，但我觉得再这么下去我可能会犯心肌梗塞的……”</p><p>　　方禾真诚道：“放心，我有分寸，不会让他们死得太难看的，这样应该不会吓到你犯病了吧？”</p><p>　　“不，我的意思是……”周仁看着一脸真诚的方禾，声音不自觉地小了下去，嘟囔着，“对面人太多了……”</p><p>　　“怕什么！”方禾大手一挥，认真道，“对方才二十八人，而我们有整整两个人！打围歼战都绰绰有余了！”</p><p>　　听了方禾热血的发言，周仁深刻地感受到了敌我之间的兵力差距，自己也跟着热血沸腾起来……也没再问方禾打围歼战“余”的那个人是谁……</p><p>　　“好，开工！”说完，周仁递给方禾一个手提箱。</p><p>　　方禾接过箱子，迅速打开，而后不停地从里面取出一些金属部件。不多时，一架电磁狙击枪便出现在二人眼前。</p><p>　　地洞外，两个无所事事的佣兵坐在简易屋旁，正小声骂着自己的新老板，粗鄙的词汇中混杂着放肆的大笑声。骂了一会儿的两人很快便感觉心情舒畅，话题不由自主地转到了其他方面。</p><p>　　“老赵，这趟干完你打算怎么办？”一个有些贼眉鼠眼的佣兵对着同伴一阵挤眉弄眼，“要不要我带你去爽爽？”</p><p>　　被叫做老赵的佣兵摸摸下巴，露出一个意味深长的笑容，道：“那感情好，在这破无人区待了快一个多月了，老子都快要闷死了。”</p><p>　　“那……”话音未落，贼眉鼠眼的佣兵的脑袋突然炸开，一片血雾飘散在空气中。</p><p>　　惊怒交加的老赵迅速反应过来，寻找可供隐藏的掩体，同时打开通讯器，吼道：“有……”还没说完，他眼前一黑，身体便失去了所有感觉……</p><p>　　没一会儿，举着突击步枪的方禾警惕地走在地洞里，或者准确的说，是走在一个被掩埋在地底下的废弃研究基地的走廊中。走廊望不到尽头，不知历经了多少年的灯还在不知疲倦地履行着自己的职责。</p><p>　　周仁被方禾留在了地洞外，负责接应工作。虽然周仁强烈要求一起下来，但方禾以实力不足为由坚决地拒绝了他。于是方禾便在周仁的抗议声中独自进入了这个研究基地。</p><p>　　此时，方禾举起左手在墙壁上敲了敲，紧接着竖起耳朵仔细地听着。声波顺着走廊回荡着，不多时，返回方禾耳中的声波在他脑海中构建出了一副简单的房间分布图。</p><p>　　“这里很大，”方禾打开了通讯器，“我没法探测干净。”</p><p>　　“嘿嘿，小子，还是得靠我吧。”通讯器中响起了周仁得意洋洋的声音。</p><p>　　正说着，一只细小的蚊虫从方禾眼前飞过，那是周仁的蚊式无人机。</p><p>　　“前方257米是一个大厅，无危险，等等……该死！怎么黑屏了？！我的无人机失联了！你大爷的！一架好几万啊！”通讯器中的周仁开始破口大骂，短短十几秒便亲切地问候了研究基地设计者家庭所有的女性成员，被吵得头昏脑涨的方禾不得不将通讯器声音调至最小。</p><p>　　没有理会发疯的周仁，方禾继续向前走着。没多久，方禾便来到了周仁所说的大厅中。大厅里十分杂乱，各种金属柜子横七竖八地倒在地上。柜子上覆盖着一层灰尘，没有翻动的痕迹，目标没有在这多做停留。</p><p>　　“方禾，后面我不能给你提供更多支持了。还有，待会你得帮我找找那架无人机……下面重复一遍任务目标情况。”</p><p>　　“相原，男，三十二岁。新人类，位于六国通缉名单四百二十一位。拥有丰富的格斗经验，特殊能力是强化嗅觉与行踪掩盖……也就是说，我的位置已经暴露了。”方禾毫无感情波动的念道。</p><p>　　“你……”忽地，通讯器传来一阵杂音。</p><p>　　警惕的方禾猛地向身旁扑去，却发现眼前一花，自己已然到了一间密闭的房间中。此时，通讯器也恢复了正常。</p><p>　　“刚才怎么回事？”周仁语气中透着一丝担忧。</p><p>　　“是短程传送，”方禾想了想，又补充了一句，“灾变前的技术。”</p><p>　　通讯器那边突然陷入了长久的沉默。就在方禾以为通讯器坏掉了的时候，一阵猖狂的大笑声又响了起来。</p><p>　　“哈哈哈……方禾，我们发了！灾变前的技术啊！我爱死你了！快快快，别管目标了，把那玩意带出来，我们这辈子就可以躺在钱堆里过日子了！无人机算个屁啊！”说完，通讯器又突然沉默下去，只有不时传来的几声傻笑证明着周仁还没被敌人干掉。</p><p>　　见周仁那么兴奋，一直没回答的方禾倒是没好意思告诉周仁那东西他带不出去——他不知道那装置在哪。</p><p>　　安静下来的周仁让方禾得以好好地打量着自己所处的房间。房间不是很大，所以并没有多少东西。整个房间里就一张桌椅，一台电脑以及——一具骷髅架子。</p><p>　　方禾走到那具骷髅前，捡起了掉落在旁边的一张金属铭牌。擦了擦，仔细看着上面的字迹。</p><p>　　墨馨，研究基地主任。</p><p>　　忽地，桌子上的电脑屏幕亮了起来。屏幕时不时闪烁着，一个视频文件被自动打开。画面中出现了一个穿着白大褂的女人，她的胸前挂着方禾手中拿着的铭牌。戴着一副黑框眼镜，表情不苟言笑。看背景，视频录制的地点应该就是这个房间里。</p><p>　　“战况越来越不好了，听说大部队已经溃败了……我们有一周联系不上其他的研究基地了，我们要战败了吗？”视频中的墨馨揉了揉额头，显得很疲倦。</p><p>　　画面突然一黑，紧接着又亮了起来。而画面中的墨馨眼圈通红，房间里多出了好几堆文件——这显然是过了一段时间之后拍摄的。</p><p>　　“我不知道是谁赢了，也不知道是谁在我死后来到了这里，但我诚恳地请求此时这个房间里的智能生命，能基于文明间共通的情感帮助我。”墨馨深深地鞠躬，“谢谢。”</p><p>　　紧接着，画面上划过一长串数字，方禾猜测那应该是翻译。</p><p>　　“这个程序还在运转，那说明基地能源供应还没断掉……”墨馨顿了一下，“我请求您能收养我女——”说到这，她的内心似乎挣扎了一下。她深吸一口气，似乎下定了决心，表情又变得冷冰冰，“——收养实验体1021，如果一定要做实验的话，请不要做那些会造成永久伤害的实验……研究基地的实验日志在电脑里，需要便取去吧。”</p><p>　　“到这里，请您注意，研究基地之后会启动自毁程序，十五分钟后这的一切将灰飞烟灭。请不要前往12层，也不要阻止自毁，我不能让我亲手创造的恶魔离开这里。拜托了。”</p><p>　　说完，她仿佛被一下子抽干了所有力气，瘫倒在椅子上。两秒后，视频结束。方禾走到电脑前，掏出U盘开始转移资料。就在这时，墙壁突然突出一块，一个长方体箱子伸了出来。</p><p>　　箱子不大，冒着丝丝寒气。收好U盘的方禾走了过去，发现箱子里是一个裹着冬眠服的婴儿。</p><p>　　“开始唤醒程序。”一道电子音响了起来，“预计十五秒。”</p><p>　　箱子里蓝色的冬眠液“咕噜咕噜”地排了出去，一个加装了针管的微型机械臂将一管药液注射入婴儿体内。“呲”地一声，箱盖缓缓打开。</p><p>　　“自毁程序启动，倒计时十五分钟，请工作人员有序撤离基地。重复……”</p><p>　　犹豫了片刻，方禾放下枪，从迷彩服上撕下几片布条，捆在一起。接着抱起还在沉睡的婴儿，将其绑在了自己背后。这时，通讯器中又一次传来了一阵杂音，方禾眼疾手快地抓起步枪，下一秒便出现在来时的大厅中。</p><p>　　尽管身体素质异于常人，但两次传送还是让方禾感到些许不适。强忍着恶心感，在周围检查了一遍，便准备离开。</p><p>　　“那什么，方禾，你那咋样了？刚才信号突然异常，没出什么事吧？”周仁有些焦急。</p><p>　　“没事，准备走了，这里要自毁了。”</p><p>　　“什、什么！”一声尖叫，方禾仿佛看到了周仁脑子一片空白，表情呆滞的样子。“我的钱！”周仁哀嚎道。</p><p>　　就在这时，方禾猛地举起步枪，毫不犹豫地对着大厅空无一人的另一端迅速开了三枪，而后躲在一个柜子后。</p><p>　　紧接着，一声惨叫从那端传来，衣物被血液浸湿的相原凭空出现在那。他捂着断掉的左臂，试图止住不断流出的鲜血，然后躲到一大堆杂物后。</p><p>　　“小子，我不管你是谁，快让开！别挡道！我可以不杀你！”被挡住去路的相原咬牙切齿地喊道。</p><p>　　没等回应，急不可耐的相原便拿着手枪对着方禾那儿不断开枪。而此时，虽然时间过去了还不到一分钟，但他左臂的伤口竟是隐隐有愈合的趋势。</p><p>　　微弱的电光在大厅中闪烁着，相原退回大厅的走廊那隐隐传来了嘶吼声。</p><p>　　听到嘶吼声，相原面色一变。急忙从身上掏出几粒药丸，然后全部吞了下去。紧接着，相原的表情变得异常狰狞，原本苍白的脸色逐渐红润，消瘦的身体也鼓起了健硕的肌肉。他重重地喘了口气，丢掉没了子弹的手枪，抽出匕首，便向出口冲去。</p><p>　　这时，方禾站在掩体后，面色平静地朝着相原不停开枪。</p><p>　　相原心中微微一惊，看着远处那个没有丝毫多余表情的小子，他又想起了十几年前那个冷冰冰的机器，那个专为杀戮而生的AI。这家伙的气息，还有枪法，都像极了他……不过，都无所谓了……</p><p>　　他冷笑着，加快了步伐。</p><p>　　子弹不断打在相原身上，却无一例外地被弹开。方禾扔掉步枪，从右腿的剑鞘中抽出短剑。此时，相原已冲到了方禾面前，他反握匕首，迎面便向方禾挥去。</p><p>　　方禾身体微微往后倾斜，有惊无险地避开了这一刀。紧接着，方禾死死抓住相原的持刀的手，握剑向他的心脏刺去。</p><p>　　相原猛地抬起腿，用膝撞挡开了这一剑。方禾见一击不成，抬起脚便施展了一记撩阴腿。他微微抬眼，却看见相原的脑袋向自己迎面而来……</p><p>　　两声闷哼同时响起，弓着腰的相原与捂着脑袋的方禾各自退后了几步。几个呼吸间，缓过劲来的相原抓着匕首向前挥去。只见寒光一闪，方禾躲闪不及，冰凉的刀尖飞速从脸上划过……</p><p>　　眼罩从脸上滑落，赤色的左眼展现出来。它似是有着自己的思想，如同危险的猎食者一般盯着眼前的敌人。</p><p>　　看到那只眼睛，相原竟是不由自主地颤抖着，如同被天敌盯上的猎物，生不起一丝反抗的念头。</p><p>　　逃！逃得越远越好！</p><p>　　心脏仿佛被一双大手紧紧捏住，刺骨的寒意让他惊惧连连，那是死亡的气息……</p><p>　　终于，相原再也抵挡不住这强烈的恐惧感，只觉得双腿一软，跪在地上。</p><p>　　反观方禾，他的情况也并不乐观。方禾的身体剧烈颤抖着，不断渗出的汗水打湿了衣物。左眼一阵阵刺痛，几股温热的液体缓缓划过脸颊。眼睛仿佛盖上了一层红玻璃，眼中的一切都是血红色的。</p><p>　　就在这时，一大群长相怪异的怪物嘶吼着从研究基地深处冲了出来。方禾瞳孔猛地一缩，他咬紧牙关，狠狠地踹在相原胸口。在方禾使出全力下，相原的胸膛瞬间就凹下去了一大块，整个人如同断了线的风筝一般轻飘飘地飞了出去，而后落到了怪物群中……</p><p>　　紧接着，方禾二话不说，转身就跑。人的生命在受到威胁时总是能爆发出惊人的潜力。几个呼吸间，方禾已然跑到了洞口，他大叫道：“周仁！”</p><p>　　“在！”周仁大声回应道。</p><p>　　只见一条粗绳被抛入洞中，方禾抓住绳子，三下五除二便爬了出去。他紧闭着左眼，抢过周仁身上的匕首，一刀切断了绳子，急道：“跑！”</p><p>　　虽然不知道为什么，但周仁的身体还是本能地跟着方禾飞奔起来。</p><p>　　两人就这么不停地跑着。就在周仁已经开始口吐白沫时，研究基地的方向突然响起了巨大的爆炸声。大地微微震颤，黑色的烟尘直冲云霄。</p><p>　　方禾眺望着地平线那头的火光，神情恍惚，他喃喃道：“我……我的记忆好像缺了一块……”他知道这是不可能的，这十几年的人生历历在目。只是……研究基地那怪异的熟悉感似乎让他发生了些许变化……</p><p>　　“方禾，你怎么满脸是血的。算了算了，别说了，应该死不了吧……对了，你背着谁家小孩？”此时，周仁躺在地上，一副半死不活的样子，“不会是你拐来的吧？不能够啊，里面哪有活人……要不卖了？没拿到那什么传送技术简直亏大发了！”</p><p>　　看着絮絮叨叨的周仁，方禾仿佛想通了什么，认真道：“那可不行，那个时代最宝贵的就是她了。”</p><p>　　周仁眼睛亮了起来。</p><p>　　方禾摇摇头，一把扛起还在试图劝说自己贩卖儿童的周仁，慢慢向远方走去。</p><p>　　</p><p><strong>①武原星玛卡沙漠中的一种植物</strong>。</p><p>　　</p><h1 id="第四章-那时"><a href="#第四章-那时" class="headerlink" title="第四章 那时"></a>第四章 那时</h1><p>　　方禾睁开眼，环视四周，是一处山洞。</p><p>　　如同之前一样，背后寒风呼啸，不时有被吹入洞中的雪花落在身旁。借着昏暗的光线，可以发现土壤已被大量的血液浸透，早已看不出本来的颜色。</p><p>　　落脚之处，是大片被染红的尸首。其中既有身着铁甲的人类，也不乏一些叫不上名字的古怪生物。</p><p>　　身前不远处，一个壮硕的人影盘腿坐在地上，胸口剧烈起伏。</p><p>　　这时，人影站了起来，缓缓道：“何荻，你现在没有办法杀了我，可我却能同化你。你最好不要再妨碍我。”</p><p>　　方禾，或者说何荻站在原地，一股黑色的液体从掌心渗出，逐渐构成一柄短剑。</p><p>　　“那些虫子和你我一点关系都没有，何必为他们豁出性命。”人影瞥了一眼地上的人类尸体，又警惕地看着何荻，“我只是为了复活我的文明罢了，不会毁掉这儿，我们之间没有利益冲突。”</p><p>　　何荻没有反驳，只是默默地看着人影。</p><p>　　“你在这里也生活了很久吧，那你肯定知道这些虫子有多么恶心。”人影露出一副厌恶的样子，“明明是同一种生物，却勾心斗角，互相发动无止境的战争。在一场它们的战争里我所见到的阴暗比我过去几千年里见到的还要多。这种生物猥琐的思想、低劣的行为以及那肮脏的发展史实在是让人感到恶心至极。就算没有我的干涉，这个族群也会因为自相残杀而灭亡。这些低等爬虫能够成为我的族群的温床，是它们的荣幸。”</p><p>　　“说完了吗？”何荻脸上没有丝毫表情，他好似自言自语道，“你这副高高在上的嘴脸……还真是叫人恶心啊。”</p><p>　　说完，空气中猛地响起了巨大的爆鸣声。眨眼间，何荻已然出现在一脸错愕的人影面前。一阵破空声，人影的脑袋转着圈飞到了空中。</p><p>　　“为……为什么？”人影的疑问姗姗来迟。</p><p>　　“谁知道呢？”方禾脑海中出现了一个模糊的身影，他感觉到这个叫何荻的家伙平静的内心起了一丝波澜，“大概……是我喜欢这个世界吧。”</p><p>　　忽地，无边的黑暗覆盖了整个视线。</p><p>　　方禾睁开眼，熟悉的老旧天花板映入眼帘。</p><p>　　这已经是他第十三次做这个梦了，一切都真实得可怕。那浓烈的血腥味，无比真实的触感，还有那令人感同身受的情绪……就好像自己身上确实发生过这件事似的。</p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小说 </tag>
            
            <tag> 儿时旧作 </tag>
            
            <tag> 科幻 </tag>
            
            <tag> 未完结 </tag>
            
            <tag> 星际 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>界临</title>
      <link href="/post/4a110023.html"/>
      <url>/post/4a110023.html</url>
      
        <content type="html"><![CDATA[<p>　　 “……即将迈入2043年……”</p><p>　　柜台上的收音机播放着今日的新闻，字正腔圆的中文孤零零地回荡在冷清的书屋中。</p><p>　　书屋有些昏暗，偌大的书屋里除了看店的王毅外空无一人。</p><p>　　忽地，书屋外传来了汽车发动机的轰鸣声。</p><p>　　王毅的视线从手中的报纸上离开，越过几排摆满了落满灰的经典文学作品的书架，看见了那辆熟悉的军用吉普稳稳停在书屋外。</p><p>　　他微不可查地叹了口气，一时觉得颇为头疼——那个该死的女人又来了。</p><p>　　驾驶座的车门被打开，一双皮靴踩在了地面上。紧接着，一道高挑的身影出现在书屋前。过路的行人纷纷驻足，侧目而视，心中却是惊叹世间竟会有如此美丽的女子。</p><p>　　女子剪着一头干练的短发，短发下若隐若现的白皙的皮肤在阳光下闪着珍珠般的光泽。如果不是年轻女子身上的军装有着非同一般的威慑力，只怕此时她的照片早已传遍整个网络。</p><p>　　唯一让人感到缺憾的——是她那双无神的眼睛与那略微僵硬的表情——行人们在心里哀叹着。</p><p>　　女子扶了扶帽子，环顾四周。行人们纷纷收回目光，匆忙离开，心中则思索着，待会要怎么在朋友面前吹嘘一番刚刚饱览的眼福。</p><p>　　女子从后备箱取出轮椅，拉开后座车门，抱出一个消瘦的少女，然后轻轻放在轮椅上。</p><p>　　少女约莫十七八岁的样子，俏丽的容颜比起身旁的女子不相上下。她身着一袭白色长裙，长发披肩，略微苍白的面容透着一丝疲倦。</p><p>　　如果此时有旁人在这的话，那么他第一眼注意到的肯定是她那双深邃的眼眸，以及眼中透出的极致的冷漠。紧接着是她的轮椅，任何一个人看了都会暗自叹息——一个好看的女孩儿双腿有疾是一件十分令人惋惜的事。</p><p>　　年轻女子脸上露出一副僵硬的担忧神色——姑且认为那是担忧吧。</p><p>　　她俯下身，在少女耳边说道：“局长，里面的空间隔绝了网络信号，进去后我会下降大概十分之九的智能。如果有人……”</p><p>　　“嗯……不用担心，他们的安保还不至于差劲到看不住我。”少女慵懒地摆了摆手，“好了，抓紧时间，我们要去拜访的人还有很多。走吧，玄姬。”</p><p>　　“是。”玄姬点点头，推着轮椅走进了书屋。</p><p>　　王毅看着来人，放下手中的报纸，忽然觉得自己此时的心情没有早上那么好了。虽然很不情愿，但客套话还是要说的。他勉强挤出一个笑容，说道：</p><p>　　“千大局长，早上好啊。”</p><p>　　“嗯。”千叶淡淡地回应道。</p><p>　　她从书架上抽出一本《平凡的世界》，轻轻拂去上面的尘埃，翻开看了看。</p><p>　　良久，千叶抬眼，似笑非笑地看着王毅，说道：“这么好的地段给你们经营成这样也真是难为你们了……要不就卖给我吧，怎样？”</p><p>　　“您……您还真是爱开玩笑啊……”王毅擦了擦冷汗，尴尬地笑着，心里把那个让自己顶班的同僚问候了一遍。同时又暗自埋怨自己太傻，稀里糊涂地就答应了。</p><p>　　“算了……张老爷子又出去了？”千叶又换上了副平静的表情。</p><p>　　她合上书，放回了书架。</p><p>　　“是，刚出去没多久。”王毅老实答道。</p><p>　　她抬起头，看了看从进书屋后就一直在愣愣地瞪着眼睛的玄姬，道：“看来他还是非常地不欢迎‘非人’啊……行吧，送我进去。”</p><p>　　王毅听到这句话时顿时如释重负。</p><p>　　这家伙终于要走了！</p><p>　　他脸上洋溢起灿烂的笑容，兴高采烈地说：“好的，您跟我来。”</p><p>　　……</p><p>　　1930年，时家老宅。叶琴站在古朴的大门前，心中感叹着时间的飞逝。</p><p>　　一下邮轮，叶琴便马不停蹄地从码头赶往这儿。短短几年的分别却让她觉得恍如隔世。叶琴理了理身上的裙子，提着小皮箱的手不由自主地握得更紧了。</p><p>　　她现在多么希望自己能立刻飞到相隔已久的恋人身边啊。</p><p>　　叶琴快步上前，举起手，准备敲门。</p><p>　　这时，大门却“吱呀”一声打开了。映入叶琴眼中的，是一个透着几分张扬的年轻人。年轻人戴着一顶黑色的圆顶帽，身上的西装看上去价值不菲。他侧着头，正对着身后的一名头发灰白的老人说着些什么。</p><p>　　紧接着，他回过头，愕然的表情窜到了那张棱角分明的脸上。而后，他回过神来，脸上的表情又被喜悦所取代。</p><p>　　“哎呀，叶小姐，你从英国留学回来怎么也不提前说一声，我和不待好去接你呀……需要我帮你提吗？”年轻人看着叶琴手中的箱子，殷切地询问道。</p><p>　　叶琴摇了摇头，开口道：“不用了，陈先生，我自己拿着就行。”紧接着，她又看向年轻人身后的老人，“王伯，不待在家吗？”</p><p>　　被称为王伯的老人微微叹了口气，说：“他还是老样子……”</p><p>　　陈文哲插嘴道：“是啊……不待还真是有够倔的，我怎么劝他都不听……话说起来如果当年不待同我们一起出国留学的话，现在也不会是这般光景。他终日捣鼓那些神神叨叨的东西，那里会有什么前途……”说着说着，他忽然意识到这么说似乎有些不大妥当，旋即撇撇嘴，不再说话。</p><p>　　“叶姑娘，还希望你能好好劝劝不待那孩子，我担心他……唉……”王伯无奈地摇了摇头。</p><p>　　叶琴脸上微微动容，道：“我会尽力的。”</p><p>　　陈文哲看了看二人，笑道：“那我就先行告辞了……对了，叶小姐，请问今晚你有空吗？我在一家西餐厅预约了位置……”</p><p>　　“抱歉，陈先生，我希望能尽早见到家父，所以……”</p><p>　　“瞧我这人……”陈文哲拍了拍脑门，歉意一笑，“是我考虑不周了。改日，改日我一定登门拜访，看望叶老先生。那么，先再见了，叶小姐。”说完，便招呼了辆黄包车，上车离去。</p><p>　　“王伯……”</p><p>　　“嗯，跟我来吧，叶姑娘。”</p><p>　　叶琴走进老宅，大门在她身后缓缓合上。</p><p>　　……</p><p>　　越过如水幕般的界膜，千叶已然来到了亚空间“桃花源”。尽管她已不是第一次来往于两个空间，但依然觉得有着些许不适应。</p><p>　　此时，千叶正位于一条狭长的青石走廊中。她的面前，站着一个身着黑衣的人。</p><p>　　走廊两侧挂着烛台，橘黄色的火光照亮了每一寸角落——这并不是这里的人喜欢复古装饰——而是亚空间中无法使用现代设施，这其中当然也包括了电灯。</p><p>　　千叶每一个感官都在细细感受着，能感觉到空气中有某种东西在缓缓流淌，其浓郁程度远远超过了主空间。千叶曾尝试过各种仪器，试图检测出这种被那帮古修称为“灵气”的物质，但每次都是以失败告终。还记得那个家伙曾经说过——</p><p>　　“这个世界是一片正在逐渐干涸的池塘，许多小鱼小虾在这里使劲扑腾着，做着些无谓而可笑的挣扎……大一点的鱼呢，就躲进了一处处水洼里……可是……”他脸上带着讥笑，“水洼有一天也会干的啊……”</p><p>　　说起来，这里的事情结束后，下一个要找的人就是那个家伙了呢。</p><p>　　想到这，她抬起头，看着面前那个脸上还带着一丝稚气的年轻人。</p><p>　　“我倒还真没想到会是你来呢……你之前的善良给我留下了很深的印象，顾林。”</p><p>　　年轻人腼腆地笑了笑，说道：“众生平等，妖怪也是一条生命……”正说着，他反应过来，急忙说，“对了，师傅和其他长老已经都在里面了，我们可别让他们久等了。”</p><p>　　“那就走吧。”</p><p>　　千叶拍了拍轮椅的扶手，僵着脸的玄姬随即推着轮椅，慢慢地跟在顾林身后。</p><p>　　……</p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小说 </tag>
            
            <tag> 儿时旧作 </tag>
            
            <tag> 未完结 </tag>
            
            <tag> 玄幻 </tag>
            
            <tag> 现代 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>漫夜终有星</title>
      <link href="/post/1bd7378e.html"/>
      <url>/post/1bd7378e.html</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-始"><a href="#第一章-始" class="headerlink" title="第一章 始"></a>第一章 始</h1><p>　　公元前1057年。</p><p>　　“武王伐纣，东面而迎岁，至汜而水，至共头而坠，彗星出，而授殷人其柄。”</p><p>　　——《淮南子·兵略训》</p><p>　　公元前613年。</p><p>　　“鲁文公十四年秋七月，有星孛入于北斗。”</p><p>　　——《春秋》</p><p>　　公元前467年。</p><p>　　“秦厉共公十年彗星见。”</p><p>　　——《史记·六国表》</p><p>　　公元前12年。</p><p>　　“元延元年七月辛未，有星孛于东井，践五诸侯，出河戌北，率行轩辕、太微，后日六度有余，晨出东方。十三日，夕见西方，……锋炎再贯紫宫中。……南逝度犯大角、摄提。至天市而按节徐行，炎入市中，旬而后西去；五十六日与苍龙俱伏。”</p><p>　　——《汉书·五行志》</p><p>　　在另一个平行宇宙中，有着一个和我们所在的世界一样的地球存在。而我要讲的故事就发生在那里。</p><p>　　在这个地球上，同样诞生了森林古猿，然后也一样进化成了人类，所有的历史进程与我们所熟知的一样，一切都按部就班地发展着，直到……</p><p>　　这颗被人类称为太阳的恒星已经默默地在这黑寂宇宙运行了45.7亿年了，在未来的50亿年里它还将继续进行这个单调而又枯燥的旅程。</p><p>　　在太阳周围，八颗行星孜孜不倦地围绕着它旋转。而人类的起源地就在那排列第三位的蓝色星球上，旁边还有着一颗叫作月球的小小卫星。</p><p>　　放眼宇宙，即使是被人类奉为神明的太阳也是一个极为普通的存在，而地球更是宇宙间一粒微不足道的尘埃。可此时的人类却还自大地认为地球是宇宙的中心，苍穹之上的亿万星辰都围绕着地球旅转……</p><p>　　黑石飞速地划过宇宙，留下一路尘埃，形成了一条长长的尾迹，不断在太空中闪烁。黑石不知道自己从何而来，也不知道自己的终点在哪。它只知道自己诞生在这片天地已经好久好久，身上还背负着一个它早已遗忘的使命。多年来的孤独让它内心麻木，只是随着自身的惯性在冰冷的黑暗中漂荡。</p><p>　　它是个无家的浪子。</p><p>　　突然，黑石感觉到自己被一股巨大的力量撞了一下。它慢慢地偏离了自己那亘古不变的轨道，向着那颗蓝色的星球飞去。</p><p>　　公元前1054年，一枚原本应该从太阳系边缘掠过便一去不复返的巨型陨石受到不明原因影响，被太阳的引力所俘获，成为其一颗新的卫星，周期性地围绕太阳旋转。陨石的运行轨迹与地球的运行轨迹相交，两者距离最近时，地面上的人可凭肉眼直接进行观测。</p><p>　　历史，悄然发生改变……</p><p>　　公元前208年，夜。</p><p>　　咸阳，观星台。</p><p>　　漆黑的天幕上，炯灿的繁星，如宝石一般镶嵌在黑幕中，一闪一闪的。徐徐的清风微微拂过，仿佛一双大手轻柔地抚摸大地。虽然刚刚入秋，但是这夜晚的风已经能让人感觉到一股微弱的寒意。草木在风中摇摆不定，发出“沙沙”的响声。仍依依不舍地留在树上的枯叶，也带着对自己母亲的不舍与眷恋，如飞舞的蝴蝶那般随风纷纷落下枝头。夜已深，百姓早已入睡，城内一片死寂，惟有打更人的号子在偌大的咸阳城内久久回荡。</p><p>　　“先生，您先去休息一会吧，后面的事就交给弟子来做吧。”一个穿着淡蓝色长衫的年轻人恭敬地对面前的老者说，“晚上冷风太大，容易着凉。先生您年事已高，还是要多保重身体啊。”</p><p>　　“无妨。”老者一脸沧桑，双眼紧盯着星空，“子忠啊。”</p><p>　　“弟子在。”子忠作揖答道。</p><p>　　“一转眼，我来到这观星台也有四十余载了，逝者如斯夫啊。”老者想起当初，无不感慨，“第一次见到飞星时，我还是个毛头小子。那时的景象直到现在还犹如昨天发生一般历历在目。现在我老了，只想在自己入土之前在见到它一次。”</p><p>　　“先生……”子忠担忧地看着老者。</p><p>　　“哈哈，别那么担心，老头子我还好着呢。”老者似乎是明白了什么，笑呵呵地说。</p><p>　　话音刚落，老者的气息忽然猛地一变，精神抖擞起来，大声道：“我感觉到了，它就要来了！子忠，快！准备记录！”</p><p>　　“是，先生。”子忠在昏暗的烛光中连忙拿出一卷竹简辅在旁边的桌案上，又拿起毛笔沾了沾墨水，准备着待会的记录。</p><p>　　这时，星空中突兀地出现了一个散发着明亮蓝光的星体，飞速地划过夜空。子忠急忙记录下来，毛笔不断在竹简上舞动，偶尔又被放入砚台。十几秒后，流星在夜空中消失。</p><p>　　那枚流星是如此明亮，尽管只在夜空中出现了十几秒，但就是这短短的十几秒内整个咸阳亮如白昼，在它的照耀下其他星辰显得黯淡无光。</p><p>　　“子忠，你看。它发出的光，它所有的一切，多美呀。”老者直勾勾地望着飞星消失的方向，痴痴地说道。</p><p>　　“是啊，先生。”子忠一边回应老者，一边将写好的竹简放在一旁晾干，并拿出新的竹简。</p><p>　　流星消失后不久，苍穹之上突然出现了无数通红的紧速向地面坠落的小陨石。它们将整个夜空照得通红，血红的天空显得妖异无比，仿佛神魔降世。但这些陨石大多无比微小，以致于还未落到地面便被汽化，所以从未给地面的人们带来损失（普通百姓不知道这点，他们一直认为这是众仙家的保佑）。</p><p>　　持续一段时间后，夜空中的异象逐渐消失，星空恢复成原本的样貌。子忠见状开始整理放在一旁晾干的竹简，小心翼翼地将它们收进书箱，并吹熄放在桌案上的蜡烛。</p><p>　　“老师，走吧，要下雨了。”子忠收拾好了竹简，背着书箱道。</p><p>　　“好，走了。”老者慢悠悠地走着，子忠缓步跟在后面，撑起了手中的油纸伞。这时，原本明朗的夜空在一瞬间阴云密布，一道闪电出现在天边。“轰隆”，巨大的雷声响彻在天地之间。乌云遮住了满天的星辰，遮住了它们无私洒向大地的光明。黑暗，成为了天地间唯一的颜色。</p><p>　　在这伸手不见五指的时候，子忠不慌不忙。“先生，等一等。太黑了，小心摔着。”他说完立马蹲在地上并从书箱拿出几样小物件一阵摆弄，点起了一盏烛灯，一束微弱的亮光出现在黑暗中，“先生，好了。”子忠站了起来。烛光虽然昏暗，但是勉强也能照亮前行的道路。</p><p>　　紧接着，如子忠所言，下起了大雨。雨“哗哗”地下着，豆大的雨滴砸到地面，在青石板辅成的小路上击起一朵朵水花。令人感到诡异的是，这雨水是血红色的，仿佛是浓稠的血液。可面对这一景象，一老一少竟熟视无睹，继续在雨中漫步。</p><p>　　果然还是和上一次一样，在“天火坠世”后下起了这怪雨。还记得那一次的怪雨下完之后，整个帝国范围内几乎所有生灵都发起了高烧（不知道山中野物和水生动物的情况）。那次大范围的瘟疫爆发的时候，虽然也有人死亡，但数量并不多。而且最让人摸不着头脑的是，瘟疫过后，那些农民饲养的瘦得皮包骨的牲畜也一夜之间变得膘肥体胖，力壮无比。野物更不用说，它们变得更加凶残，而且还懂得辨识猎人的陷阱和躲避他们的围追堵截，并设下陷阱坑杀猎人。</p><p>　　没错，设下陷阱！</p><p>　　而那些原本身患重病的人都神奇的痊愈了，没病的人身体也变得更加强壮，头脑更加灵活。就连始皇帝陛下也……不知道这到底是天神的馈赠还是来自地府的带毒的礼物……</p><p>　　老者闷闷地想着，这飞星到底还有多少密秘？他暗自下定决心：不管付出什么样的代价，一定要揭开它那层层伪装，得到最后的真相！</p><p>　　咸阳，皇宫。</p><p>　　房间里的烛灯都亮着，橙黄的光芒辅满了整个房间。光芒虽然明亮，却照不透已经年迈的始皇帝心中的阴霾。</p><p>　　始皇帝知道自己不应该活到今天的，他能苟延残喘到现在实属侥幸。其实他也不知道应该感激谁，感谢那场怪雨吗？如果不是那场怪雨，他本应该在那时就……</p><p>　　不，他是皇帝！在自己的帝国境内出现如此诡异的事情，怎么能不彻底调查，而是低头向它感谢……绝不可能！</p><p>　　“咳咳咳……”始皇帝已经感觉到自己大限将至，可他不甘心，不甘心啊！他舍不得自己一生的心血，放不下他的帝国。</p><p>　　突然，思考中的始皇帝发觉似乎有哪里不太对劲。这里似乎和平常不太一样了，到底是哪里？</p><p>　　对了，是声音！</p><p>　　始皇帝猛然醒悟。没错，太安静了，安静得有一丝诡异。平时的风声和虫鸣，此时消失得干干净净。</p><p>　　“噼啪”，不知什么掉进了烛焰里，爆起了响声。这声音在这空荡而又寂静的房间里显得犹为刺耳。这时，所有的烛焰像是得到什么指令一般，无风自动，摇摆得无比剧烈。房间内摆放的饰品的影子，也因此扭动起来，犹如群魔乱舞。</p><p>　　这时，房间正中央的地方出现了一些异常，那里的一切都诡异地扭曲着。始皇帝努力睁大自己那昏花的眼睛，想看个究竟。</p><p>　　“你这家伙，小日子过得还舒坦吧。”一道戏虐的男声从房间中央传出，可那却依旧空无一人。紧接着，一个看上去约莫二十几岁，穿着白色长衫的白发青年突兀地出现在那里。而那些烛焰也不再摆动。</p><p>　　始皇帝先是吃了一惊，可他毕竟是见过大世面的人，继而又平静下来。始皇帝充满威严地大声道：“大胆！尔怎敢直呼朕的名讳！来人啊！把此等逆贼拿下！”话音落下，房间内陷入沉默，白发青年仍戏虐地看着他。不知过了多久，仍没有任何卫兵前来救驾，始皇帝气得几乎要晕过去。</p><p>　　他咬牙切齿道：“你到底是谁！你对我的卫兵做了什么！”</p><p>　　“我可没对他们干什么。我只是暂时封闭了这个房间，让他们察觉不到这里的情况罢了。”白发青年笑了笑，“对了，忘记自我介绍了。在下谢无尘，方士。今天我来是要和你做一场交易。”</p><p>　　“交易？”始皇帝冷笑道，“你半夜闯进这里，就是要和朕做一场交易？”</p><p>　　“我知道你不甘心就这么放下帝国，我也知道你想要什么。”</p><p>　　“哼，徐福那老家伙也是够倒霉的，出海没多久就遇上了五头凡级异化兽……啧啧啧，我都有点可怜他了。”谢无尘嘴里说着可怜，脸上却满是抑制不住的笑意。</p><p>　　“你，你什么意思！”</p><p>　　“还听不出来吗？他死了！只有我能给你你想要的东西！”谢无尘拿出一枚蜡丸，丢给了始皇帝，“里面就是你日思夜想的东西。不过，这个只能给你续命十年……还有，这不是白给的，你要帮我革新帝国！”</p><p>　　始皇帝拿着蜡丸，盯着他道：“我凭什么相信你！”</p><p>　　“你也可以选择不相信我，但后果……”谢无尘冷笑道，“今晚我就会杀了你，你死后，帝国的生命也就走到了尽头。”</p><p>　　“无数被帝国欺压的百姓揭杆而起，帝国成为血与火的世界，到处都是死亡的气息！哈哈哈！”谢无尘颠狂地大笑，“然后我再去找下一个王朝的皇帝，总有人会答应的。”</p><p>　　“你！”始皇帝愤怒地盯着他看了许久，最后无奈地垂下高傲的头颅，“你要我怎么帮你？”</p><p>　　谢无尘又甩去几张薄薄的方片，说：“方法我已经写在上面，你照着做就行，必要时我会出手。”</p><p>　　谢无尘见始皇帝震惊地盯着那些方片，又开口道：“没什么问题我就先走了。”</p><p>　　始皇帝吃力地移开视线，道：“你刚才说的异化兽是什么？”</p><p>　　“上一次怪雨后，所有生灵的本源都被怪雨中的某种物质破坏后又重组，进行了无数次后，本源因此变得更加强大。异化兽就是普通野兽变异来的，我还听说不少地方出现了异人。”谢无尘笑了笑。</p><p>　　“另外，飞星每一次出现，天地灵气就会浓郁几分。吸收灵气后，它们会越来越多，越来越强，智慧也会越来越高。只有一个强大而统一的帝国才能抵御它们的入侵。”说完，谢无尘便缓缓消失在空气中。</p><p>　　第二日，始皇帝向天下宣告《罪己诏》，并大赦天下。又从各个方面进行改革，修改律法，查处违令官员……一切都进行得十分顺利。</p><p>　　之所以能顺利改革的主要原因是每当有反对的声音出现时，那些人都会在第二天神秘“失踪”，但众人对于他们发生了什么都心知肚明。于是乎，反对派人心惶惶，从此再也不敢发声……</p><h1 id="第二章-白宇"><a href="#第二章-白宇" class="headerlink" title="第二章 白宇"></a>第二章 白宇</h1><p>　　公元前203年，昆仑山。</p><p>　　“嗒嗒嗒……”，轻快的脚步声回荡在空旷的走廊里，谢无尘正漫不经心地走在这条长且阴森的走廊中。走廊两侧的墙壁上散发着淡淡的蓝色莹光，通过莹光可以看到墙壁上布满了壁画。壁画栩栩如生，可谢无尘却连正眼也没瞧上一眼。</p><p>　　没过多长时间，他便来到了走廊的尽头，这里是一扇高约三丈、宽一丈的青铜大门。青铜大门的边框上雕刻着许多不知名的动物，个个惟妙惟肖。</p><p>　　青铜大门的正中央，刻画着一个八边形的法阵，上面密密麻麻地写满了不知哪个朝代的文字。此时，法阵似乎是感觉到了谢无尘的到来，瞬时亮起了刺眼的红光。</p><p>　　“那些老家伙，以为这种货色就能拦住我吗？真是异想天开，看来下次得找个机会拜访一下他们了。”谢无尘语气轻藐地自语道。</p><p>　　只见谢无尘的双手快速结印，口中低声念着一些怪异的音节。随着最后一个音节从谢无尘口中传出，青铜大门上的法阵越来越亮，最后竟直接燃烧起来。不一会儿，法阵就化作点点星光消散在空气中。</p><p>　　在法阵消失的那一刻，不知经历了多少岁月的青铜大门顿时支离破碎，重重地砸在地上化为粉尘。</p><p>　　谢无尘跨过地上的粉尘，踏进门内。</p><p>　　门后是一个巨大的圆形洞穴，洞穴中央是一个高台，上面是一座八边形祭坛。祭坛的地面上，刻画着许多繁杂的线条。线条从八边形的八个角的顶点出发，最后汇聚在祭坛中央一个高约两尺的青铜柱上。</p><p>　　青铜柱上方两丈处，悬挂着一个两人高的冰块。八条有成年人手臂那么粗的铁链的一端死死捆住冰块，而另一端延伸到洞穴的石壁上，八根青铜钉将铁链钉死在上面。冰块不断冒出寒气，即使只站在门边，谢无尘也能感受到些许刺骨的寒意。</p><p>　　在祭坛的八个角那，各有一个手持青铜长剑、身披铠甲的骷髅。骷髅们单膝跪地，双手持剑刺进地面，低头面向祭坛中央。</p><p>　　看着祭坛，谢无尘嘴角微微翘起，自语道：“最后一处，终于找到了。”</p><p>　　突然，八个骷髅的眼眶中燃起了幽蓝的鬼火。紧接着它们迅速地拔出刺入地面的长剑，然后颤巍巍地站了起来。其颤抖之剧烈，让人生怕它们一不留神就会摔在地上散架。</p><p>　　“擅闯祭坛者，死！”一个骷髅提着长剑指向谢无尘，用沙哑的声音吼道。</p><p>　　紧接着，八个骷髅以明显不适合它们身体构造的速度，挥舞着长剑向谢无尘冲了过去。</p><p>　　“死灵禁术……”谢无尘深深地看了那些骷髅一眼，而他的右手“噼里啪啦”地窜起了拇指粗细的电弧，“有意思。”</p><p>　　在洞穴内亮起两次耀眼的蓝色光芒、传出浓郁的焦糊味后，八个漆黑的骷髅横七竖八地倒在地上，破裂的铠甲零散地掉在周围。</p><p>　　“真是弱呢……”谢无尘慢慢走向祭坛，仰头看向上方的冰块，“你也要阻止我吗？凭你现在这副人不人鬼不鬼的样子？”</p><p>　　“使命？你到现在还相信这种鬼东西吗？”谢无尘摇摇头。“我为了目的不择手段？”他轻笑道，“我们是同一类人，若不如此，你又怎么会以这个样子出现在这。”</p><p>　　“看在我们曾是挚友的份上，放弃吧。加入我，我替你解开禁术，我们还能像当初那样并肩作战。”</p><p>　　“哈哈哈，我错了？”谢无尘颠狂地笑着，“我哪里有错！区区一个东南岛国的百年国运换整个九州三十年太平，不值吗？”</p><p>　　“好，你若执迷不悟，那便来战吧！”谢无尘说道。</p><p>　　谢无尘话音刚落，他脚下便出现了一个巨大的八卦阵。法阵迅速亮起刺眼的金光，身处其中的谢无尘动作顿时凝固，整个人动弹不得。</p><p>　　“实力又强了。”谢无尘开口道，“不过……还不够啊！”</p><p>　　突然，一根铁链上又出现了一个正在快速念咒结印的白发青年，那正是谢无尘！而八卦阵中，一动不动的谢无尘化作一张金黄色的纸人，剧烈燃烧起来。</p><p>　　只见谢无尘周围浮现出密密麻麻的咒符，身上再次窜起强烈的电流，在铁链上向冰块飞奔而去。</p><p>　　不断有冰锥和闪着金光的法阵出现在谢无尘面前，但都被他一一击碎。终于，谢无尘冲到冰块前，一跃而起，淡然道：“樱，就让我送你进入轮回吧。”</p><p>　　比先前更加明亮的蓝光洒满了整个洞穴，冰块和它里面的东西——一具仿佛刚刚死去的女尸都渐渐化为虚影，消散在空气中，只剩下八根互相束缚的铁链孤独的荡在空中。</p><p>　　过了约莫一柱香的时间，谢无尘从洞穴中走出。并布下幻阵，防止有心人找到这。</p><p>　　最后一个祭坛也已经启动，十年时间，九州不会出现任何异族，足够自己去办剩下的事了。</p><p>　　谢无尘默默想着。他渐行渐远，留下一个孤独的背影。</p><p>　　公元1345年，陇西郡某福利院205室。</p><p>　　5岁的小白宇躺在他的小床上沉沉的睡着。月光从窗外洒进这个小小的房间，也洒在盖着淡蓝色被子的小白宇身上。月光中，小白宇的脸显得毫无血色。</p><p>　　小床边上是一张小木桌，木桌上胡乱放着几本旧书和一堆或新或旧的报纸。其中一张的标题十分醒目：</p><p>　　——陇西郡西北郊区9.19爆炸案</p><p>　　据帝国警方某知情人透露，今年9月19日在本郡西北郊区发生的特大爆炸，是由于化学品燃烧引起的。</p><p>　　警方已确认事故现场只有一名死者，死者是帝国著名学者白星夜。由于此案疑点太多，因此（下转第2版第3栏）</p><p>　　第二张报纸放在第一张旁边，上面的标题是:</p><p>　　——神秘病毒，或只针对高级学者？</p><p>　　从今年（公元1312年）七月份开始，一种神秘病毒迅速席卷全国，帝国高级学者大量死亡，而普通人却没有任何事情。</p><p>　　大众发现规律后，一时间报考大学的人数急剧下降。有关专家表示，此现象将严重拉缓帝国科技进步。</p><p>　　在这张报纸的左边，还有另外一张叠起来的报纸，上面一篇《“帝龙”号蒸汽飞艇首飞成功》的文章正好露在外面。</p><p>　　“9月5日，由高级技工张腾、阵法师夜锋与术士高奇联合打造的大型六旋翼运输蒸汽飞艇‘帝龙’号首飞成功！这是大秦帝国首次在大型蒸汽飞艇技术上实现巨大突破，皇帝陛下亲自在众议院对三人进行嘉奖。</p><p>　　‘帝龙’号靠6个以蒸汽为动力的巨大旋翼及3个大型浮空法阵——”</p><p>　　这篇报道的其他内容都被一本红色的小册子遮住了。小册子上印着醒目的文字：</p><p>　　国土资源部授权出版</p><p>　　——南北土地开发宣传手册</p><p>　　为了尽早实现南北新区尽早繁荣，国土资源部决定实施以下政策。</p><p>　　只要您决定去极北之地（西伯利亚）、东瀛郡、南洋各岛或南洋洲（澳洲）生活，您就可以选择前往您所在地的政府办理相关手序。只用花100文钱您就可以在上面任意一个地方得到3300亩的土地5年的使用权，在那连续耕种5年，5年后土地将完全归您……</p><p>　　小白宇在睡梦中哼了哼，翻了个身，整个人几乎要掉到床下，但是他没有醒。</p><p>　　在床头的墙上贴着一张海报，海报的一角已经脱落。上面画着几个持刀士兵冲向一只犬形异化兽，海报底边是四个大字：参军卫国！</p><p>　　“父亲，您在做什么？”小白宇好奇地问在实验室里忙碌的父亲。</p><p>　　“哈哈，我的小白宇来了。”白星夜笑了笑，指着桌子上的一根玻璃棒，“你摸摸看什么感觉。”</p><p>　　小白宇撇撇嘴，不知道父亲又在搞什么。他伸手摸去，一股麻麻的感觉传遍全身，头发根根竖立起来。被吓了一跳的小白宇生气地说：“父亲是坏蛋……”</p><p>　　画面一转，小白宇站在父亲的实验室外，里面传出父亲的笑声。“成功了，我成功了！”白星夜高兴得像个得到了糖果的小孩，满面都是抑制不住的喜悦。</p><p>　　他将小白宇叫进实验室，一起分享他的成果，也不管小白宇能不能叫懂。在小白宇眼中，父亲手里拿着一支紫色药剂，叽里呱啦的不知道在说些什么。</p><p>　　就在小白宇困得想睡觉时，外面的铁门响起了震耳欲聋的撞击声。白星夜面色一变，喃喃道：“来不及了……对，就这样。”他拿起一支注射器，抽出紫色药剂，接着注射进小白宇体内。</p><p>　　“这是全帝国学者的希望，保护好它，保护好自己。你马上从密道离开，我随后跟上去。”白星夜看着他说。</p><p>　　小白宇从未见过父亲如此严肃，他点点头。白星夜推开一个书柜，露出了一个黑漆漆的地道。“快走。”白星夜催促道。</p><p>　　小白宇跳下去，回头看了一眼，地道又堵上了。小白宇在地道里拼命地跑啊跑，不知跑了多久，累得虚脱的他终于看见了光亮。</p><p>　　他激动地爬了上去，却听见远处传来一阵猛烈的爆炸声。</p><p>　　那是他家的方向……</p><p>　　“不！”满头大汗的小白宇惊醒过来，不停喘着粗气。小白宇的眼睛慢慢变得通红，眼泪止不住地流下。</p><p>　　第一缕晨光从窗外洒进房间，到处都是耀眼的金黄色。</p><p>　　天，亮了。</p><p>　　平复好心情的小白宇立即下床洗漱，今天是个重要的日子，不能迟到。</p><p>　　关于自己为什么会在这个福利院，小白宇也问过院长。和善的陈欣女士说当时晕倒的他是在福利院门口被发现的，其它的她也不是很清楚。</p><p>　　穿戴整齐，走出房间。此时走廊里已经挤满了孩子，大家都涌向操场。突然，毫无防备的小白宇被人一把拉进一个阴暗的角落。</p><p>　　适应光线后，小白宇看清了是谁在拉他。那是三个12岁的半大孩子，领头的那个上下打量着他。</p><p>　　“小子，知道今天什么日子吗？”领头的孩子说。</p><p>　　“知……知道。”小白宇小声地说。</p><p>　　“小白脸，你给我听好了。”领头的孩子冷笑地说。“待会你最好站在队伍后面，否则……”他挥了挥拳头，“我知道你很讨院里的人喜欢，所以你就安心留在院里，别跟我们这些可怜人抢那被领养的机会……听懂了没有！”</p><p>　　“听……听懂了。”小白宇怯懦地说。</p><p>　　“那就好。”领头的孩子笑了起来，拍拍他的肩膀，带着跟班走了。</p><p>　　不一会儿，小白宇来到了操场上。不大的操场上聚满了孩子，他们排成一个方阵，抬头挺胸，神情严肃，像是准备接受检阅的士兵。</p><p>　　小白宇默默走到队伍末尾站好，低头看着地面。</p><p>　　这时，一个老者在院长陈欣女士的陪同下走了过来。看到是个老头，不少孩子心里都很失望，但都没有表现出来。</p><p>　　“赵先生，这些都是本院收养的孩子，他们平时都很懂事的。”陈欣道。</p><p>　　赵义云点点头，看向孩子们。“孩子们，听好了。”赵义云笑容满面，“首先，我不是一个富有的人。其次，我也不是来领养你们中的任何一个的。”</p><p>　　看着失望透顶的孩子们，赵义云依旧微笑着，他接着说：“今天，我是来这收一个学徒的。学什么呢？很抱歉，现在还不能告诉你们。对了，当我的学徒是包吃包住的。当然，平时要干活，十八岁毕业，不提供就业岗位。那么，有谁要报名呢。”</p><p>　　说到这，大部分孩子都对此不感兴趣了，于是便三三两两地结伴走了。此时，只剩下白宇、威胁白宇的孩子的领头和一个女孩还站在操场上。</p><p>　　赵义云看着他们，笑着问：“你们三个要报名？”</p><p>　　三个孩子点点头。</p><p>　　“先自我介绍一下吧。”</p><p>　　“我叫黄岩，十二岁。”那个领头的孩子抢先道。</p><p>　　“我叫王婷，十岁。”女孩答道。</p><p>　　“我叫白宇，五岁。”白宇腼腆地笑了笑。</p><p>　　“可我只要一个学徒……”赵义云露出一幅难办的样子，“要不，我出几道题，你们三个比一比吧。”</p><p>　　“好。”三人答道。</p><p>　　“听好了。如果佣人出现，他将被发现；如果他被发现，他就会受到询问；他如果受到询问，他将回答问题，他的声音可以被听到。如果未看到佣人也未听到他的声音，他一定在工作；如果他在工作，他一定会出现，但没有人听到佣人的声音。结合问题，以下哪一项能够成立？一.佣人被问。二.佣人不被问。三.未看见佣人。四.看到佣人。五.以上全不是。”</p><p>　　听完问题，三个孩子苦苦思索起来，却没注意到赵义云在旁边偷偷笑着。</p><p>　　此时头脑简单四肢发达的黄岩内心是崩溃的。他看了看另外两人，不像能想出来的样子，心里轻松不少。</p><p>　　突然，一道稚嫩的声音响起：“是五！”</p><p>　　赵义云和黄岩惊愕地看着这个只有五岁的孩子，呆呆得说不出话来。</p><p>　　过了一会儿，赵义云反应过来，又开口道：“只有小陈参加，小王和小张才会一起吃饭；而小陈只到她家附近的酒店吃饭，那里距市中心几里路远；只有小王去，小宋才会去酒店吃饭。如果上面的资料是对的，下面哪一条也一定对？一.小宋不与小陈在酒店一起吃饭。二.小王与小张不会一起在市中心吃饭。三.小王、小宋和小张不在酒店一起吃饭。四.小宋不在市中心的酒店吃饭。五.小张不与小宋、小陈一起在酒店吃饭。”</p><p>　　“二！”这次白宇只想了一会便说出答案。</p><p>　　“好，好，好。”激动的赵义云一连说了三个好字，“就是你了，你愿意成为我的学徒吗？”</p><p>　　“愿意。”白宇毫不犹豫地答道。</p><p>两小时后，白宇跟着他的老师离开了这个他生活了一个月的福利院。</p><h1 id="第三章-安布烈战役（上）"><a href="#第三章-安布烈战役（上）" class="headerlink" title="第三章 安布烈战役（上）"></a>第三章 安布烈战役（上）</h1><p>　　安布烈城位于克鲁斯城东北方向。同克鲁斯城一样，安布烈城也是一座新兴城市。过去这里以发达的手工业而闻名，来往商客络绎不绝。现在这里，至少是城门这边一片死寂，没有丝毫生气。</p><p>　　除了经济发达，这里的地理位置使得这座年轻的城市十分重要。安布烈城的城门建在一条峡谷里，两面陡峭的地形使得进出只能通过城门。峡谷口呈喇叭形，靠近城门处小，向外逐渐增大。而走到城门前的路，是一片沙子构成的缓坡。如果有人或兽想攻下这座城，还要好好掂量掂量。</p><p>　　安布烈城城外。</p><p>　　一排排穿着银甲的士兵整齐地站着，等待军团长的下一步指令。这是本地区的驻军圣骑士军团，每名士兵皆为在战争中幸存的老兵。装备精良，训练有素。虽只有区区两千人，但气势却犹如千军万马。</p><p>　　圣骑士军团是一支多兵种混编军队，主要由重装骑士，轻重步兵，弓弩手及战斗施法队构成。其中负责突击的重装骑士更是人手一套附魔装备。</p><p>　　营地帐篷中，军团长乔纳紧盯着桌子上的安布烈城地图。对于接下来要发生的战斗，乔纳感到异常兴奋。圣骑士军团本身就是为了消灭异化兽而成立的，可以说是灭兽专业户。</p><p>　　在来到这里之前，圣骑士军团已经参与了大大小小不下一千次的兽潮战役了。平时更是主动出击，前往各个异化兽占领区进行战斗。无数异化兽死在圣骑士军团的屠刀之下，以致于后来异化兽一看到圣骑士军团的徽章就远远躲开，避开这些令它们恐惧的人类。</p><p>　　“巨型异化兽……”乔纳喃喃自语，眼中满是对战斗的渴望，“我已经等不及了呢……”</p><p>　　这时，副官杰森快步走进帐篷，开口道：“军团长大人，赏金猎人的先头部队到了。”</p><p>　　“知道了，给他们安排好营地，让他们原地待命。”</p><p>　　“是。”杰森转身就要离开。</p><p>　　“对了，派进城中的侦查兵有没有什么消息。”</p><p>　　杰森停住脚步，无奈地说：“还是没有任何消息呢，也许被什么事情拖住了脚步。”</p><p>　　“也许他们已经阵亡了。”乔纳看着地图缓缓地说。</p><p>　　“这、这怎么可能呢。克里斯那几个家伙那么强……怎么会……”</p><p>　　这时，一个身着紫袍的男人匆匆走进帐篷，焦急地说：“联接侦查小队生命情况的魔法阵全都毁了，也就是说……”</p><p>　　“知道了，你们先出去吧，让我再想想。”乔纳面色凝重起来。</p><p>　　杰森与穿着紫袍的魔法师对视一眼，便离开了帐篷。</p><p>　　不知是不是心理作用，索特觉得天空越来越阴沉，营地里的气氛也略显凝重。直觉告诉他，这次的任务会死很多人。</p><p>　　索特摇摇头，不再去思考这些烦心的事情，又接着和眼前这位穿着白色长衫的白发东方人攀谈起来。</p><p>　　“嘿，谢。你是什么时候干这行的。”</p><p>　　“领取这次任务的时候。”谢无尘似乎感觉到了什么，转头看向安布烈城。</p><p>　　“你这么年轻就怎么强了，那像我……算了，不说这个了。这个女孩是你的亲人吗？可真是个安静的孩子呢。”</p><p>　　谢无尘看了眼旁边的吴恋。此时的吴恋没有戴着兜帽，一头金色的长发随风飘逸，斜刘海盖住了右边的脸，深蓝色的眼睛濯濯生辉。</p><p>　　谢无尘似乎轻轻叹了口气：“你说的没错，索特。”他对索特说道。</p><p>　　“敌袭！”巨大的声音突然之间响了起来，并传遍营地的每一个角落，所有人精神一振，收拾装备并看向安布烈城。</p><p>　　乔纳从帐篷中走出。只见安布烈城的城门缓缓打开，一片杂乱的身影从城门中鱼贯而出，浪潮般黑压压地向圣骑士军团涌来。</p><p>　　“那是……兽潮？”刚从营地后方赶来的杰森惊疑道。</p><p>　　“不，”乔纳摇摇头，“是人，死人。”</p><p>　　乔纳拔出他的剑，开始指挥士兵。“列阵！”传令兵的大嗓门又响了起来。</p><p>　　随着命令下达，一排手持钢盾的重步兵整齐地踏步向前。“砰”，沉重的钢盾重重砸在地上，繁复的符文在上面闪闪发光，一面面钢盾连成了一条钢铁长城。</p><p>　　轻步兵手持长矛紧随其后，走到重步兵身后站好。轻步兵后是五个弓弩手方阵。战斗施法队的十位魔法师站在用木头临时搭起的瞭望台上。</p><p>　　“一二推——”十几名士兵喊着号子推来了三门崭新的蒸汽大炮，停放好后，士兵们开始装填弹药。</p><p>　　“火炮准备——”</p><p>　　三门蒸汽大炮上的法阵同时亮了起来，尾部的机械装置开始飞快运转，泄压阀冒出一团又一团蒸汽。</p><p>　　“开炮！”</p><p>　　“砰”，震耳欲聋的声音猛地响起，三颗刻画着能量浓缩法阵的实心金属炮弹就飞速地向目标飞去。高速飞行的过程中，法阵越来越亮，能量源源不断向法阵聚去，然后进行压缩。几秒后，在炮弹落到地面的同时，法阵终于承受不住超负荷运转，浓缩后的能量迫不及待冲出法阵的束缚寻求自由。</p><p>　　“砰、砰、砰——”，三声猛烈的巨响伴随着耀眼的白光出现在战场上。被爆炸激起的尘埃逐渐随风散去，被炮弹击中的地方出现了三个巨大的凹面，凹面中形成了一层半凝固的晶体——玻璃。大量的残肢散落在周围，被炸上天的也纷纷落到地面。数量众多的敌人出现了三个圆形缺口，但没有几秒又被后续的填上了。</p><p>　　“长官，那些黑影好像是人类。”一个士兵大声叫道，这句话在士兵中引起一阵搔动。</p><p>　　那个士兵没有看错，在安布烈城下行走的确实是人类，而且还是本地市民与客商。只见他们手里拿着各式各样的东西：菜刀，棍子，干草叉与斧头，甚至还有的拿着刚才落在地上的残肢。从圣骑士军团这边看去，除了小部分人头上顶着铁锅与脸盆之类的东西外，其他人头上似乎也有个黑乎乎的东西。</p><p>　　他们满身血污，步伐极不协调的蹒跚前进。随着时间的推移，他们的动作越来越顺畅，开始奔跑起来。</p><p>　　穿着白色长袍的随军牧师笨拙地爬上瞭望台，高声道：“士兵们，那些有着人类面容的东西再也不是上帝的子民了。善良的市民们早已死去，现在是来自地狱的恶魔在控制他们的躯体。”</p><p>　　“英勇的圣骑士军团士兵们！”他的声音高昂起来，“用你们神圣的武器，去消灭这些无耻的恶魔，解放市民们受尽折磨的躯体吧！”</p><p>　　“杀！杀！杀！”士兵们振奋起来，武器敲在铠甲上“当当”作响。</p><p>　　“弓拏手准备！”</p><p>　　弓弩手们拉满弦，举起手中的弓弩。</p><p>　　“放！”</p><p>　　又是一声令下，天空中划过密密麻麻的箭矢。铺天盖地的箭矢准确地落在人群中央，不断有人倒下，又不断有人踏过同伴的尸体，悍不畏死地继续前进。</p><p>　　“火炮自由射击，施法队准备。弓弩手……放！”</p><p>　　人群中再次响起爆炸声，爆炸的高温、冲击波与激起的碎片不断在冲割着他们的生命。</p><p>　　“施法队准备——施法！弓弩手，三轮换阵型。投枪队、轻重步兵准备！”</p><p>　　瞭望台上的十位魔法师双手紧握法杖并低声念咒。他们的周围开始出现一些发出亮光的飘浮着的颗粒，这些颗粒便是魔法师经常挂在嘴边的魔法元素。</p><p>　　突然，离人群不远处的地方出现了一排雄雄燃烧的火焰，将人群所有的行进路线都封锁起来。</p><p>　　没有犹豫，没有惨叫，人群依旧冲向火焰。大量着火的人倒在阵地前，与之成为焦炭的还有他们头上那不知名的东西。</p><p>　　火焰随着魔法师的力竭渐渐熄灭，可人群依然没有停下。因为距离的原因，大炮已失去作用。可虽然如此，长矛与箭矢的威力依旧不容小觑。</p><p>　　时间不断流逝，再强壮的士兵也会感到劳累。终于，随着一声惨叫，防线出现了一个短暂的缺口。</p><p>　　“啊！”一个奋力挥动长矛的士兵惨叫起来。此时他的头上正扒着一只全身甲壳的怪虫，怪虫那巨大的口器轻而易举地刺穿他的头盔与脑壳，深深地刺进了他的脑袋，这怪虫便是那在市民头上的不知名的东西。</p><p>　　那个士兵开始抽搐，怪虫口器中的神经管不断挤压他的大脑皮层，并释放各种激素。此时，那名士兵挣大的眼睛中只剩下眼白，嘴中不停流着口水，脸上满是挣扎的神情。</p><p>　　“快，杀、杀了我。”士兵用已经变调的声音吼道，“啊！”</p><p>　　他挥起长矛就要向旁边的士兵捅去。突然剑光一闪，半条怪虫与半个脑袋掉在地上，而士兵的躯体重重砸在地上。</p><p>　　“啪唧”，乔纳一脚踩死了那条还在不停扭动的怪虫，大声说：“继续战斗，都给我小心点。”</p><p>　　这时，散发着绿色光芒的六芒星阵出现在士兵们的脚下，他们的体力在慢慢恢复。这是辅助系魔法——“来自半神托德的馈赠”，主要起增强力量与恢复体力的作用。在魔法的加持下，阵线再次稳固起来。</p><p>　　“天啊，谢。那是什么？”索特惊叫道。</p><p>　　在他们不远处，也就是营地的后方，突然出现大量拱起的土堆。紧接着，土堆里钻出了一些长相奇特的怪物。这些怪物的双眼十分细小，似乎视力并不发达；泛着金属光泽的巨大前肢与它们短小的后肢构成了鲜明对比。</p><p>　　“噢噢——”，它们发出尖细的叫声向赏金猎人们冲了上去。跟在它们后面的，是大量被怪虫寄生的安布烈城驻军。这些怪虫没有露出自己脆弱的身体，而是藏在士兵的头盔中，这明显比营地前方的难对付。</p><p>　　一时之间，营地后方声音嘈杂起来。怪物的嘶吼声、人类的惨叫声；就地取材的木矛的破空声、昂贵的蒸汽枪的射击声……</p><p>　　“谢，我们好像被包围了……”索特的声音有些颤抖。</p><p>　　“没事，我们也去帮忙吧。一会儿跟紧我。”谢无尘左手牵着吴恋，右手浮现出一个金色法阵。</p><p>　　“谢，你是魔法师？”</p><p>　　“不，我是方士，东方一种古老的职业。”谢无尘微微笑道，突然又反手一挥，几个被寄生的人类顿时化为尘埃随风而去。</p><p>　　“你知道在什么情况下这些愚笨的怪物会这么聪明吗？索特。”谢无尘看了一眼索特。</p><p>　　“什、什么？”索特没有反应过来。</p><p>　　“在它们有一个指挥官的时候。”谢无尘又一次看向安布烈城。</p><p>　　“它们一定有一个指挥官，一种我们没有见过的智力型异化兽！”乔纳来回踱着步，愤怒地吼道。</p><p>　　他们这支获得了无数荣耀的军团要完了，被团团包围，要面对这无尽的怪物。</p><p>　　乔纳悲哀地想着。他提起长剑，怒吼着冲上前去与士兵们一起拼命砍杀怪物。</p><p>　　“妖将级？”索特惊疑道，“妖将级的异化兽？”</p><p>　　“不不不，索特。异化兽是由这个世界的本土生物变异而来的，远远达不到这个层次，它们最多只能达到天级。”谢无尘笑了笑。</p><p>　　“安布烈城里的东西是异族，不属于本世界。对了，还有这些，它们是异兽，跟着异族来的。”谢无尘漫不经心地再次杀死一头怪物。此时，怪物们已经开始有意识地避开他了。</p><p>　　天空在突然之间变得阴暗，安布烈城上空聚起了一团浓厚得可怕的乌云。“轰隆”，一道粗壮无比的闪电劈向安布烈城，城内响起了巨大的兽吼声。兽吼过后，又是几道闪电，此时的安布烈城被包裹在闪电之中。</p><p>　　“这、这又是怎么回事。”索特惊奇道。</p><p>　　“老天，或者你们的说法……上帝不喜欢这些外来的东西。”谢无尘脸色凝重起来，“不过，它以前只是一个纯淬的规则，现在的它或者该说他（她）似乎诞生了自我意识……不知道会产生什么影响。”</p><p>　　闪电持续了一段时间后，渐渐平息下来，乌云也慢慢散去，可兽吼声依旧在城中回荡。</p><p>　　“它还没死！”索特惊恐地说。</p><p>　　“确实，纵使来到这里让它受了伤，实力还被压制，可终究不是这么容易死的。”谢无尘淡然道。</p><p>　　“难道……难道我们就要死在这里了吗？”索特颓废地坐在地上。</p><p>“不，只要有人去杀死它，后面的就好办了。”</p><h1 id="第四章-安布烈战役（下）"><a href="#第四章-安布烈战役（下）" class="headerlink" title="第四章 安布烈战役（下）"></a>第四章 安布烈战役（下）</h1><p>　　“天啊，谢，你在开玩笑吗？有人能杀死上帝都杀不死的恶魔吗？”索特带着哭音，“难道真要死在这了吗？我还是个处男啊。最重要的是，我还没来得及向我家对门的埃米求婚呢。”</p><p>　　谢无尘没再理会这个老光棍的哭嚎。安布烈城内的兽吼已经消失，怪物的攻势又猛烈起来。</p><p>　　营地前方，圣骑士军团的防线从容不迫地逐步收缩，向营地中心后退。而由赏金猎人组成的松散组织，用溃逃来形容也不为过。一路丢盔弃甲，无心反抗，只有少部分人还在坚守阵地。如果不是乔纳派出一部分重装骑士来进行协助，恐怕这些怪物早就攻进了营地中心。</p><p>　　带着吴恋的谢无尘在怪物群中不断游走，疯狂地收割它们的性命。平复了心情的索特提着把大刀警惕地跟在后面，防备着那些根本就无法靠近他们的怪物。忽然，谢无尘感觉到吴恋的气息出现了一丝诡异的变化。</p><p>　　谢无尘松开手，拉着一脸蒙圈的索特飞快后退，然后停在不远处死死盯着吴恋。</p><p>　　“你这是干嘛，让她一个人站在那，待会孩子出事怎么办？”说完索特便要上前带回吴恋。</p><p>　　谢无尘一把抓住他的肩膀，紧紧拉着他：“别过去，危险。”</p><p>　　“能有什么危险？谢，你多虑了吧。”索特满脸不解地说。</p><p>　　就在这时，异变突生。只见吴恋眼睛逐渐变得空洞无神，呆呆地站在那，嘴唇微动，仿佛在低声念着什么。吴恋的身边出现了一行行绕着她旋转的文字与符号，一个六芒星阵出现在她的脚下。</p><p>　　与此同时，安布烈城上空出现了一个相同的六芒星阵，不过要比吴恋脚下的那个大得多。紧接着，法阵下方又出现了一副八卦图。八卦图疾速旋转起来，下方渐渐浮现出一个由碧绿色线条构成的复杂图案。</p><p>　　索特瞪大眼睛地想辨识出那是什么图案，可那个图案周围像是弥漫着一层雾气一般，无论怎么看也看不清楚。盯得久了，索特有种头晕目眩的感觉。</p><p>　　谢无尘有些惊讶地看着那个图案，不知在想些什么。在谢无尘眼中，那些线条构成了一个碧绿色的巨大眼睛，凝视着安布烈城。</p><p>　　似乎是感觉到了什么，前一刻还在疯狂屠杀人类的怪物都不约而同地停了下来。面向吴恋低头跪在地上，身体不住地剧烈颤抖，仿佛看到了什么令它们恐惧的东西。几只距离吴恋最近的怪物“呜呜”地叫着，它们那皮糙肉厚的身体上竟慢慢出现密密麻麻的血痕，血痕越来越大，紫黑色的血液不断地从怪物身上的血痕中流出。终于，“噗”的一声，怪物竟在某种不知名力量的影响下炸成了碎肉，浓烈的血腥味弥漫在空气中。其它的怪物颤抖得越发激烈。</p><p>　　“这……这……”索特看着这诡异的一幕，说不成一句完整的话来。</p><p>　　“不管是怎么回事，现在是我们反击的最好时刻。”谢无尘瞥了他一眼，接着口中默念咒文。紧接着，怪物身上冒出红光，红光越来越亮，最后怪物燃烧起来，逐渐化为灰烬。</p><p>　　“你们这些人还在想些什么，动手啊！”索特吼道。</p><p>　　原本愣愣地看着这一切的人，都纷纷反应过来，怒吼着杀向离自己最近的怪物。几分钟后，地上到处都是怪物的残肢与血迹。活下来的赏金猎人们红着眼圈，拿着武器的手慢慢握紧。</p><p>　　该死的畜生！我一定！一定会把你们给通通毁掉！所有的人在心里怒吼着。</p><p>　　生死无常，赏金猎人的生活就是这样。也许你的同伴几息前还嘻嘻哈哈地和你吹牛，几息后却成为一具冰冷的尸体。逝者已逝，生者代他们继续前行。</p><p>　　就在这时，安布烈城上空的法阵亮了，这是法阵启动的前兆。乌云快速向法阵聚拢，里面传出一阵阵的雷声。空气似乎变得燥热起来，重装骑士们的马焦躁不安地来回踏步。云层中隐隐传出低语声，一会儿似诸神的教诲，一会儿仿佛神佛的诵经声，一会儿又变成伴随着鬼哭狼嚎的恶魔的低语声……</p><p>　　低语声出现的那一刻，营地内除了谢无尘与乔纳以外，所有人都感觉自己承受了极大的威压。他们必须要集中精力才能克制想要下跪的冲动，更有甚者直接晕了过去。</p><p>　　突然，从法阵中射出一道巨大的能量束，击中了安布烈城的某一处。与此同时，城中响起了巨大的兽吼声，没几秒又平息下去。此时若有还有能力感应城内情况的人，就会发现原来在城内的一股极强的气息，此刻已消失得无影无踪。</p><p>　　能量束逐渐变小，最后与法阵一起消失。天空中不再传来低语声，所有人都感觉身体一松，便瘫坐在地上。</p><p>　　吴恋脚下的法阵也慢慢消散在空气中，她身子一软就要瘫倒在地上。谢无尘一挥手，几个法阵出现在吴恋身边，扶住了她。</p><p>　　谢无尘若有所思地看着吴恋，接着抬头望天，自语道：“看来你已经有了自己的计划了，还是不能小看你啊……那么以后我不仅要与异族斗，还要与你这老天斗上一斗了。”</p><p>　　他低头看着自己的左手掌心上那不断加深的黑色符纹，苦笑道：“时间真的不多了呢……”</p><p>　　后勤队开始忙碌起来。</p><p>　　“都别愣着，快去把死者的名牌收集起来……尸体集中火化，快！爆发瘟疫你们负得起这个责任吗！”刚刚结束战斗的乔纳顾不上休息，便风风火火地在营地里奔走，指挥士兵搬运尸体。</p><p>　　安布烈城内，夜。</p><p>　　谢无尘带着醒过来的吴恋走在城市的废墟中。谢无尘知道它还没有死，必须要找到它，以绝后患！</p><p>　　越深入城中，建筑的毁坏程度越大。当谢无尘站在今天被能量束击中的地方时，看着已经成为平地的城区，他也不得不慨叹这一击的威力实在巨大。</p><p>　　在被击中的中心形成了一个大坑，被熔化了的各种物质形成了半凝固的炙热的熔岩。这种情况下，纵使异族的躯壳再怎么巨大、坚硬，也是留不下来了。</p><p>　　不过，即使躯壳被毁也不代表着它一定死亡了。异族难以被杀死，不仅仅是因为它们的生命力十分顽强，它们对危险的预知能力也非常强悍。在危险来临时，它们会如同壁虎断尾一般抛弃自己的躯壳，逃之夭夭。</p><p>　　一般来说，要想在这么大的一座城市中找到一个被重创了的异族，无异于大海捞针。不过……这只有些不一般啊。</p><p>　　谢无尘冷笑着，猛地转身，双手快速结出手印，一时周围亮起了金光。而不远处原本空无一物的空地上突然出现了一个在痛苦嚎叫的怪物。这个怪物只有婴儿大小，如同老鼠幼崽的粉色皮肤上沾满了某种黏膜和血迹，似乎才刚刚分娩出来。一双大而畸形的血红的眼睛恶恨恨地盯着谢无尘。</p><p>　　“恋，还可以施法吗？”谢无尘问道。</p><p>　　吴恋点点头，拂开了那挡住半张脸的刘海，露出了那如同绿宝石般的眼睛。</p><p>　　因猛烈喘气而胸口剧烈起伏的异族不由自主地看去，接着便如同呆滞了一般。它感觉周围的一切都在离它远去，脑中变得一片空白。</p><p>　　“殇，这个肥差你可得把握好，我好不容易才给你争取到的。”①一个巨大的秃鹫型异族说道，“作为先遣部队，好处可不少啊。”</p><p>　　血红的天空，黑色的岩石地表，是家乡！殇的内心温暖起来，虽然这种感觉是它们这个种族不应该存在的。</p><p>　　“你作为第一个进入那个世界的人，会受到全异界的敬仰，更能得到陛下的赏赐……”秃鹫用翅膀拍了拍他的肩膀，语重心长地说，“传送阵对我的阻力太大了，最合适的人选就是你了。这是我们部落的机会，成功的话，你和你母亲就能过上更好的生活了。”</p><p>　　秃鹫的这番举动让殇受宠若惊，它连忙说：“是，酋长。我一定会完成这次任务，绝对不辜负您的期望。”</p><p>　　殇呆愣地盯着吴恋的碧绿色眼睛，脸上露出了似乎是笑的表情。谢无尘走上前，手中出现了一团蓝色的火焰。他漫不经心地把火焰甩到殇身上，殇瞬间成为飞灰，随风飘散在空气中。</p><p>　　“只是个被忽悠来探路的炮灰呢。”谢无尘冷笑道。</p><p>　　第一个降临的异族，就怎么在家乡的迷梦中死去了。</p><p>　　谢无尘闭上眼，开口道：“你们藏了那么久，不累吗？”</p><p>　　无人应声。</p><p>　　“我的耐心是有限的……”射无尘睁开眼，看向不远处的一处废墟。</p><p>　　这时，原本没有任何活物的废墟那里，空气出现了轻微的扭曲，三个人影逐渐清晰起来。</p><p>　　不一会儿，三个穿着白袍的年轻人出现在谢无尘眼前。两男一女，为首的是一个脸上有道狰狞刀疤的男子。</p><p>　　三人上前作辑行礼，为首的男子开口道：“丙级监察使张灿见过前辈。这两位是在下的同僚，王忠平和岳瑶。”</p><p>　　“见过前辈。”王忠平、岳瑶一齐开口道。</p><p>　　“让我猜猜……你们是来寻我回国的，没错吧。”谢无尘道。</p><p>　　“是的，还希望……”</p><p>　　“时间到了我自然会回去，就不劳你们费心了。”</p><p>　　“可是，陛下说……”</p><p>　　“哼，”谢无尘冷哼一声，“帝琉璃那小姑娘行啊，当初赵政都不敢干涉我的行动，她一个刚登基的皇帝，就敢来管我了。”</p><p>　　“你，你是怎么知道……”</p><p>　　“怎么知道新皇登基？这天下可没什么事情能瞒着我……三天前，帝琉璃秘密登基，几乎整个帝国都不知道此事。她也是雷历风行啊，一登基便大刀阔斧地进行改革，组建新军，还成立了她直接领导的秘密部队——监察使，一支完全由来自全国各地的精英术士组成的军队。也就是你们，用于监视各界名流，执行特殊任务……她确实比上任强多了。”</p><p>　　“这……”张灿颇有些惊讶地看着他，“既然前辈已经知道了，那还请前辈离开西夷与晚辈一同返回大秦吧。”</p><p>　　“我说了，时间到了我自然会回去，”谢无尘抬头看了看天，“不过，现在不行。”</p><p>　　“可这件事很重要……”张灿有些急了。</p><p>　　谢无尘淡然地说：“那个计划不会成功的，我不会也没有能力帮你们。”</p><p>　　“可是……为什么，有前辈加入的话，妙语真人的研究一定能成功的！”</p><p>　　“这只是你们一厢情愿罢了。”</p><p>　　“不可能！”张灿坚定地说。</p><p>　　“在扭曲的信仰下诞生的产物只会走向毁灭……”谢无尘的语气依旧淡得像杯白水。</p><p>　　“胡说！什么扭曲的信仰……你就因为这种理由而不愿意尝试吗？！”忽地，张灿意识到自己的失态，连忙深吸几口气平复心情，“抱歉，我失礼了。”</p><p>　　“尝试吗？”谢无尘自嘲地笑了笑，“我又何尝没有试过，当年和王诩那家伙一起进行了‘墨’的实验，结果老家伙魂飞魄散，而我则是……”</p><p>　　突然，谢无尘右手飞速结印，三道金光击中了张灿一行人的脑袋。三人吓了一跳，一时之间，各种法阵在他们周围浮现。他们一幅如临大敌的样子，脸上流露出一丝迷茫的表情。</p><p>　　“都停下吧……”谢无尘轻叹一声，“今天说得有些多了。这些事情泄露出去对我没什么影响，但放在你们脑子里终究会对你们不利，还是忘掉了好。”</p><p>　　“回去吧。”谢无尘话音刚落，张灿三人脚下便出现一个金色法阵。一阵耀眼的光芒过后，人与法阵便一同消失在空气中。</p><p>　　“‘墨’……人格化的老天就是那时候出现的吧。”谢无尘喃喃道。</p><p>　　“有情况，”吴恋突然开口道，“灵能在快速增长。”</p><p>　　此时，天空中那轮金黄的圆月逐渐变得血红，如同鲜血滴在白纸上。不多时，血月如妖瞳般镶嵌在那和过去早已没有任何相同的夜幕上。一颗流星划过夜空，穿过血月……</p><p>　　“是飞星，离我们很远……看来情况又有些变化了。”谢无尘饶有兴趣地说道。</p><p>　　这注定是个不眠之夜。</p><p>此时，无论哪国、哪城，人们都能听见位于他们附近的异化兽聚集地不断传出巨大的兽吼声，终夜不止。人们惶惶不安，不停地猜测着原因，最后也只能带着不安入睡……</p><p><strong>①：此处为异族语。</strong></p><h1 id="第五章-繁星若尘"><a href="#第五章-繁星若尘" class="headerlink" title="第五章 繁星若尘"></a>第五章 繁星若尘</h1><p>　　“从别后，忆相逢，几回魂梦与君同。”古树下，一体态娇小的女子轻声吟诵着诗句。</p><p>　　古树够古，需要好几个人才能合抱的树干上青苔斑驳。微风拂过，墨绿色的树叶随风舞动。系满了枝干的风铃轻轻荡着，发出清脆的“叮铃”声。两只云雀扑棱着翅膀绕着古树盘旋，最后落在一段枝干上，相互依偎。</p><p>　　愁思，无尽的愁思，就连泥土的芬芳中似乎也掺杂着淡淡的哀愁。</p><p>　　凡心念，人憔悴，日夜思君不见君，伊人独诵几多愁。</p><p>　　女子双眼如一波秋水，可那绝美的容颜也掩不住她眸中的忧愁。她左手握紧剑鞘，右手缓缓将长剑抽出。女子静下心来，缓缓舞动长剑，步态轻盈地在古树下起舞。银光闪动，各式复杂的剑决被她行云流水地使了出来。</p><p>　　“嗒嗒嗒……”忽地，远处传来了轻微的脚步声。</p><p>　　女子停下手中的动作，细听微声。“嗡”，她甩出一个漂亮的剑花。只见银光一闪，长剑归鞘。</p><p>　　“陛下，”脚步声的主人是一名身着淡青色长裙的侍女，她微微欠身行礼，“方才我在宅中收拾时，拾到了这个古怪的小物件。”</p><p>　　侍女拿出一枚小巧的金属八卦图，将其递给女子。</p><p>　　女子接过八卦图，细细查看起来。八卦图只有指甲大小，微微发光，背面刻着一个“尘”字。看着那有些歪歪扭扭的字体，女子脸上终于流露出一丝微笑。</p><p>　　“是你吗？无尘。”女子喃喃道。</p><p>　　“陛下？”见女子有些出神，侍女试探着问了一句。</p><p>　　“嗯？”女子回过神来，脸上又恢复了已往的威严，“风婷，你马上去召集大臣，让他们前往议事堂。记住，别让多余的人知道。”</p><p>　　侍女愣了一下，紧接着答道：“明白了，陛下。”侍女行礼后快步离开。</p><p>　　寂静的议事堂里，暗红色的长桌前围满了人，这个不是很大的房间里此时挤满了帝国各界代表。</p><p>　　此时，一身华服的女子端坐在首座上。她双眸微闭，不知在想些什么。其他人你看我我看你，谁也不敢第一个开口去当那出头鸟。</p><p>　　沉默还在继续。</p><p>　　“琉璃啊，你有什么就说吧。”良久，一个苍老的声音在会议室中响起。</p><p>　　说话的是一位名叫文博的老人，他也是帝琉璃刚登基时为数不多的支持者之一。帝琉璃原本是几位皇帝候选人之中最不被看好的一个。不仅仅是因为她是名女子，还因为她只有二十几岁，实在太过年轻了。帝琉璃的反对者认为，她没有任何治国经验，恐难担此大任。而且帝琉璃身材过于娇小，任职皇帝有损皇家颜面。</p><p>　　后来不知什么原因，帝琉璃成功登基成为皇帝。而她任职后所施之策，虽触动了部分人的利益，但却大大改善了帝国的处境。</p><p>　　这让不少人改变了对她的看法，部分原本反对她的人也转为支持者。之后的公开露面，帝琉璃也因为良好的政绩和姣好的容颜得到了大批的民众支持，其中主要以年轻人居多。</p><p>　　“自安布烈城出现异族后，各地都有异族出现的报告……在座的各位都是有识之士，你们就没点想法吗？”帝琉璃说道。</p><p>　　“陛下，经过第39军的不懈努力，极北战区的三只异族已被全部击杀。当地军警正在全力围剿逃窜的异兽。”一个身披金甲的威严男人说道。</p><p>　　坐在男人旁边的一名无比娇媚的女子拿起桌上的茶杯抿了一口，笑了笑，缓缓开口道：“‘罪审’与‘曙光’已经开始实施，不过，这两个都是非常漫长的计划，不知道帝国能否撑到那个时候呢。”</p><p>　　“上官道长，帝国能不能撑下去就不劳你费心了吧。”男人看着她冷冷道。</p><p>　　“够了，有时间别拿来内斗。”帝琉璃严声斥道，然后轻轻敲着桌面。</p><p>　　一处灯光照不到的角落，慢慢浮现出一个模糊的人影，人影将一份名单放在帝琉璃面前，紧接着又退了回去。诡异的是，除了上官饶有兴趣地上下打量着人影，其余人皆是对人影视而不见。这张漂浮着的名单，众人也只当是某种术法。而威严男子则是皱着眉头，似乎是感觉到了什么。</p><p>　　帝琉璃拿起名单细细看着。良久，她开口轻声道：“都处理掉吧，别让人抓到把柄。”说完，手中名单燃起了火苗，逐渐化为灰烬。</p><p>　　“您说什么？”一个大臣问道。</p><p>　　“没什么。”她淡然道。</p><p>　　角落里，人影再次隐入黑暗之中。</p><p>　　文曲公寓，夜。</p><p>　　照明法阵发出柔和的淡黄色光芒洒满房间，照得冯栋心里暖洋洋的。妻子正在房间里给女儿讲故事，温热的饭菜还在桌上冒出阵阵热气，等着完成工作的冯栋饱餐一顿。</p><p>　　这是个温馨的小家。</p><p>　　虽然几天前听王文说有人想对自己不利，但他并不是很在意。他就是一个普普通通的大学老师，又能入得了哪个势力的法眼呢？</p><p>　　不过冯栋还是没能拒绝王文的强烈要求，允许他在公寓周围布置一番。冯栋知道，现在这栋小楼，已经布满了各式各样的法阵。此时，冯栋的上衣口袋里就装着一个小型信号法阵。只要他一启动，立刻就会有人冲上来。</p><p>　　“……大灰狼偷偷地来到了……”</p><p>　　冯栋一边享受着饭菜，一边听着妻子的故事。</p><p>　　“它大叫……”声音突然停了下来，像是瞬间被人掐断的广播，房间霎时寂静下来。似乎是想到了什么，冯栋心猛地一沉。他丢下碗筷，慌乱地跑向房间。</p><p>　　“夏……夏云……”当他紧张地来到门口，却愣住了。</p><p>　　夏云背对着他坐在床边，怀里正抱着一个小女孩。女孩闭着眼，似乎是睡着了。</p><p>　　“没事啊，刚才我还以为……”冯栋尴尬地笑着，同时心里松了一口气。</p><p>　　就在这时，发生了令冯栋毛骨悚然的一幕！</p><p>　　夏云的头缓缓转动一百八十度，面对冯栋露出了一个诡异的微笑。房间内的温度骤然降低，白雾随着冯栋的呼气不断出现。</p><p>　　不！不是夏云！</p><p>　　冯栋冷静下来，终于看清了那张脸。虽然与夏云有几分相似，但那绝对不是夏云！可如果那不是夏云，那真正的夏云在哪里！</p><p>　　那张脸逐渐腐烂，散发出恶臭的腐肉不停地往下掉落。</p><p>　　“猜……猜……我……是谁……桀桀……”阴冷的声音回荡在房间里，而房间内的真实景象也逐渐显露。</p><p>　　房间里到处都溅满了鲜血，碎肉散落在地板上，浓郁的血腥味不断刺激着冯栋的鼻腔。无需多想，冯栋立刻猜到了碎肉的主人是谁……</p><p>　　冯栋脑袋霎时一片空白，他呆呆地看着这一切。接着，一股不可遏制的怒气灌满了他身体的每一个角落。他想冲上前去，将那个怪物撕成碎片，却发现自己的身体无法动弹……</p><p>　　“混蛋！我要杀了你！我要杀了你！”他不停地吼道。</p><p>　　“桀桀……不要着急，马上就到你了……桀桀……”</p><p>　　公寓外。</p><p>　　“一组二组，都给我盯好了。”帝国密秘警察辽东郡分部负责人王文小声道。</p><p>　　该死的罪犯！</p><p>　　王文愤愤地想着。近几个月来，帝国境内的杀人案数量急剧增多，死者无一例外的都是有名的专家学者。这些事情的发生让警察们的压力骤然增大，每天全员加班加点但就是没有一点线索。</p><p>　　此时王文正和二十余名警察隐藏在一栋老旧的三层公寓周围。除他们外，还有三名监察使也参与了行动。当然，这件事只有他自己知道。他们已经在这蹲守五天了，可还是没有一点发现。</p><p>　　就在五天前，王文收到了一封匿名信，信中自称是凶手的家伙说几天后他要在文曲公寓再实施一起命案，目标是著名学者冯栋。</p><p>　　若是平时，王文绝不会理睬这种东西，但现在的情况由不得他不信。</p><p>　　王文看了眼公寓附近的楼顶，一组与二组的人就在那。几个警察正趴在那里，手里握着附魔式重型蒸汽枪，就等着罪犯出现然后给他来上一枪。作为军方产品，附魔式重型蒸汽枪的威力有目共睹。它在全力激发并命中的情况下，凡级乙等的异化兽也能被轻易抹杀。</p><p>　　“队长，信号消失了。”一个警察慌张地说。</p><p>　　“什么？！”王文又气又恼，“快，冲进去！”</p><p>　　公寓内非常干净，没有任何打斗的痕迹，警察们熟练地搜查着里面的每一个房间。终于，王文最不想看到的一幕出现了。</p><p>　　二楼房间中，散乱的碎肉与血迹飞溅得到处都是，浓郁的血腥味弥漫在其中。如果不是冯栋那残留着愤怒神情的头颅还保持完整，并被凶手端端正正地摆放在书桌上的话，王文他们还真不能确定死者是冯栋。</p><p>　　“可恶！这些混蛋！”王文怒吼道。</p><p>　　帝国西南部某荒原。</p><p>　　“臭小子，作业完成了没有，没有做完的话今晚的饭菜可没有你的份了！”赵义云的声音传遍整个石塔。</p><p>　　“知道啦，老师。”白宇无奈地回道。他拿起量尺和笔，继续在面前的草稿纸上画着某种复杂的法阵。</p><p>　　现在的白宇是一个摘星者学徒，从他离开福利院的那天起就和赵义云在这座叫“摘星观”的石塔中学习星阵的运用。那时，他知道了他的老师是一位天级丙等的摘星者。虽然等阶不高，却对星阵有着很深的研究，因此他也深受人们的尊敬。</p><p>　　摘星者是所有术法职业中最为年轻的一种。第一次飞星现世，天幕便悄然降临。它如一张幕布，盖住了整个天空，从此星空与过去不再相同。</p><p>　　与天幕同时出现的，是无数新的星辰，而那时便有人发现它们蕴含着某种未知的能量。于是，以星辰之力摧动的星阵和摘星者这个职业便一同诞生了。</p><p>　　摘星者与其他术士不同，他们是通过被他们称作“灵海”中的星尘来实现施法的。凡级，灵海中会形成七颗星尘，用意念将它们连成星轨，便可以成功施法。这个过程可以被外力打断，并且实力不同的摘星者连接的速度也不尽相同。地级则是星图，天级为星座……而学徒只能通过使用材料绘制星阵作战。</p><p>　　与其他刻苦便能有一番作为的职业不同，摘星者需要一定天赋。而白宇恰恰是那种没什么天赋的家伙……</p><p>　　十几年过去了，赵义云成为了个有些啰嗦的老头，平时经常抱怨白宇太笨。可虽然如此，赵义云还是很照顾白宇的。这些都让白宇感觉到了家的感觉。</p><p>　　摘星者的学习很枯燥，曾经他想过放弃。但老师对他说：“虽然天幕挡住了人们探索真正星空的脚步，但它也给了我们斩断黑暗的力量。年轻人，好好学习它的一切吧。”</p><p>　　“臭小子，距离饭点还有半个时辰，你最好快点，我可等不了那么久。”那透着不耐烦的声音再度响起，“还有，你的几何作业……”</p><p>　　“砰”，伴随着剧烈震动的巨大爆炸声突然响起，冲天的火光照亮了摘星观前的空地。白宇吃了一惊，他飞快跑下楼想去查看情况。</p><p>　　“别出来！”刚跑到楼梯口的白宇便听到了赵义云的吼声。他愣在原地，不知所措地看着赵义云。</p><p>　　此时的赵义云浑身是血，整条左臂不易而飞。他大口喘着粗气，苍白的脸上淌着豆大的汗珠。</p><p>　　“赵义云，做好死亡的准备了吗？”一个身着黑袍男子走了进来。</p><p>　　“我呸，你们这些人不人鬼不鬼的杂种，人奸，还想取我性命。”</p><p>　　“随你怎么说，我可不想和你浪费时间，待会儿还要去见另外几个家伙呢。”黑袍男子笑了笑，又举起了手中的短刀。</p><p>　　“等等，”赵义云的眼睛转了转，“你们组织收我这种老头吗？”</p><p>　　“哦，你想通了？”</p><p>　　“当然，我……”话音未落，赵义云突然暴起，他身边同时亮起五个星图。整个过程很快，他几乎是一眨眼就完成了五个星图的描画。星图互相交织，构成了一个宏伟的庞大星座。</p><p>　　一只由光芒组成的巨大手掌突然出现在黑袍男子身后，紧接着一把抓住了他。</p><p>　　“你竟敢……啊！”黑袍男子被淹没在刺眼的光芒中。</p><p>　　几秒后，光芒渐渐消失，赵义云仍戒备地盯着那里。</p><p>　　“你以为这就能杀了我吗？”伤痕累累的黑袍男子阴沉地笑着。突然，他飞速地冲向赵义云。一个呼吸间，他便来到赵义云面前，单手抓着他的脖子，将他提了起来。</p><p>　　“呵……呵呵，去……死吧。”赵义云吃力地吐出这句话。一个黑色星阵出现在二人之间，黑袍男子瞳孔猛地一缩，“你！”</p><p>　　一股强大的吸力以黑色星阵为中心出现在房间里，两人的身体以一种诡异的姿势越变越小，最后与星阵一同消失在空气中。</p><p>　　目睹了老师的死亡，白宇只觉得整个世界都在离他远去。随后赶来的警察的讨论声、记者嘈杂的询问声都没能将他拉回现实。他机械地回答了警察的询问，便双眼无神地坐在石阶上。直到一个自称是律师的人交给他一个包裹，他才微微回过神来。</p><p>　　包裹不大，里面放着一页叠得整整齐齐的信纸、一条蓝色的摘星者长袍、一本几何练习和几块魔晶石碎片。他缓缓展开那页信纸，轻声读了起来。</p><p>　　“臭小子，当你看到这封信时，那就证明我已经死了。不要想着为我报仇，你的实力还不够。还有，你小子不要以为我不在就可以偷懒了，把练习做完。钱要省着点花……”</p><p>无边的荒原上，年轻的摘星者学徒默默流下了眼泪。</p><h1 id="第六章-归乡"><a href="#第六章-归乡" class="headerlink" title="第六章 归乡"></a>第六章 归乡</h1><p>　　“各位尊敬的旅客，列车即将到达终点站陇西郡，请不要忘记自己的随身物品。”前往陇西郡的灵能列车上，乘务员的声音通过传音法阵传遍列车的每一个角落。</p><p>　　“真是神奇啊！”一个穿着蓝色摘星者长袍的年轻人坐在座椅上，脸上写满了惊叹。</p><p>　　车窗外不时闪过几棵枯树，偶尔能看见一两只四处游荡的异化兽。白宇知道，他离家乡越来越近了。他这次回来只为了两件事，一方面是和过去告别，重新开始新的生活。另一方面是为了从摘星者学徒晋升成一名真正的摘星者，而这需要他前往陇西郡的术士协会进行登记注册。</p><p>　　“年轻人，你是第一次坐灵能列车吧。”一个坐在白宇旁边的老人放下手中的报纸，笑呵呵地说。</p><p>　　“是的，老先生。之前我一直跟随老师在荒原中学习，从未出来过。”白宇答道。</p><p>　　“原来如此，”老人笑了笑，“那你到陇西郡后可得好好看看，这十几年的变化可不小。”</p><p>　　白宇点点头，道：“晚辈名为白宇，还不知道老先生贵姓呢？”</p><p>　　“墨家，宋槃。”宋槃道。</p><p>　　“原来宋老先生来自墨家啊，晚辈听闻墨家的机关术是帝国第一呢。”白宇激动地说。</p><p>　　“哈哈，”宋槃笑着摆摆手，“世人的误传罢了。”</p><p>　　“对了，宋老先生。晚辈方才发现灵能列车周围总会游荡着几只异化兽，它们会不会袭击列车啊？”</p><p>　　“它们确实会攻击列车，但你不必担心，列车的整条线路都有结界保护。另外，列车上都会有十几名随车术士，哪怕是妖将级的异兽也别想轻易毁掉列车。”</p><p>　　“妖将级？天级之上还有更高的等级吗？”白宇不解地问。</p><p>　　“那是自然。天级之上，人类与异兽的等级划分便不再相同。天级后的异兽等级为妖将，接着为妖王，最后是人类目前已知的最强异兽——君主！人类的等级划分与异兽有所不同，分别为战将、统领、寂灭，实力与异兽各等级一一对应……不过，这些等级划分主要是用于区分术士实力的。武者因为战斗方式与术士不同，所以采取另一种等级划分。”</p><p>　　“武者？”白宇有些好奇。</p><p>　　“嗯，武者。他们大多从小习武，很少或完全不使用术法，仅靠武技与自身体能作战。根据实力不同，武者分为四个大境界，分别是力拙、若愚、通幽、入神。每个大境界中又分为初阶、中阶、高阶三个小境界。可不能小看武者，虽然他们不精通术法，当自身实力强大。六百多年前，一个名唤酒剑仙的武者名动天下。他真名叫李白，对剑道有极高的造诣。他的成名技‘断三千’更是有一剑破万法的称号，当时不少英雄豪杰都败在他的剑下。”</p><p>　　“不过……”宋槃顿了顿，“不管是术法还是武技，都不是人类赖以生存的根本。”</p><p>　　“那是什么？”白宇疑惑地说。</p><p>　　“是智慧，”宋槃指指自己的脑袋，“数百年来，是无数先辈历经磨难创造出各式各样的法阵，才让我们人类能在这遍布异兽的大地上立足，这是绝对不能忘记的。”</p><p>　　“晚辈受教了。”白宇诚恳地说。</p><p>　　“列车即将到站，请各位旅客下车时不要拥挤，依次下车。”乘务员的声音再次响起。</p><p>　　白宇看向车窗外，地平线那出现了一条黑线。随着列车的靠近，黑线越来越粗，逐渐显露出它的真正样貌。</p><p>　　那是一面城墙。</p><p>　　蜿蜒的城墙巨龙般卧在平原上。城墙很长，白宇放眼眺望，却发现城墙根本望不到边。城墙之后矗立许多石塔，每隔一段距离便有一座。</p><p>　　石塔的塔顶发出明亮的光芒，光芒汇聚成光柱直击城市中心的上空。无数光柱汇集一处，强大的能量让空气都出现了轻微的扭曲。能量水幕般向四周散去，整个陇西郡都被这个巨大的结界笼罩在其中。</p><p>　　结界散发着淡淡的银色光芒，上面浮动着许多复杂的咒符。咒符颜色很浅，若不仔细看，很容易将其忽略。</p><p>　　白宇还是头一回见到这么大的结界，以陇西郡现在的规模来看，起码是百万人口级的超级城市，可眼前这个结界竟将整个城市都笼罩进去了！</p><p>　　不可思议！</p><p>　　白宇此时的脑中只有这四个字。</p><p>　　“这……这就是现在的陇西郡吗？”白宇目瞪口呆，“好壮观啊。”</p><p>　　“这还不算什么，有机会你去一趟神都，那里才是真正让人流连忘返的地方。”宋槃笑着说。</p><p>　　就在这时，一个发出蓝色光芒的东西从城墙上冲向天空。发光物体在空中缓缓散开，慢慢形成了一个巨大的蓝色光面。</p><p>　　“那是什么？”白宇问道。</p><p>　　“哦，那是异兽袭城的警报，”宋槃耐心地跟白宇解释道，“是最低等级的。为了更好地应对异兽袭城，帝国将警报分为四个级别，蓝色、橙色，赤色和紫色。蓝色最好处理，属于千级异兽袭城。橙色次之，是万级的异兽袭城。赤色，百万级别。老夫曾遇上过一次赤色警报，在象郡那……而紫色，那就是真正意义上的末日了。据老夫所知，紫色警报从设立以来就从没被使用过。”</p><p>　　“这样吗？”白宇若有所思。</p><p>　　列车开始入城，长长的车体迅速穿过结界。在车尾也进入结界内时，荡起圈圈涟漪的结界又逐渐恢复平静。</p><p>　　“哧”，列车在一阵轻微的摇晃后停了下来。</p><p>　　“宋老先生，那我们就此别过吧。”白宇道。</p><p>　　“下次还有什么问题你可以去神都术法学院找我。”宋槃说。</p><p>　　“好。”白宇答道。</p><p>　　下车后，乘客还需要经过检查才能离开。此时，白宇正百无聊赖地站在排队的人群中。</p><p>　　“下一个！”一个军官喊道。</p><p>　　“姓名，年龄……”一名士兵询问面前的中年男子。</p><p>　　中年男子没有回答，他声音低沉地笑了笑。</p><p>　　“这个不对劲！快趴下！”突然，负责检查的士兵吼道。</p><p>　　“飞星万岁！”正在接受检查的中年男子狂热地大喊，他猛地扯下外套，露出了藏在里面的魔晶。</p><p>　　魔晶成排地绑在他身上，上面刻画地能量浓缩法阵亮起了刺眼的光芒。</p><p>　　“啊！”现场骚乱起来，不少人更是直接晕了过去。</p><p>　　“哈哈哈，我将永垂不……”男子话音未落，额头上便赫然出现一个血洞。他狂热的表情凝固在脸上，身体重重砸在地上。</p><p>　　一团黑雾包裹住男子的尸体，不一会便一齐消散在空气中。</p><p>　　士兵开始维持现场秩序，安抚受到惊吓的乘客。人群平静下来，可不少人对刚才的事还心有余悸。</p><p>　　“刚才真是吓死我了，现在的疯子怎么这么多？”一个瘦小的年轻人说道。</p><p>　　“是呀，还好帝国的安保一向让人放心……对了，你有没有听说现在出现了妖将级的异化兽？”另一个年轻人小声地说。</p><p>　　“妖将级？不可能吧。”瘦小的年轻人将信将疑。</p><p>　　“嘿嘿，你别不信，我叔就在猎妖队里工作，他们全队的人都看见了。”年轻人摆着夸张的手势，“特别大的一只鼠型异化兽。”</p><p>　　瘦小的年轻人听得一愣一愣的。</p><p>　　“下一个！”</p><p>　　“哦……哦。”年轻人走上前去接受检查。</p><p>　　站在瘦小的年轻人后面的白宇有些疑惑，老师不是说异化兽最高只有天级吗？</p><p>　　“下一个！”……</p><p>　　离开车站，白宇算是真正进入陇西郡了。看着眼前的繁华，白宇心中只有无限感慨。</p><p>　　“小子。”一个略微尖细的声音在白宇身旁响起。</p><p>　　白宇往周围看去，发现没人叫他，不禁一脸茫然。</p><p>　　“没人啊……”白宇小声嘀咕着。</p><p>　　“小子，我在这！”那个尖细的声音再次响起。</p><p>　　白宇往脚下看去，发现了一个身高仿若三岁孩童，长着一双尖细长耳的秃顶小绿人正一脸不满地看着自己。</p><p>　　两人对视了几秒，然后……“妈呀！这什么鬼东西！”白宇吓了一跳，一脚将那小绿人踹飞了出去。</p><p>　　小绿人摔得晕头转向，他慢慢爬起来，浑身颤抖着，他不停小声念道:“一大袋魔晶！魔晶……一定要忍住！一定要忍住！”</p><p>　　他深吸一口气，露出他自以为很和善的笑容，开口道:“小子，我叫恳乾间杉，山妖一族。我是一名商人，想和你做一笔交易。”恳乾间杉道。</p><p>　　“坑钱奸商？”白宇好奇地看着他。</p><p>　　“……”恳乾间杉心里已经在骂娘了，但他还是保持着微笑，“是恳乾间杉……算了，这不重要。我再重申一遍，我想和你做一笔交易。”</p><p>　　“我没钱。”白宇回答得很干脆。</p><p>　　“我的货很便宜的，”恳乾间杉不知从哪拿出一个短柄法杖，“这个只要五文……哦不，只要一文！”</p><p>　　“还是没钱。”白宇说。</p><p>　　这小子一定是在耍我的吧！乞丐的身家都不止一文了！恳乾间杉心中怒吼着。</p><p>　　“坑钱奸商先生，我真的没钱。”见恳乾间杉没有反应，白宇又重复了一遍。</p><p>　　“你……你怎么会没钱呢？这……”恳乾间杉那双小眼睛转了转，“年轻人，你有所不知啊，其实我是一个孤苦伶仃的老人，只能靠做小本生意度日，你要是不买的话，我今天就没饭吃了啊。”</p><p>　　“坑钱奸商先生，我也很想帮助您，但……”</p><p>　　“是恳乾间杉，我叫恳乾间杉。”恳乾间杉不耐烦地打断了他。</p><p>　　“哦，好的，坑钱奸商先生。”</p><p>　　“啊！是坑钱奸商，不是恳乾间杉！哦不对，是恳乾间杉，不是坑钱奸商！”恳乾间杉简直欲哭无泪，这世界上怎么会有这么愣的小子！</p><p>　　“坑钱奸商先生，我的钱都用来买来陇西郡的车票了。实在是没有钱买您的东西了，您还是找别人吧。”</p><p>　　“既然如此，”恳乾间杉咬牙切齿地说，“我们相见即是缘分，这法杖我就送给你吧。”</p><p>　　说完，把法杖往白宇怀里一塞，便飞也似的溜走了。</p><p>　　白宇拿着法杖，莫名其妙地看着恳乾间杉消失的方向，小声嘀咕:“现在陇西郡的人都这么热情的吗？”</p><p>　　恳乾间杉气喘吁吁地跑到一条小巷前，接着放慢脚步走了进去。</p><p>　　“你交代的事我都办好了，可以兑现承诺了吧。”恳乾间杉道。</p><p>　　阴影处，一个年轻男子牵着一个女孩的手站在那里，他将一个钱袋抛给了恳乾间杉。恳乾间杉接住钱袋，掂了掂，终于露出笑容。</p><p>　　“话说，你真就把那东西给那愣小子了？这可不像你啊。”</p><p>　　“只有拥有强大的力量才有资格做我的棋子。”</p><p>　　“可他要是中途……”</p><p>　　“换一枚新的棋子便是。”</p><p>　　“对了，飞星教似乎最近会有什么大动作。”</p><p>　　“不必去管他们，一群跳梁小丑罢了……那时候，你要看着点他。”</p><p>　　“啊，随便啦。”</p><p>　　说完，恳乾间杉便快步离开了小巷。</p><p>　　“老板，再来两笼包子。”</p><p>　　清韵包子铺外，食客络绎不绝。一个头发有些凌乱的年轻人灵活地在人群中穿行，将手中的包子送到各个食客面前。</p><p>　　“小峰啊，今天张姨怎么没来啊？”一个有些微胖的大叔接过年轻人手中的包子，笑着问。</p><p>　　“王叔，奶奶今天生病了，来不了了。”洛峰道。</p><p>　　“这样啊，那小峰你先去忙吧。”</p><p>　　“好的，王叔。”</p><p>　　包子铺里，一个约莫十七八的姑娘在记录食客们的菜单。</p><p>　　“小婉，先休息一会儿吧。唉，真是太不好意思了，大清早就叫你来帮忙。”刚进铺子的洛峰尴尬地说。</p><p>　　“没……没事。”小婉低着头，不愿洛峰看到他满脸通红的样子。</p><p>　　“待会我们一起去吃顿饭吧。”</p><p>“嗯。”</p><h1 id="第七章-暗涌"><a href="#第七章-暗涌" class="headerlink" title="第七章 暗涌"></a>第七章 暗涌</h1><p>　　陇西郡东城区，一座高耸入云的银色大厦矗立于此。远远望去，就如同一柄刺向长空的利剑。这座大厦便是陇西郡的地标性建筑——陇西郡应急作战指挥中心。</p><p>　　如果陇西郡政府是这座城市的心脏，那么陇西郡应急作战指挥中心便是这座城市的大脑。这座大厦总会因为其独特的地位和宏伟的样貌让路人驻足，但也仅此而已。他们，同时也包括陇西郡大部分高层都不知道。在这座大厦一百丈深的地底下，才是这座城市的真正命脉。</p><p>　　“天啊！高萧，你这个怪物，你也就跟道家学习了两年吧，竟然已经天级乙等了！”满身肌肉、头顶闪闪发光的穆洪一脸生无可恋的样子，“你才二十五岁！你让我们这些奔四的大叔老脸往哪搁啊。”</p><p>　　“嘿，老穆，这是天赋。”高萧一本正经的说。</p><p>　　陇西郡应急作战指挥中心地底的密室中，身着白色战袍的高萧与穆洪站在角落里讨论着各自的修为。</p><p>　　“周江老大他是正统道家吧。”穆洪看了一眼正在书桌那写信的年轻男子，小声地说。</p><p>　　“没错……老穆，还有两个时辰我们这半个月的岗就值完了，想好上去后去哪玩没？”高萧嘻笑着说。</p><p>　　“我想在假期里多多陪陪我女儿，最近总忙着工作，也不知道小婉她现在过得怎样……奇怪，我心里怎么总有种不安的感觉……”穆洪转过头，看着密室中央那令人心惊的瑰宝。</p><p>　　密室中央，密密麻麻的金色咒文将那围出了一个圆柱形的空间。从天花板上垂下四条青色龙躯，栩栩如生的龙首探入金色咒文构成的“垂帘”。“垂帘”中，一个镌刻着法阵的金属台竖立其中。奇异的是，金属台上正绽放着一朵雄雄燃烧的妖异红莲。红莲周围是那四个龙首，龙首张着嘴，不断将烈焰吸入其中。</p><p>　　这朵红莲便是陇西郡的城市命脉——结界之蕊烈莲！烈莲是整个陇西郡结界的能量来源，相当于结界的阵眼，其重要性可想而知。正因如此，除了来密室的通道有重兵把守外，密室里还会有天级术士充当最后一道防线。</p><p>　　“……孩儿多年未归，未能尽孝道。但忠孝两难全，还望母亲大人愿谅。”周江放下笔，将信整整齐齐地对折好，收了起来。</p><p>　　“有点饿了，我去弄点吃的。”穆洪一边说着一边向密室另一端的储物柜走去。</p><p>　　高萧撇撇嘴，心中暗道:两年没见，老穆还是这么能吃。</p><p>　　“应该还剩下些罐头的……”穆洪小声嘀咕着。</p><p>　　此时，高萧与穆洪都没注意到，穆洪背后的影子越发阴暗，无比浓郁的黑色似乎要将周围的一切都吞噬掉。终于，影子诡异地脱离了本体，像一个真正的人一样站了起来。影子的手缓缓地放在穆洪的脖子上，而他依然毫无察觉。</p><p>　　周江似乎感觉到了什么，他转身看向穆洪，正好发现了意图行凶的影子。</p><p>　　“小心！”周江大声喊道，“该死！来不及了……光耀！”</p><p>　　周江施法的速度非常快，眨眼间便释放出了一个略微复杂的驱邪术法。霎时间，金色的光芒照亮了整个密室。但原本能对邪灵造成巨大伤害的术法，此时却没有起到任何作用。影子好端端地站在那里，仿佛是在嘲笑周江的无能。</p><p>　　穆洪一脸茫然的回过头，不解地看着周江。就在这时，影子的手划过了穆洪的脖子。“噗”，鲜血如泉水般喷涌而出。穆洪终于发现了这个叛主的影子，满脸的惊愕与不甘。他的双手死死地压住伤口，可血液仍止不住地淌出。</p><p>　　金色光芒熄灭了，穆洪的眼中也失去了光彩，身体重重地倒在了脚下的血潭中。</p><p>　　“老穆！”</p><p>　　“穆洪！”</p><p>　　“你这恶心的东西，我要让你付出代价！”高萧双眼通红，吼道。</p><p>　　就在刚才，老穆还和自己说他以后一定要尽到一个父亲的责任，但现在却阴阳相隔……</p><p>　　“风刃！”高萧脚下迅速出现了一个青色法阵。</p><p>　　眨眼间，密室中狂风大作，各种物品在狂风下四分五裂。数十道狂风构成的利刃呼啸着飞向影子。</p><p>　　“桀桀……”影子也不恋战，迅速消失在了空气中。</p><p>　　“铛铛”，失去了目标的风刃击中了密室的墙壁，留下了几道淡淡的印痕。</p><p>　　见影子逃走，发狂的高萧竟是想追上去。周江抓住他的肩膀，将高萧拦了下来。</p><p>　　“放开我，我要杀了那杂种！”高萧喊道。</p><p>　　“冷静点！有点不对劲。”周江警惕地看着密室的阴暗处。</p><p>　　听了周江的话，高萧强迫自己静下心来，细细感知着周围的情况，竟是发现密室里弥漫着一股浓郁到令人窒息的杀意！</p><p>　　突然，密室里那些稍微暗点的角落，都亮起了密密麻麻的三角形红光。</p><p>　　“那……那是什么？！”不知怎的，面对这些红光，高萧竟是产生了一丝惧意。</p><p>　　“眼睛。”周江脸上无悲无喜，“保护烈莲！”</p><p>　　突然，几只黑色人形怪物从阴暗的角落里冲了出来。怪物四肢着地，身上光秃秃的，布满了腐烂的伤口，散发出令人作呕的气息。一双红色的三角眼透着奸诈。</p><p>　　怪物速度很快，几个呼吸间便来到了周江面前。</p><p>　　“凝！”五道法阵以周江为中心交织在一起，构成了一个更加繁复的阵法。</p><p>　　“呼”，一阵呈扇形的气浪将冲上来的怪物又吹了回去。而那几只被吹回去的怪物依然保持着原来的姿势，竟是动弹不得。</p><p>　　“嗷”，见先锋失败，又有几十只怪物冲了过去。</p><p>　　“风刃！”高萧再次施法。</p><p>　　三道巨大的风刃迎头撞上怪物，怪物顷刻之间化为碎肉，几十只怪物瞬间被消灭得一干二净。见这两个人类如此轻易就能杀死它们，一时之间，竟没有怪物敢再冲上去。</p><p>　　“到底是怎么进来的，数量太多了，我们会被活活耗死在这的。”周江皱着眉头，“高萧，快向外界求援。”</p><p>　　“好。”说完，高萧便开始勾画法阵。</p><p>　　就在高萧即将完成法阵时，一只远远比其它怪物壮硕的怪物爬了出来。它咧起嘴角，似乎是在嘲笑这两个人类的无知。它张开大嘴，一副仰天长啸的样子。</p><p>　　紧接着，周江与高萧的脑袋像是要炸开一样，精神完全无法集中。即将完成的法阵也因此失败，化为点点星光消散在空气中。</p><p>　　壮硕怪物扬扬脑袋，示意小怪物可以上了。霎时，怪物们争先恐后地冲上去，生怕抢不到这两块新鲜的吃食。</p><p>　　“啊！”高萧被淹没在怪物潮中，只来得及发出一声惨叫。</p><p>　　“可恶！”每当周江想要集中精力施法时，脑袋便会剧烈疼痛起来，“人……人法地……地法天天法道道法自然！”</p><p>　　随着最后一个咒音落下，一个八卦阵在周江身后浮现。紧接着，八卦阵发出刺眼的光芒。被照到的怪物发出尖叫，身上的皮肤冒出阵阵黑气。不一会儿，除了那只壮硕怪物以外，其它的怪物都化作一摊黑水。</p><p>　　“嗷！”，壮硕怪物愤怒地大叫。它眨眼间便来到周江面前，一爪子拍了下去。而虚脱的周江堪堪避开这一爪，但肩膀仍然被抓出了一道深可见骨的伤口。</p><p>　　不成想，这怪物的爪子竟是带着毒素。周江肩膀上的伤口没一会儿便开始腐烂，整条手臂都变成了青黑色。这对本就虚弱的周江来说更是雪上加霜。脑袋越发昏沉，速度也慢了下来。</p><p>　　壮硕怪物原本还兴致勃勃地戏弄着周江，但突然想起自己还有任务，便一爪子将周江拍飞了……</p><p>　　白宇迷路了。</p><p>　　没错，他在陇西郡迷路了。</p><p>　　白宇在刚才短短的半个时辰里，问了不下十次路，可他最后总能把自己给弄丢。这下他不得不承认，自己是个十足的路痴。</p><p>　　白宇现在可算是身无分文，如果他还找不到术士协会的话，今晚他就得睡大街了。</p><p>　　“王婷老师，那就是术士们铸造的城墙吗？”一个稚嫩的童音在白宇不远处响起。</p><p>　　“是呀，浩浩，当时一共有两千名术士和几万名工人参加了这个工程。”一个穿着陇西郡福利院制服的女子回答道。</p><p>　　“你是……王婷？”一旁的白宇惊讶地说。</p><p>　　“你认识我？”王婷有些意外地看着眼前的男子。</p><p>　　“我是白宇，不知道你还记得吗？”</p><p>　　“白宇……就是那个和我竟争学徒资格的白宇？”</p><p>　　“对，是我。”白宇点点头，“你现在是在福利院工作吗？”</p><p>　　“是呀，毕竟在那生活过……你是有什么事吗？”</p><p>　　“这个……”白宇抓抓脑袋，有些不好意思，“我迷路了，你知道术士协会在哪吗？”</p><p>　　“术士协会……那应该是在内城区吧，你在外城区是找不到的。你往市中心走，应该不会很久的。”</p><p>　　“原来如此，真是太感谢你了，那我下次再来看你吧。”白宇诚恳地说。</p><p>　　“嗯。”</p><p>　　这时，旁边的一家饭馆里走出了一对年轻男女。不知道男子说了什么，引得女子娇笑连连。忽地，白宇与男子发现了彼此。男子愣了一下，随即皱起了眉头。白宇看了男子一眼，便向内城区进发了。</p><p>　　“呀，小婉，我突然想起来一件很重要的事……真是的，怎么就忘了。”洛峰懊恼不已，“小婉，你能帮我个忙吗？”</p><p>　　“你说吧。”</p><p>　　“你能替我去战争纪念碑那祭拜一下吗？带上这个，”洛峰拿出一朵有些蔫了的花，“我有急事走不开了。”</p><p>　　“好吧。”穆婉答道。</p><p>　　“下次一定好好感谢你。”说完，便一溜烟地跑没影了。</p><p>　　陇西郡战争纪念碑。</p><p>　　穆婉站在高高的石碑下，目光扫过上面刻着的一行行名字。穆婉平时很喜欢来这里，在这里她总有一种温暖的感觉，就像是先灵们就在自己旁边。</p><p>　　每次看见石碑顶上的黑蛇雕塑，穆婉总会感到疑惑，为什么人类的纪念碑上会雕刻着一个异兽？她很确定，那就是异兽。可……为什么？</p><p>　　摇摇头，不再多想，将那朵花放在石碑前。忽地，气温骤然下降，周围变得阴冷无比。一阵寒风吹过，穆婉止不住地发抖。</p><p>　　“有些冷呢。”穆婉喃喃自语，“去张奶奶那看看吧。”</p><p>　　戴何巷。</p><p>　　“咚咚”，穆婉敲着眼前那扇有些老旧的木门。</p><p>　　“张奶奶？”穆婉有些心慌了，使劲地推了推门却发现门并没有锁。</p><p>　　“吱——”，木门响了起来，让毫无准备的穆婉吓了一跳。</p><p>　　“张奶奶？你在家吗？”穆婉脚步不自觉地快了起来，“张奶奶？洛峰？有人吗？”</p><p>　　应该是睡着了吧，所以没有听到……真是的，连门也不锁，要是有坏人怎么办……穆婉心里这么想着。</p><p>　　来到卧室门口，穆婉轻轻地推开门，生怕打扰到张奶奶。</p><p>　　“啊——”，窗外，几只鸟儿被这突入其来的尖叫声惊得飞走了。于此同时，穆婉瘫坐在地上，浑身颤抖，眼泪止不住地淌出。</p><p>　　卧室内，一具被啃得血肉模糊的尸体旁 ，一个黑色的人形怪物对着穆婉阴险地笑着。</p><p>　　“你……你不要过来……不要……不要过来！呜呜……”穆婉怎么也没想到，张奶奶会惨死在自己的卧室里，而自己将会是下一个。</p><p>　　怪物慢慢向穆婉爬去，它似乎很享受猎物这种无助的感觉。</p><p>　　“怪物！住手！”突然，一个木椅砸到了怪物的身上，“小婉，快跑！去找猎妖队！我拖住它！”</p><p>　　“洛……洛峰，那你……”穆婉泪流满面。</p><p>　　“快！别管我！”洛峰喊道，“我一定会平安回去的！”</p><p>　　穆婉点点头，看了洛峰最后一眼，狠下心跑了出去。</p><p>　　“呼……呼……”，穆婉跑到了巷子口。她似乎听到了远处传来了洛峰微弱的惨叫声，眼圈红了起来。</p><p>突然，穆婉的背后响起了脚步声。紧接着，穆婉感觉到后脑勺被什么狠狠地砸了一下，然后两眼一黑，晕了过去。</p><h1 id="第八章-危城"><a href="#第八章-危城" class="headerlink" title="第八章 危城"></a>第八章 危城</h1><p>　　不知走了多久，白宇来到了陇西郡的内城区。苍黑色的高耸城墙将其与外城区分隔开，古老的金色护城结界保护着此地。身着黑甲的军术士站在城墙上，腰杆挺得笔直。</p><p>　　不再多看，白宇便随着行人一齐进入了内城区。</p><p>　　术士协会陇西郡分部。</p><p>　　协会内人很多，基本上都是来登记的外来术士。</p><p>　　“你叫白宇？”正在埋头登记资料的工作人员抬起头，直愣愣地看着他眼前的年轻人。</p><p>　　“对。”白宇点点头。</p><p>　　那名工作人员回过神来，急忙在一堆文件里翻找着什么。不一会儿，他从里面抽出一份档案，匆忙翻了翻。</p><p>　　“你跟我来，”工作人员将档案放回原位，“会长要见你。”</p><p>　　“什么？”白宇有些不明所以，但还是跟了上去。</p><p>　　“你们会长是谁？为什么要见我？”此时，白宇正和工作人员走在一条长长的走廊里。</p><p>　　“嗯？你不认识会长？那会长怎么会点名要见你？会长平时很少面客的，就连上次皇帝前来视察会长也没露面。”工作人员上下打量着白宇，似乎是想找出白宇有什么特别的地方。</p><p>　　“这会长挺神秘的啊……他很厉害吗？”见这名工作人员每次提到那个会长时都会露出崇拜的神情，白宇忍不住开口问道。</p><p>　　“那当然！知道蛮王象吗？那是我们会长杀的。”工作人员得意地笑着，仿佛杀死蛮王象的是他一样。</p><p>　　“可我听说那是一头君主级的异兽。”</p><p>　　“在我们会长面前，君主级算什么……不出意外的话，用不了多久会长就能接任阴阳家掌门人了，她是现今阴阳家年轻一辈中最强的。”</p><p>　　正说着，两人便来到了走廊尽头。尽头是一扇木门，木门上钉着一个铭牌：会长室。</p><p>　　“我只能送你到这了，你自己进去吧。”那名工作人员说完便转身走了。</p><p>　　白宇目送工作人员离去，接着又打量起了那扇木门。他身体前倾，手缓缓向前伸去，打算将门推开。紧接着，白宇惊恐地发现，他的手没有触碰到任何实物。然后，失去平衡的他毫无准备地向前摔去……</p><p>　　“呸呸呸……”摔了个狗啃泥的白宇艰难地爬起来，整理着自己的衣衫，一边无声地咒骂着，“真是的，明明那么有钱却连个门也舍不得装……等等，这会长室里这么会有草！”</p><p>　　缓过神来的白宇这才有时间观察周围的环境：青翠欲滴的草地、一片几乎望不到边的森林，一条弯弯曲曲的小河从白宇身旁流过，一只正在低头喝水的白鹿抬起头，好奇地打量着他。</p><p>　　深吸一口气，不再是陇西郡那干燥异常的空气，而是一股清凉湿润的微风。</p><p>　　还挺不错的。他想着。</p><p>　　不对！这不是重点！这不是会长室吗？为什么里面是这样子的？难道是打开的方式不对？！</p><p>　　目瞪口呆的白宇晃晃脑袋，重新看向周围，试图找出一丝线索。幸运的是，他发现了林海尽头与天空交界处的那条银色细线。</p><p>　　那是陇西郡的银色大厦。</p><p>　　看到银色大厦，白宇安下心来，就在刚才他还以为自己被传送到了野外。</p><p>　　白宇思索了一会儿，便沿着小河向前走去。渐渐的，草地变成了一条小径。继续走着，一片开阔的空地出现在白宇眼前。与空地一起出现的，还有一座別致的小院小。小院门前有一块牌匾，上书“梦蝶斋”。</p><p>　　没有多想，白宇径直走了进去。穿过竹林中的庭院，穿过涓涓流水上的石桥，来到了一个亭子前。</p><p>　　亭子中摆放着一张桌案，桌案后跪坐着一个身姿曼妙的女子。女子一袭粉色长裙，一层薄薄的面纱遮住了她的容颜。女子自顾自地摆弄着茶道，丝毫没有在意白宇的到来。</p><p>　　白宇有些惊讶，他没有想到这所谓的会长竟是一位女子，而且看上去年龄和自己差距不大。白宇走了过去，坐在女子面前。两人沉默着，亭子里唯有茶汤的“哗哗”声。时间在宁静中流逝，任亭外的蓝天上云卷云舒。</p><p>　　“茶。”半个时辰后，女子将一杯清茶递给白宇。</p><p>　　白宇小心接过。</p><p>　　“你，可名为白宇？”女子缓缓道。</p><p>　　“是。”</p><p>　　“你是白星夜之子？”</p><p>　　“是……阁下认识我父亲？”白宇有些惊讶，在他的印象中，父亲一直都是一个深居简出的人。</p><p>　　“吾名蝶梦，曾和你父亲合作过一段时间，我们也算是故人了。你父亲的事我深表遗憾。他是一个很聪明的人，聪明得让人心悸。”蝶梦抿了一口茶，接着道，“许多年以前，我们在帝都学院相识，之后便一起寻找解决当今问题的办法。后来，因为某些原因，我们产生了分歧……”</p><p>　　“什么原因？”白宇追问道。</p><p>　　蝶梦看着他，笑了笑，说：“真是像呢。”</p><p>　　“什么？像什么？”白宇疑惑地说。</p><p>　　“没什么……我们之所以产生分歧，是因为我们的道不同。我认为人类要想摆脱现在困境，应该不断提升自己的能力。他却把希望寄托在那些虚无缥缈的上古神上。之后，他便跑遍全帝国，去找那些所谓的遗迹。后来，他说他发现了一个真正的大遗迹，然后便独自前往。”蝶梦顿了顿，“两年后，他回来了，却变得有些古怪，那是我们最后一次见面。他也许发现了什么，要不怎么会被那些人给盯上。”</p><p>　　“那些人？是谁？”白宇急切地问。</p><p>　　“你现在还年轻，路还长着，不要去招惹他们。不要说是你，寂灭级的强者都不知道被他们杀了多少。”</p><p>　　“他们杀了我父亲！”白宇吼道，“我怎么可以逃避。”</p><p>　　“我说现在不要招惹，可没说以后啊。”蝶梦俏皮地眨眨眼睛。</p><p>　　“什……什么？”白宇的脑子没转过弯来。</p><p>　　“我已经帮你觉醒了灵海，你的修炼之路开启了，少年。”</p><p>　　“这么快！可……可我什么感觉也没有啊？”</p><p>　　蝶梦不禁感到一阵好笑，没好气地说：“那你想要什么感觉。剧痛还是昏厥？”</p><p>　　“还是算了吧。”白宇尴尬地说。</p><p>　　在白宇的认知里，人类要想觉醒，都需要借助魔晶石或兽晶中蕴含着的庞大能量。但因为来源渠道少，价格居高不下，且使用后不一定成功，所以能成为术士的终究还是少部分人。另外，因为魔晶石还能给充当机械装置的能源，所以一直被军方垄断。</p><p>　　“你静下心，尝试进入你的灵海。”</p><p>　　“好。”说完，白宇闭上眼。仔细感觉自己的身体内，他仿佛化作了一个小点，在自己的体内探寻着。忽地，白宇的眼前豁然开朗。一片浩瀚的黑色空间出现在他的眼前，四十九颗星尘安静地漂浮在中央。</p><p>　　四十九颗……好像有哪里不对劲。</p><p>　　“我为什么一开始就有四十九颗星尘？！那不是地级才会诞生吗？”睁开眼，白宇便一副欲哭无泪的表情。</p><p>　　四十九颗，以他现在的能力，在战场怕是释放不出一个术法。还没连接完星尘，就被敌人给干掉了！</p><p>　　“所以，你修炼要比别人更加努力才行啊。对了，你体内有一股极强的能量，但是这股能量会使你无法持有法具，而且可能会失了性命……另外，他们是飞星教。”</p><p>　　“我明白了。”白宇点了点头，想起了包中那根碎掉的法杖。</p><p>　　陇西郡应急作战指挥中心。</p><p>　　“砰”，会议室的大门在重击下四分五裂，一个黑色的人形怪物缓缓走了进去。</p><p>　　落地窗前，一身戎装的刚毅男子转过身，平静地说：“别躲躲藏藏的了，出来吧。”</p><p>　　人形怪物让开身，露出身后布满血迹的走廊。“啪啪……”，一个年轻人慢慢鼓着掌，走进了会议室。</p><p>　　“不愧是穆将军，这样也能发现在下。怪不得明明只是一个普通人却能做坐上这个位置。”</p><p>　　“有话快说。”穆将军冷冷道。</p><p>　　“哈哈，穆将军真是爽快人。在下洛峰，久仰穆将军大名，此次特地带了一点小礼物前来拜访。”洛峰扬扬脑袋，示意人形怪物出去。</p><p>　　人形怪物快步走了出去，一会儿，又走了进来。不过，这次它手里提着个人。</p><p>　　“小婉。”穆将军看了一眼，脸上依旧平静，“你想怎样？”</p><p>　　“两个选择，”洛峰竖起两根手指，“一，你加入飞星教，她活。二，她死，我再把你炼化作它，再加入飞星教。”</p><p>　　洛峰指了指人形怪物。</p><p>　　“哦，我选第三个。”</p><p>　　“你胡说什……”</p><p>　　洛峰话音未落，却只见穆将军从腰间抽出一把蒸汽手枪对准了他。洛峰面色一变，大喊：“妖鬼！救我！”</p><p>　　妖鬼丢开穆婉，挡在了洛峰身前。未待气急败坏的洛峰展开报复，穆将军调转枪口，连开数枪。“砰砰砰……”，转眼穆婉身上多出了几个血洞，本是奄奄一息的穆婉这下彻底断气。没有停手，穆将军又将蒸汽手枪顶在自己的脑袋上。“砰”，血溅满了落地窗，穆将军的身体也向后倒去。</p><p>　　洛峰惊愕地看着这一幕，随即气恼地大骂道：“疯子！穆旋你这个疯子！连自己侄女都下得了手，真是个疯子！”</p><p>　　北城墙。</p><p>　　向远方眺望，地平线上出现了滚滚浓烟，壮硕的黑影时隐时现。</p><p>　　那是兽潮。</p><p>　　“你们的职责是什么！”副军守刘贾站在守城士兵后面喊道。</p><p>　　“保卫陇西！”</p><p>　　“我们的精神是！”</p><p>　　“宁丢命！不让地！”士兵们吼道。</p><p>　　“好！小伙子们，让那些畜生瞧瞧我们陇西人的厉害！”</p><p>　　“是！”说完，士兵们便涌向各自的岗位，准备迎接兽潮。</p><p>　　“嗒嗒嗒……”，有力的军靴声在刘贾身后响起。刘贾回过头，只见一个身披军大衣，头戴宽檐军帽的女子。女子军帽下原本是左眼的位置却是被黑色眼罩替代，那是她在一场战役中留下的纪念。</p><p>　　“司军守，您怎么来了？”刘贾恭敬地说。</p><p>　　“开启橙色警戒。”司离人没有理会刘贾。</p><p>　　“可……可是……级别没到吧。”刘贾小心翼翼地问道。</p><p>　　“你自己看。”司离人仍是一句废话也不想多说。</p><p>　　刘贾向城外望去，发现兽潮似乎还在扩大。</p><p>　　“明白，属下这就去。”刘贾敬了个军礼，便要离去。</p><p>　　“报！”一名士兵匆忙跑了过来，半跪在司离人面前，两手并在一起举过头顶，“据前方斥候消息，有人使用大型传送阵法将大量异兽传送过来。”</p><p>　　“消息准确吗？斥候呢？叫他过来。”刘贾急切地说。</p><p>　　“他因伤重不治身亡了。”士兵的声音低沉下去，“斥候小队的其他人都在掩护他回来的路上阵亡了。”</p><p>　　“这……”刘贾心情一时有些复杂。</p><p>　　“厚葬，立碑。”司离人开口道。</p><p>　　“是。”士兵说完便快步离开。</p><p>　　“那……那我去启动橙色警戒。”</p><p>　　“蠢货！赤色！”</p><p>　　“哦……哦。”</p><p>　　一枚小巧的弹丸呼啸着冲向天空，不一会儿便爆炸开来，赤浓如血的圆面逐渐在陇西郡上空扩大。</p><p>　　城内，军队预备役、民兵、术法学院的师生、术士协会与各大术法世家都动员起来，前往最近的城墙。一时之间，陇西郡的战争氛围浓郁起来。而普通市民依旧该干嘛干嘛，周围跑来跑去的士兵们丝毫没影响到他们喝下午茶的心情。毕竟，他们头顶上还有个护城结界。</p><p>　　所以，战争？哪有下午茶重要！</p><p>　　这次兽潮数量极大，黑压压的一片，所望之处都是异兽。庞大的规模让人窒息。兽潮快速向城墙靠近，其中一些跑得快的异兽已经接近了城墙。这些异兽看见食物近在眼前，只差一点便可以尽情享受，却没想到会一头撞在结界。那些被异兽撞击到的地方荡起圈圈涟漪。</p><p>　　紧接着，撞上结界的异兽纷纷燃烧起来，化为灰烬。可即使是这样，仍旧没能令它们惧怕。异兽依然悍不畏死地冲向城墙。</p><p>　　司离人站在城墙上，默默地看着那些异兽，不知道在想些什么。</p><p>突然，石塔顶上的光芒黯淡下去，结界化作点点星光消散在空气中。</p><h1 id="第九章-陇西战役"><a href="#第九章-陇西战役" class="headerlink" title="第九章 陇西战役"></a>第九章 陇西战役</h1><p>　　“结界……结界消失了。”赶回城墙上的刘贾震惊地说。</p><p>　　守护了陇西郡十二年，经历了两千余次兽潮的护城结界就这么毫无征兆地消失了。这让士兵们骚动起来。</p><p>　　“不要慌张！我们还有城墙！它们上不来的！拿出你们的血性来！”刘贾一边安抚士兵，一边小声骂道，“指挥中心那群酒囊饭袋怎么搞的，是把烈焰拿去卖了吗？！”</p><p>　　骂骂咧咧地，刘贾回到了司离人那。</p><p>　　“指挥中心没了。”司离人面色平静，似乎是在述说一件和自己毫无关联的事。</p><p>　　“没……没了？”刘贾神色紧张，“城里有内鬼？”</p><p>　　“整座大厦不剩一个活人，包括穆将军。我已经封锁了消息，并让猎妖队和治安署戒严了。我们已经抽调不出更多兵力了，还是专心于眼前吧。”</p><p>　　刘贾点点头，大喊：“军术士！列阵！”</p><p>　　“是！”军术士回应道。</p><p>　　一千余名军术士，几百名普通士兵，这就是北城墙所有的守备力量了。此刻，他们分为十个小队，分别涌向十个大型法阵。军术士充当法阵节点，普通士兵负责替换阵眼的魔晶石。</p><p>　　人类的单体实力是不如异兽的，但人类的法阵却能对它们造成巨大的伤害，即使只是一个十几人构成的小型法阵。</p><p>　　“轰隆隆”，异兽的先头部队首先抵达城墙。杂乱且巨大的脚步声震耳欲聋，不同的兽吼声此起彼伏。</p><p>　　“听我号令！一、二号方阵！千钧！”司离人的声音出现在每一名士兵的脑海中。</p><p>　　“千钧！”士兵们大喊。</p><p>　　一个银色的法阵绽放出光芒，庞大的能量在法阵复杂的纹路中奔涌传递。光芒越来越盛，军术士吟唱咒文的速度也越来越快。</p><p>　　与此同时，北城墙外的重力骤然增大。异兽的速度放缓下来，不少天级异兽已经停了下来，只剩下那些妖将级的异兽还在艰难前进。</p><p>　　重力还在增大，天级以下的异兽已经抵挡不住这样的重压了，纷纷在巨大的重力下变成一张薄薄的肉饼。</p><p>　　随着时间的推移，异兽的数量不断增多，“千钧”法阵产生的能量因为均分给大量的异兽而减弱。</p><p>　　“三、四号方阵！火灼！”司离人的声音再次出现。</p><p>　　突然，异兽上空浮现出数十个巨大的赤色法阵。法阵飞速旋转，赤色光芒逐渐变得刺眼，周围的温度随着光芒的增强而迅速上升。</p><p>　　紧接着，赤色法阵迸发出巨大的光柱。光柱击中地面产生了猛烈的爆炸，爆炸所产生的气浪席卷了整个战场。无数异兽被掀飞出去，激荡起的尘埃遮天蔽日。</p><p>　　“一二三四号方阵原地休息！五六七八号方阵准备！”</p><p>　　浓烟散去，数十个大坑豁然出现在众人眼前。刚才还铺天盖地的异兽先头部队此时早已不见踪影，唯有焦黑的残肢碎肉证明它们的存在。</p><p>　　没有停下脚步，异兽大军继续向城墙冲去。它们疯狂地吼叫，穿过硝烟，踏过同类的尸体，一心想要将那阻隔它们前进脚步的大石头毁掉。</p><p>　　“五、六号方阵！混序！七号方阵！雷爪！八号方阵！风刃！”</p><p>　　霎时，一股诡异的能量弥漫整片战场。异兽们还来不及反应，便感觉天地倒转了过来。“混沌之序”颠倒了战场区域的法则，天为地，地为天。一时之间，大量的异兽向天空“坠”去。</p><p>　　还未待异兽们缓过神来，“雷爪”和“风刃”就劈头盖脸地向它们砸去。它们要么成为焦黑的尸体，要么被分割得四分五裂。侥幸没死的，也是半死不活的状态。在阵法结束时，还活着的异兽重重摔落在地上，彻底断了气。</p><p>　　这时，刘贾惊喜地发现异兽开始后退了。在法阵覆盖范围边缘的异兽观望着，慢慢拖着受伤的同类向后退去。代表着异兽的那条黑线就在几里外停下，似乎是在等待什么。</p><p>　　“我们打退那些畜生了！我们赢了！”刘贾激动地大喊。</p><p>　　“赢了！”</p><p>　　“陇西军必胜！”</p><p>　　士兵们欢呼起来，为自己的胜利呐喊。</p><p>　　他们赢了！他们打退了一次赤色危机！</p><p>　　“所有人原地休息！”司离人开口道。</p><p>　　得到命令，几乎力竭的士兵们立刻坐了下去，享受这片刻的休息时间。</p><p>　　“司军守，有什么问题吗？”刘贾见司离人紧邹眉头，疑惑道。</p><p>　　“它们应该还有什么计划，它们可比你我想像的要聪明得太多了。”司离人平静地说。</p><p>　　“这……”说实话，刘贾有些不大相信。</p><p>　　“我已经向周围几个要塞求援了，不出意外的话，援军应该一会儿就到了。”说完，司离人又沉默下去。</p><p>　　“千钧”法阵中，一个有些矮小的军术士时不时的望向北城区，脸上透着几许紧张与期待。</p><p>　　“老许，看什么呢？”一个年轻的士兵拍了拍矮小军术士的肩膀。</p><p>　　“大夫说我夫人这几日便会临产……我名字都想好了，儿子就叫许战，女儿的话就叫许舞……”许征有些语无伦次。</p><p>　　“得，嫂子是在北城医馆吧，到时哥几个带点礼物去看看。你可别忘了请大家伙喝喜酒啊。”年轻士兵笑了笑。</p><p>　　“兽潮又来了，所有人备战！”刘贾喊道。</p><p>　　士兵们迅速起身，严阵以待。</p><p>　　只见地平线处再次浓烟滚滚，黑线如潮水般涌了过来。只是，这一次的速度慢了许多。</p><p>　　“兽潮前面有人！”不知道是谁喊了一声。</p><p>　　所有人仔细看去，发现兽潮前确实奔跑着一群人类。那群人面色惊恐、衣衫褴褛，有些人怀里甚至还抱着婴孩。在异兽的驱赶下他们不敢停下来。途中不断有人倒下，却没能够再站起来。</p><p>　　兽潮越来越近，它们逐渐进入了术法的覆盖范围。</p><p>　　“司军守……”刘贾欲言又止。</p><p>　　“是附近几个人类聚集地的百姓，他们倒是不算太蠢……三、四号方阵！火灼火力覆盖！”司离人面容古井无波。</p><p>　　“军守！”士兵们悲愤地喊道，他们所有的情感都寄托在这两个字之中。</p><p>　　“施法！”司离人脸上有了些许怒容，“不用我教你们怎么执行命令吧！眼前这几千人和我们身后的几百万人相比，孰轻孰重不用我多说吧！东、西、南城墙的战友们还在誓死抵抗，这里容不得我们妇人之仁！”</p><p>　　“是！”士兵们的声音有些沙哑。</p><p>　　赤色法阵光芒再起，但这一次却不在是先前的小范围打击了。只见数百个小型的赤色法阵在战场上空浮现，灼热的光柱持续不断地对地面进行毁灭性打击。</p><p>　　硝烟散尽，数量庞大的异兽再次溃不成军。而这一切，是以几千条人类性命为代价得到的。</p><p>　　“战争结束后，我会接受军事法庭的审判。”司离人没来由地说了一句。</p><p>　　“可是，这……这是不得已的啊。”刘贾有些不甘。</p><p>　　“做了做就是做了。战争，从来就没有无辜者！”司离人开口道。</p><p>　　“报！”一名士兵匆匆跑到司离人面前。</p><p>　　“说。”刘贾道。</p><p>　　“虎平、津门、天御与光宇要塞的援军在前来的途中遭遇大量异兽袭击，损失惨重，现已退回要塞。”</p><p>　　“果然还是没那么简单啊。”司离人叹了口气。</p><p>　　“砰！砰！砰！”，巨大的爆炸声突然响起。城内几处地方同时剧烈燃烧起来，远远便能望见火光冲天，黑色的烟柱飘向云霄。</p><p>　　“该死！那不是存放魔晶石的仓库吗？！”刘贾气恼地说。</p><p>　　“看来他们这次是吃定我们了，这次兽潮只怕是飞星教的手笔。”司离人凝视着战场。</p><p>　　城外是杀不尽的异兽，城内是丧心病狂的飞星教。陇西郡，面临着内忧外患的局面。</p><p>　　“轰隆隆”，地面突然剧烈地摇晃起来。战场的土地上出现了大量的裂纹，裂纹中心的地面迅速拱起一个小山包，小山包上不断有土块洒落。</p><p>　　看到这一幕，司离人嘴角微微扬起，说：“终究还是没忍住啊。今天，就用你这头君主来血祭吧。”</p><p>　　“砰”，一条巨大的岩石爪子猛地从小山包中钻出。紧接着，另一条爪子也出现在众人眼前。只见两条爪子撑住地面，骤然发力。那双手臂的主人终于破开土层，来到地面。</p><p>　　那是一个形似土拨鼠的异兽。它那肥硕的身躯上布满了尖刺与鳞甲，鳞甲泛着银色的金属光泽。那双巨大的爪子更是粘附着一层厚厚的岩石。土拨鼠异兽十分巨大，它站起来时高出了城墙一倍有余。</p><p>　　“君主出现了！是地妖君主岩魔君！”刘贾喊道。</p><p>　　“所有人准备！神罚！”说完，司离人双手快速结印，口中念着生涩的咒文。</p><p>　　北城墙一千余名军术士集体吟唱，复杂的符文在军术士身旁浮现。一股惊人的能量开始涌动，陇西郡的大街小巷同时亮起银色的光芒。</p><p>　　这股能量顺着陇西郡的街道不断循环，每循环一次便增强一分。如果此时有人在空中看向陇西郡，那么他就会发现，其实整个陇西郡本身就是一个巨大的法阵！</p><p>　　能量最后汇聚到了君主异兽的头顶。与此同时，一个银色法阵飞速地在君主异兽的头顶形成。法阵形成的过程令人眼花缭乱，繁奥的纹路持续不断地在空中描绘出来。</p><p>　　人类其它的法阵在它面前显得黯然失色，让人不得不怀疑这也许真的是神的作品。</p><p>　　倒霉的岩魔君刚从地下钻出来，便察觉到了一股庞大的能量在它的头顶汇聚。心惊胆战的它二话不说就迈开小短腿，试图逃出法阵的锁定范围。</p><p>　　若换作平常那些小法阵，它挨个几十次都不带皱一下眉头的。可现在这个法阵可怕得让它心悸，搞不好它可能会死在这。</p><p>　　它可是君主，命精贵得很，可不能把命丢在这。</p><p>　　这时，正逃命的岩魔君惊恐地发现，无论它跑到哪里，身上那种被锁定的感觉依旧存在。就如同死神，一旦被他盯上，你的命就不再属于你自己了。</p><p>　　终于，法阵最后一道纹路也衔接完成。只见银光一闪，密集的银色光线在刹那间从岩魔君的身体划过。</p><p>　　“噗”，来不及反应，岩魔君瞬间被分割成细小的肉沫。那身厚实的金属鳞甲也没能挽救它的性命。</p><p>　　法阵渐渐消散，异兽大军也被岩魔君的死亡震慑而不敢前进。</p><p>　　“啾——”，还未待众人放松下来，一声鹰唳又击碎了他们心中的喜悦。只见一只巨大的鹰兽从高空俯冲而下，最后悬停在战场上空。那双褐色的鹰眼死死地盯着陇西郡，眼中透着高傲与对人类的藐视。</p><p>　　突然，鹰兽张开嘴，凝聚出一个紫色的能量团。能量团逐渐增大，还时不时冒出电光。</p><p>　　“是骸云鹰！该死！大意了！早该想到这么大规模的兽潮肯定不止一头君主的！神罚短时间内是无法使用了……”刘贾自责道。</p><p>　　“别想了，快走！开启紫色警戒！北城墙全员撤退！无法抵挡！全员撤退！”司离人喊道。</p><p>　　说完，司离人迅速施法，一个法阵出现在她的脚下。法阵将她和周围十几名个人笼罩进去，只见这十几人身体虚化，转瞬便消失在空气中。</p><p>　　几息之后，司离人与士兵们出现在指挥中心天台上。这时，骸云鹰正将能量团推向北城墙。在众人眼中，能量团缓缓击中北城墙。大段的城墙被紫光吞噬。巨大的声响几乎将众人的耳膜震裂。</p><p>　　耀眼的紫光没有持续太久，当紫光消逝后，天台上的所有人灵魂都凝固了一般，他们无法相信自己看到的一幕……</p><p>　　城墙消失了！</p><p>　　那一段经过术法加持，如山脉一般的高耸城墙，消失了整整十几里！沙砾一样细小的碎片从空中缓缓落下，化为尘埃。</p><p>　　整段北城墙连带着北城墙区一齐被夷为平地，什么也没有剩下。如果非要剩下点什么的话，那也只能是绝望了。</p><p>　　“混……混蛋！！！”天台上，一滴泪从一个灰头土脸的男子脸颊上落了下来。“我要宰了它，我要宰了它！！！”他沙哑得嘶吼着。</p><p>　　“老许……”逃出来的年轻士兵欲言又止。他不知道该如何安慰这个经历了丧妻之痛的男人。</p><p>　　“小慧……”许征颓废地跪在地上。</p><p>　　“也许……也许嫂子早产，先回去了呢……”年轻士兵小声说。</p><p>　　“对，对！还有希望！”许征振作起来。</p><p>司离人看了他们一眼，对刘贾说：“走，去内城区。疏散民众，组织巷战。”</p><h1 id="第十章-众生"><a href="#第十章-众生" class="headerlink" title="第十章 众生"></a>第十章 众生</h1><p>　　“滴嗒”，豆大的雨滴在路面上溅起水花。不知道什么时候，厚厚的黑云已经布满了天空。狂风呼啸着，枯黄的落叶随风飘荡。</p><p>　　这时，一道闪电划破长空，紫蓝色的光芒照亮了已有些昏暗的街道。“轰隆隆”，闪电之后的巨大雷声响彻天地。</p><p>　　大雨，如约而至。</p><p>　　雨中，吴睿拼命地奔跑着，雨水打湿了他的衣裳，但他毫不在意。他就要迟到了，那是一场于他而言十分重要的考试。</p><p>　　宽阔的街道上，时不时会看到一些行人呆愣地站在雨中，脸色惊恐不安地看向天空。刚开始，吴睿只是瞥上一眼便不再理会。可慢慢地，他发现一路上的行人都是如此，这让他疑惑起来。</p><p>　　吴睿停下脚步，想要看看到底是什么吸引所有人的目光。他抬起头，所见的景象使他瞳孔猛地一缩。</p><p>　　一只可怖的鹰兽在陇西郡上空盘旋，锐利的鹰眼搜寻着阻挡兽潮的事物，然后将其一一摧毁。刺骨的寒意瞬间灌满吴睿身体的每一个角落。他想逃跑，却迈不开那双如灌了铅般的腿。</p><p>　　“砰”，紫色的圆面在天空中急剧扩大，不消一会儿便遮住了大片的天空。</p><p>　　紫色警戒！</p><p>　　事实上，紫色警戒并不像大多数人所想的那样，代表着数量更多的兽潮。它从设立至今，有且只有一个含义：</p><p>　　城破！</p><p>　　“呜——”，如闷雷般的警报声响彻整个陇西郡。</p><p>　　“陇西郡外城墙已被攻破！所有居民尽快前往最近的地下避难所等待救援！再重复一遍……”已多年未使用的传声法阵再次发出光芒，传出的声音带着些许杂音。</p><p>　　“哔——”，传声法阵突然发出刺耳的爆鸣声。</p><p>　　“不……不要过来！啊！”，又是几声兽吼，传声法阵彻底沉寂下去。</p><p>　　恐惧如瘟疫般在城内蔓延，骸云鹰所飞过的地方都响起一片尖叫声。靠近城墙的城区开始传出爆炸声，时不时还掺杂着几声兽吼和人类的惨叫，可没一会儿又恢复死寂。</p><p>　　“啊！”人群惊慌失措，他们不顾一切的跑着，希望能找到一个安全的地方。</p><p>　　吴睿强迫自己冷静下来，可那不停发抖的身体还是暴露出了他的不安。忽地，他似想到了什么，喃喃道：“去内城区！对！就去那！那里有军队，还有结界！”</p><p>　　没有再多废话，吴睿拔腿就跑。听着后面由远而近的兽吼声，吴睿脑袋一片空白，只是麻木地跑下去。</p><p>　　逃跑的人群逐渐壮大，周围的民居中不断有人加入到逃亡队伍里。队伍中，一对年轻情侣随着人群前进。</p><p>　　突然，女孩脚底一滑，摔倒在地。她想站起来，却发现脚扭伤了。女孩惶惶不安，她死死抓住男孩的腿，死活不肯松手。</p><p>　　“贾钦，别……别丢下我！我求你了！”女孩看着男孩，带着哭音喊道。</p><p>　　“身不由己，别怪我无情。”贾钦一把扯下女孩的手，而后便随着人潮离去。临走时，也没多看女孩一眼。</p><p>　　大雨倾盆，女孩独坐雨中哭泣。在众人眼中，兽潮将至，与自己的性命相比，她的无助简直微不足道。</p><p>　　“哔”，一辆豪华的魔能车从后面追上人群。开车的男人烦躁地鸣笛，人群纷纷向路两旁让去。原本十分拥挤的人潮被魔能车一分为二。</p><p>　　“夫人！夫人！”一个怀抱婴孩的妇人拍打着车窗，向车内一个穿着华丽的女人求情道，“请带上这个孩子吧。求你了，夫人！”</p><p>　　女人看了看孩子，表情略微动容。她转过头，有些为难地看向男人。男人不耐烦地点点头，将车窗打开。妇人顿时面露喜色，正要将孩子递给女人，却突然有人大喊：“别让他们走了！凭什么他们能离开而我们在后面喂那些畜生！”</p><p>　　“对！我们走不了他们也别想走！”人群沸腾起来。无数双不甘的手抓住了来不及关上的车窗，一番拉扯之下，竟是硬生生地将车门扯了下来。</p><p>　　车上的那对男女被愤怒的人群从车中拽出来，转瞬就被人潮吞没。魔能车也在众人的各种打砸之下变成一块废铁。</p><p>　　一栋民居中，一个有些憔悴的妇女牵着男童的手，不知所措地看着她的夫君。此时，她身旁的中年男子正焦急地对面前坐着轮椅的老人说：“爹，快走吧，再不走就来不及了！”</p><p>　　老人叹了口气，道：“你们自己走吧。我老了，活不了几年，死就死了。”</p><p>　　“爹，孩儿不孝！”中年男子眼圈通红，他跪在地上磕了三个响头。然后抱住男童，起身与妻子跑出门去。</p><p>　　见他们逃走，老人心中的大石头也落了地。正要闭眼等死的他，却突然见到殷红的鲜血溅满大门。血液缓缓漫进屋子，腥甜的气味充斥老人的鼻腔，这让他近乎呕吐。</p><p>　　突然，一个圆滚滚的东西“骨碌碌”地滚到老人的脚下。他低下头，想看看是什么东西。</p><p>　　那是一颗头颅。</p><p>　　是老人那六岁孙子的头颅，小小的脸上还保持着好奇的样子。老人脑袋中像是什么炸开了一样，他的呼吸急促起来，而后两眼一黑，竟是在惊吓中死去……</p><p>　　南华路。</p><p>　　“快！一组和二组看看附近还有没有居民！三组负责警戒！”时不待小声道。</p><p>　　得到命令，训练有素的军术士立刻行动起来。两个战术小组三人一队，搜寻附近的民居。另外一个战术小组则分散站位，观察周围的异动。</p><p>　　“队长，不好了！”负责联络的军术士匆忙对时不待说。</p><p>　　“怎么了，一惊一乍的。”时不待警惕地观察着周围。</p><p>　　“前线最新消息，东城墙被异兽攻破，夏侯军守也在战斗中殉职了。”这名军术士沉痛地说。</p><p>　　“可恶啊……”时不待拿出城防图，仔细地看了看，“东城墙被攻破了，那原来的撤离路线就不能再走了。星辰大道也沦陷了……那只能从荣光区穿过去了。”</p><p>　　正说着，躲在家中的居民已陆续被军术士带出来，集中在一起。</p><p>　　“大人，您一定要救我啊，我上有老下有小的，不能死啊。”一个肥胖的男人絮絮叨叨地说。</p><p>　　时不待不耐烦地摆摆手，对一个军术士说：“一共多少人？”</p><p>　　“十三人。”那名军术士答道。</p><p>　　时不待点点头，道：“回去吧。”</p><p>　　“有异兽往我们这来了。”一个负责警戒的军术士匆忙说。</p><p>　　时不待面色一变，说：“二组带居民撤离，一组和三组掩护。”</p><p>　　“是。”二组的小组长说完，便立刻带上居民先行撤退了。</p><p>　　“整合阵形，汇报具体情况。”时不待下令道。</p><p>　　余下的十二名军术士迅速列阵，身上隐隐亮起光芒。</p><p>　　“报告队长，一共有四头异兽，三只天级，一只妖将级。”</p><p>　　“不要恋战，打完就跑。”时不待嘱咐道。</p><p>　　“明白。”众人点点头。</p><p>　　街道上，四只饥肠辘辘的异兽到处翻找着，希望能找到那么一两个人类。就在刚才，它们嗅到了一大群人类的味道。循着气味，果真让它们发现了那些傻乎乎的人类。</p><p>　　只见那些人类站在街道中央，看见它们也不逃跑。</p><p>　　也许是被吓傻了。妖将异兽这么想着。</p><p>　　食物的气息无时无刻地刺激着这四只异兽。终于，它们咆哮着向那群人冲去。</p><p>　　“远攻！”时不待喊道。</p><p>　　十二名军术士举起右手，旋转的法阵在他们的手心浮现，赤色的光芒在手心闪耀。光芒化为一束光柱，径直击向异兽。光柱旁的空气“嗡嗡”作响，高温竟是使下落的雨水化为白汽。</p><p>　　“砰”，四只异兽被猛烈的气浪掀飞出去，爆炸的火光映着军术士们那坚毅的面孔。一只首当其冲的天级异兽在众人集火下直接死亡，另外三只也被炸得晕头转向，竟是一时爬不起来。</p><p>　　“好，二组应该已经走远了，我们也该撤退了。”时不待开口道。</p><p>　　说完，就要带领军术士离开街道。</p><p>　　“人类，不要急着离开嘛。”一个怪异的腔调在街道中回响。</p><p>　　“谁！”时不待警觉起来，身上立刻有咒文浮现。</p><p>　　其他军术士也警惕地看向周围，每个人都描画好了法阵，以便作战时能迅速使用。</p><p>　　一个看上去约莫十四五岁的少年从小巷中走出来，笑嘻嘻地看着众人。</p><p>　　时不待紧张感暴增，他几乎就要直接施法了。</p><p>　　少年打了个响指，几十只不知道从哪冒出来的异兽将时不待等人团团围住。</p><p>　　“这个世界还是挺不错的嘛……”这一次他的声音已和正常人类无异，“人类是一个有意思的物种，有时坚韧得让我害怕，有时又贪婪得让我自叹不如，恶心得令我惊讶……真想看看你们脑袋里装的是什么啊。”</p><p>　　“你到底是什么东西？！”事实上，时不待心中已隐隐有了答案，可他不愿意去相信这个令人恐惧的真相。</p><p>　　“你不是已经猜到了吗？”少年面带微笑。</p><p>　　如果不是在异兽群中，或许时不待真的会相信他只是一个普通的少年。可现实是残酷的……</p><p>　　时不待心道：这件事必须传递出去，要不然……</p><p>　　“你瞧，你杀死了我的宠物的奴仆，是不是应该有所补偿呢？”没等时不待开口，少年又接着道，“所以，我替它们收了点兽粮……”</p><p>　　“你！”时不待怒火中烧，他自然明白少年所说的“兽粮”是什么。</p><p>　　“不要生气。现在，我们扯平了。我不喜欢杀生，所以，我不会对你们出手。但是，这些饥肠辘辘的家伙们我可不敢保证。那么，诸位，为了活着而挣扎吧！哈哈哈！”少年癫狂地笑着，慢慢隐入了黑暗。</p><p>　　少年消失后，异兽躁动起来。三十五只异兽，三十一只天级，四只妖将，这明显不是他们能够对付的。那个少年根本就没想放他们活着离开！</p><p>　　“呼，”时不待吼道，“各位，下辈子还做兄弟！”</p><p>　　“杀！”众人抽出腰间的长剑，一股斗志在心中熊熊燃烧。</p><p>　　雨，更大了……</p><p>　　内城区。</p><p>　　古老的金色结界濯濯生辉，庇佑着这片陇西郡仅剩的净土。一个时辰以来，虽然不断有居民涌入内城区，可还是不足这座城市人口的百分之一。</p><p>　　结界内，居民瑟瑟发抖，结界外，杀戮无穷无尽。</p><p>　　此时，骸云鹰已将目光转向内城区。只要将这最后的结界摧毁，人类的斗志就会彻底瓦解。能量再次在喙中酝酿，毁灭的气息在雨中弥漫。</p><p>　　能量越来越庞大，竟是形成了三个能量团。能量团向结界飞去，速度逐渐加快。终于，能量团击中了结界。</p><p>　　一阵耀眼的紫光，金色结界荡起密集的涟漪，结界下同时响起了尖叫声。紫光消逝，结界却依旧完好无损。</p><p>　　主城楼上，陇西郡所有的军方高层聚集在这，也包括了南、西、北城墙的三位军守。城墙边缘，十名身穿黑袍的男子默默地看着骸云鹰。</p><p>　　“监察使大人，这骸云鹰为何如此强悍？”西城墙军守李东问道。</p><p>　　为首的黑袍男子想了想，道：“事实上君主也有强弱之分，我们将其分为大君主和小君主。先前的岩魔君便是一头小君主，而这骸云鹰则是一头大君主，是君主级中十分顶级的存在。小君主之下还有亚君主，就是那种即将跨入君主级的妖王级，属于那种打不过君主，但在妖王级里无敌手的异兽。”</p><p>　　“原来如此，”李东突然想到了什么，声音有些颤抖，“可……可骸云鹰这么强的话，那领导这次兽潮的异族又是什么级别！”</p><p>　　“不要想那么多了……待会儿，我和我的同僚尽力拖住骸云鹰，你们再使用‘虚魔’封住它的五感，最后我们合力一举击杀它。记住，这次不成功便成仁……如果真的没能成功的话，就只能使用那个了……”</p><p>　　“还不知道大人怎么称呼？”</p><p>　　“代号‘屠魔’。”</p><p>　　梦蝶斋。</p><p>　　“紫色警戒，你不出手吗？”白宇疑惑道。</p><p>　　“他们自己能处理，而我，还需要等它出现。我现在出手只会打草惊蛇。倒是你，需要我送出城去吗？”蝶梦缓缓道。</p><p>“我想参加救援。”白宇坚定地说。</p><h1 id="第十一章-救援"><a href="#第十一章-救援" class="headerlink" title="第十一章 救援"></a>第十一章 救援</h1><p>　　“救援？”蝶梦轻笑道，“你能做什么？光凭一腔热血可什么也做不了。”</p><p>　　“我可以绘制星阵……陇西郡是我的故乡，我也想出一份力。”白宇道。</p><p>　　蝶梦沉默了一会儿，道：“别死了。”</p><p>　　话音刚落，白宇只觉眼前一花，自己便出现在一个人声鼎沸的广场上。这儿的每一个人都专心处理自己的事情，所以没人注意到突然出现的白宇。</p><p>　　有不少人站在一些高台上，为各自的救援队招揽志愿者。白宇看了看周围，认出这里是内城区的中心广场。</p><p>　　“还有人吗？我们小队还差一个人！”一个穿着陇西郡术法学院校服的学生喊道。</p><p>　　白宇看了看周围，见没有人加入，便走上前去，道：“我可以参加吗？”</p><p>　　“你？这位同学，我好像没见过你啊？”那位学生见白宇年纪不大，误以为他也是学生，“算了算了，也不重要……你是什么级别的术士，救援行动是很危险的。”</p><p>　　“凡级。”白宇有些不好意思，又急忙说，“但我精通星阵。”</p><p>　　说完，便从地上拾起一根木棍，拉着那名满脸疑惑的学生到一片沙地上。白宇开始在地上勾画起来，一个略微复杂的星阵在白宇手下渐渐成型。</p><p>　　勾画完星阵纹路，白宇又从自己的包中拿出一个小瓶子。打开瓶盖，白宇从瓶中倒出了一些粉末。他小心翼翼地将粉末撒在法阵的纹路中，这下一个完整的星阵就算是彻底完成了。</p><p>　　那名学生看得满头雾水，问道：“你撒的是什么粉末？”</p><p>　　“那是铜粉，星阵循环能量需要介质，而金属粉末便是其中一种。说起来，血液会比金属粉末的效果更好一些，但我们一般不常用。效果最好的还是魔晶石粉末，不过那种东西只有大型星阵才会用上。对了，法阵也和这个差不多。”白宇解释道。</p><p>　　紧接着，白宇感应着天地间那股微弱的星辰之力。这时，白宇想起了老师曾对他说过：“无论是什么时候，哪怕是白昼，星辰总是在我们左右。所以，年轻人，无论发生了什么，都不要让自己心中那道光熄灭。”</p><p>　　白宇缓缓地将这股能量与星阵连接，轻声念道：“星光斩破黑暗！”</p><p>　　霎时，星阵亮起柔和的白光，一个由数百个棱形组成的防御结界迅速形成。那名学生目测了一下，认为以这个结界的大小，保护十个人是绰绰有余了。</p><p>　　“厉害！”那名学生赞叹不已，“小兄弟，我叫崔俊，以后咱们就是队友了。”</p><p>　　“我叫白宇，请多多关照。”</p><p>　　两人相互认识后，便一同前往小队的集结点。</p><p>　　“我们是陇西郡术法学院第九救援队，加上你，一共是十个人。我们小队平均等级为地级，我们的队长，也就是我的学长叶枫是天级丙等。”</p><p>　　“像你们这样的小队很多吧。”</p><p>　　“没错，我们学院有三十支救援队。原本我还挺担心这次救援行动的，因为我们当中没有人会绘制法阵。你也知道，如果队伍里有一个阵法师的话，那安全系数就会提高很多。但阵法师又很少，也不会来我们这种小队伍。”路上，崔俊向白宇介绍道。</p><p>　　“阵法师确实很少，就连军方那也没多少人。”白宇对崔俊的话深表认同。</p><p>　　“集结地就在前面。”崔俊向前挥了挥手，“走，我们过去。”</p><p>　　二人到了广场的一个角落，这里已经被人清理出了一片空地。几个学生模样的人在那说着什么，一些物资被散乱地堆砌在周围。</p><p>　　“各位，”崔俊欣喜地说，“瞧，我找到了一个摘星者。”</p><p>　　那几个学生循声看了过去，白宇微笑地向他们点头致意。</p><p>　　“你好，我叫叶枫，欢迎你的加入。”叶枫走到白宇面前和他握了握手。</p><p>　　“我叫白宇。”白宇道。</p><p>　　之后，叶枫便热情地向白宇介绍队伍里的其他成员。</p><p>　　“刚刚那人是崔俊，我想你们应该都已经相互认识了，他是我们小队的斥候。在那边清点物资的那个，就是那个有点胖的家伙叫陆清，负责后勤。”叶枫用手指了指不远处的一个学生。</p><p>　　“你们挺专业的呀。”白宇惊叹道。</p><p>　　“那当然……那是梁衫、梁知两兄弟。嗯……那是柳青和芳岛惠子，柳青负责救治工作。最后两个分别是黄柯和张轩，黄柯是一个力拙高阶的武者。”</p><p>　　白宇惊奇地看着那个抱着长剑的青年，这是他第一次看见武者。</p><p>　　“芳岛惠子是东瀛郡人吧？”白宇好奇地问。</p><p>　　叶枫点点头，道：“是东瀛神社来的交换生。”</p><p>　　“我们负责哪块区域的救援？”</p><p>　　“玄墨区，那里暂时还没有异兽侵入，比较安全。”叶枫拍了拍手，“九队的都集合了，准备出发了。”</p><p>　　玄墨区。</p><p>　　玄墨大道，九个年轻人在雨中缓缓前行。一个身着蓝袍的男子抬头看了看阴沉的天空，虽然一片昏暗，但他知道现在应该是黄昏时分。</p><p>　　大雨倾盆而下，可雨滴在接近他们时却诡异地向两旁落去。一行人虽在雨中行，却滴水不沾身。仔细看去，只见一层近乎透明的结界笼罩着他们。</p><p>　　“白宇，你这避水结界不错啊。”张轩笑着说。</p><p>　　“除了这个，这结界还能遮蔽我们的气息，让异兽无法轻易发现我们，不过只能骗骗天级以下的异兽。”白宇遗憾地说。</p><p>　　“这就足够了。时间不多，我们得加快速度了。崔俊去探路应该也差不多回来了吧。”叶枫开口道。</p><p>　　突然，一把紫色的匕首从远处飞来，刺进了众人前的空地上。一阵耀眼的紫光，一个握着匕首的男子出现在众人眼前。</p><p>　　那人正是崔俊。</p><p>　　“前面没有异常。”崔俊顿了一下，又接着说，“不过，我也没看到人，应该都去内城了吧。”</p><p>　　叶枫想了想，说：“惠子，探查仪带了吧。”</p><p>　　“带了。”芳岛惠子答道。</p><p>　　“走，去玄墨区中心。”叶枫道。</p><p>　　众人商讨了一会儿，便开始往玄墨区更深处走去。一路上，白宇一行人都惊讶地发现，确实如崔俊所说，玄墨大道两旁的房屋内一个人都没有。</p><p>　　但毕竟他们人少，一些地方没能细查，保不齐人就藏在那些隐蔽的角落。</p><p>　　“奇怪，难道真的都撤离完了？”叶枫疑惑道。</p><p>　　没多久，众人到达了玄墨区中心。芳岛惠子放下背包，取出一个奇特的木盒子，轻轻地放在地上。</p><p>　　“这就是探查仪？”白宇好奇地问。</p><p>　　“对，是模仿异兽的五感制作的。异兽的嗅觉和听觉十分灵敏，有些异兽甚至能听见人类的心跳声，这给了我们启发。”叶枫解释道，“这个不是成品，不过用来探查玄墨区是足够了。”</p><p>　　说完，叶枫将右手放在木盒上，向里面注入灵力。木盒没有任何变化，但白宇却感觉到一道看不见的波由此扩散出去。</p><p>　　这道波飞速扩散出去，又原路返回木盒，收集到的信息又通过木盒进入叶枫脑中。</p><p>　　“西北方向四里处有活物，气息很微弱，应该是人类。”叶枫道。</p><p>　　“那我们走吧。”崔俊说。</p><p>　　众人马不停蹄地赶往西北方向，希望能尽快找到那些人，然后将其带走。不到一盏茶的功夫，白宇一行人便来到一座叫“品香阁”的饭馆。</p><p>　　饭馆大门紧闭，门口挂着的灯笼随风摆动。叶枫走到门前，轻轻敲了三下，然后竖耳倾听门内的动静。</p><p>　　这时，门内响起了刻意压低的说话声。</p><p>　　　“刚才门好像响了，会不会是那些怪物来了。”这是一个有些沙哑的男声。</p><p>　　“浩浩，别害怕，有我在呢。”一个略微颤抖的声音响了起来，听上去是一个年轻女子。</p><p>　　“别瞎说，声音有规律，是有人来了。快，帮我把桌子推开。”门内又响起了一个男子的说话声。</p><p>　　话音落下，门内又安静下来。紧接着，一阵刺耳的声音响起，大门被饭馆里面的人打开。开门的是一个年轻人，看见叶枫，他脸上露出如释重负的表情。</p><p>　　“可算有人来救我们了。”他让开身，“你好，我是这儿的工作人员，你们可以叫我小王。”</p><p>　　“里面安全。”叶枫对身后的队员们说。接着，又看向饭馆里面。除了小王，里面还有一个中年男子、一个年轻女人和一个小孩。</p><p>　　“里面的人都出来吧，我们去内城。”崔俊凑了上来。</p><p>　　“你们为什么躲在这？这里也出现异兽了吗？其他人呢？”叶枫一口气问了许多问题。</p><p>　　“没有异兽，”小王脸上露出些许惊恐的表情，“但是出现了好多黑色的人形怪物，它们把很多人都拖走了。我和肖叔还有那个女人躲在饭馆里才逃过一劫。”</p><p>　　“怪物？”叶枫思索着。</p><p>　　另一边，白宇目瞪口呆地看着那个年轻女子，他结结巴巴地说：“王……王婷，你怎么会在这？其他孩子呢？”</p><p>　　谁知这一问，王婷却轻声抽泣起来。白宇不知所措地看着她，心中却暗自埋怨老师为什么不教自己怎么安慰女孩。</p><p>　　也许老师也不知道吧。他想道。</p><p>　　白宇心中下定决心：下次一定要找崔俊问问这个问题！</p><p>　　正当白宇胡思乱想的时候，王婷终于平静下来，轻声说：“除了浩浩，都……都被怪物抓走了，就……就连陈欣老院长也……”</p><p>　　白宇无言地看着她，心中无比纠结，只好转向浩浩，说：“你叫浩浩是吧，放心，那些厉害的哥哥姐姐们会带你和王婷姐姐去安全的地方。”</p><p>　　浩浩小小的脸对着白宇，身体却又往王婷身后缩了缩。白宇摇摇头，无奈地叹了口气，向崔俊走去。王婷看着他愁眉苦脸的样子，忍不住轻轻笑了起来。</p><p>　　她对浩浩说：“不要怕，那个哥哥也算是王婷姐姐的弟弟哦。”</p><p>　　正走向崔俊的白宇看到小王，神情疑惑起来。他上下打量着小王，道：“我们是不是在哪见过？”</p><p>　　“没有吧，肯定是你记错了。”小王讪笑道。</p><p>　　白宇点点头，不再多问。</p><p>　　“不好，谁看见柳青了！”张轩突然焦急地喊道。</p><p>　　“怎么回事？柳青呢？她刚才不是还在那吗？”叶枫问道。</p><p>　　“不知道啊，一转眼就不见了……都怪我，没看好她。”芳岛惠子十分自责。</p><p>　　“不……不对，梁氏兄弟去哪了？！”陆清惊恐地说。</p><p>　　“有黑影闪过，但我没感受到任何活物的气息。”黄柯警觉地说。</p><p>　　“是……是那些怪物！”肖叔惊叫起来。</p><p>　　“队长，怎么办？”崔俊紧张地问。</p><p>　　就此离开，还是寻找失踪的队员，这个迫在眉睫的问题摆在叶枫面前。无论做出哪一个决定，都需要极大的决心。</p><p>　　三个地级术士悄无声息地消失，让一股阴霾笼罩在众人心中。每个人心中都紧绷着一根弦，担心下一个消失的就是自己。</p><p>　　叶枫兀自思考着。良久，他缓缓开口道：“那怪物能在我们的眼皮底下把他们劫走，如果真有杀心的话，恐怕他们凶多吉少。我们能做的，只有将这里的事情上报军方，让他们来处理。”</p><p>　　“也……也只能这样了。”崔俊无奈道。</p><p>　　突然，肖叔惊恐地捂着自己的脖子，大量的血液从上面一条细长的伤口喷出。</p><p>　　“救……救……”还未说完，肖叔便倒在了地上。他的身体抽搐几番，再无声息。</p><p>　　一个形似肖叔的黑影在愤怒的众人面前咧开嘴，诡异的笑了笑，而后消失在阴影中。</p><p>　　“该死！那到底是什么东西？！”崔俊破口大骂。</p><p>　　王婷将浩浩搂在怀里，不让他看到这可怕的一幕。</p><p>　　“你们看到的怪物就是那个吗？”白宇问道。</p><p>　　王婷微微颤抖，道：“不……”</p><p>　　她话音未落，小王自顾自地叹了口气，道：“算了，我不想和你们这些愚蠢的家伙玩下去了。正式介绍一下，我叫洛峰。现在，我真诚地拜托你们，去死吧！”</p><p>霎时，除了白宇和浩浩，每个人的身后都出现了一个黑影。它们整齐划一地用手抹过叶枫等人的脖子，这几个年轻人便无力地倒了下去。</p><h1 id="第十二章-永不熄灭的光"><a href="#第十二章-永不熄灭的光" class="headerlink" title="第十二章 永不熄灭的光"></a>第十二章 永不熄灭的光</h1><p>　　“你这混蛋！”白宇怒火中烧，扬起拳头就要打向洛峰。</p><p>　　突然，一个黑色的人形怪物鬼魅般出现在白宇身后，飞快地抓住他的袍子，将他狠狠地甩了出去。</p><p>　　飞出去的白宇砸在墙上，剧烈的疼痛几乎令他昏厥过去。伤口火辣辣的疼，身体就好像要散架一般。</p><p>　　白宇艰难地爬起来，红色，点点的，顺着脸庞流下来，在锦上缀出一朵殷红的花。殷红凄静地绽放着，缓缓的渲染出一片瑰丽的月。被染红的蓝色长袍弥漫着腥香，朵朵血莲驻足在地上。</p><p>　　“妖鬼，下手别那么重，弄死了可就没得玩了。”洛峰笑着说。</p><p>　　“我……一定会……杀了你！”白宇忍着伤痛站了起来。</p><p>　　“当初教会那些人遗漏掉你也不是什么坏事嘛，起码……现在我可以得到一个上好的材料。”洛峰抓住了正要冲去打他的浩浩，“你们不是好奇这里的人去哪了吗？他们就在这……”</p><p>　　话音刚落，街道那些阴暗的角落里爬出许多黑色的人形怪物。它们贪婪地看着白宇，嘴里不断发出低沉的嘶吼声。</p><p>　　“你……你做了什么！”白宇吼道。</p><p>　　洛峰没有理会白宇的质问，他自顾自说：“看啊，怨妖，世间最完美的艺术品。它们贪婪、狡诈，是黑暗中真正的猎手。而我，伟大的飞星执事，是我创造了它们！”</p><p>　　“不需要很复杂的过程，只要在他们生前稍稍折磨一下，再对他们的尸体施加一点点咒语，你就能得到这些可爱的小怨妖们。”洛峰脸上带着病态的笑容。</p><p>　　“你这个恶魔！”白宇终于知道为什么会感觉不到活物的气息了，因为它们根本不是活物！</p><p>　　“谢谢夸奖。”洛峰浮夸地行了个礼，他指了指妖群中的一只怨妖，“看看那只怨妖，她叫夏天，是我的未婚妻。可有一天，她背叛了我，还想和那个男人杀了我！”</p><p>　　洛峰面目狰狞，他癫狂地喊道：“他到底那里比我好！我比他有才华，也比他更爱夏天，可是为什么？！为什么？！”</p><p>　　变脸般，洛峰又平静下来，道：“后来，我把她炼化成了怨妖。我看着她把那个男人撕成了碎片，当时我就觉得这是世上最美妙的事，没有之一。”</p><p>　　白宇看着阴郁的洛峰，觉得他已经完全疯了。</p><p>　　“不过，这都不是能令我满意的作品。我最成功的作品是它，妖鬼！那时我刚刚入门，第一个作品意义重大。所以，我炼化了我的父亲。现在看来，它确实没让我失望。”</p><p>　　“浩浩只是个孩子，你放了他，有什么冲我来！”白宇没有听洛峰做的那些天怒人怨的事，他看着在洛峰手里挣扎的浩浩，心中愈发愤怒。</p><p>　　“这样吧，如果你能击败它，”洛峰指着夏天，“我就放了这个小鬼。”</p><p>　　“好，你不要反悔。”白宇答应下来。</p><p>　　“放心，这点信誉我还是有的。”洛峰笑了笑。</p><p>　　突然，白宇只感觉眼前一花，那只怨妖便狠狠地撞了上来。白宇又一次飞了出去，他一路滚在地上，最后停在了叶枫等人的血泊之中。</p><p>　　“咳咳咳……”，鲜血顺着白宇的嘴角滑落在地上。无比猛烈的撞击，让白宇觉得自己的五脏六腑都移了位。</p><p>　　“我是……不会放弃的！”白宇咬紧牙关，慢慢地站了起来。</p><p>　　又是一道快得看不清的黑影。</p><p>　　“砰”，白宇被撞进了“品香阁”，木门的碎屑洒落在他身上。白宇浑身上下都是红色的血迹，殷红的血液不断滴落在地板上，他已经分不清是叶枫的血液还是他自己的血液了。</p><p>　　怨妖也爬进“品香阁”，欣赏着白宇痛苦挣扎的样子。</p><p>　　“呼，不管是谁的，我先借用一下吧。”白宇喃喃道。他摇摇晃晃地站了起来，踉踉跄跄地走了几步。</p><p>　　怨妖没有阻止白宇的行动，它想看看这个可笑的人类想干嘛。另外，它不认为白宇还能耍出什么花招。</p><p>　　白宇不断走着奇怪的步伐，被血液浸湿的靴子在地上留下红色的脚印。没一会儿，一副由脚印构成的古怪图案出现在地面上。</p><p>　　终于，怨妖意识到了不对劲。它跃向白宇，想一举杀了他。可白宇比它抢先一步，他带着满腔怒火念道：“星光斩破黑暗！”</p><p>　　一阵耀眼的白光照亮了饭馆，怨妖的身上冒出了阵阵黑气。怨妖痛苦地在地上打滚，充满怨念的尖叫声几乎刺破白宇的耳膜。</p><p>　　最终，怨妖停止了挣扎，化作了一堆枯骨。</p><p>　　几乎脱力的白宇缓缓走出了“品香阁”，好几次他都想直接躺在地上，闭上眼一睡不起。</p><p>　　“该兑现你的承诺了。”白宇说。</p><p>　　“还不赖嘛，真是小瞧你了。”洛峰微笑道。</p><p>　　“快，放了他！”白宇加重了语气。</p><p>　　“别急，就在刚才，我改变了主意。如果我杀了这个小鬼，愤怒的你会不会产生更大的怨念呢？真是令人期待啊。”洛峰兴奋地看着浩浩，从腰间抽出了一把锋利的匕首。</p><p>　　“你这个不守信用的混蛋！”愤怒的白宇拖着疲倦的身体冲了上去。</p><p>　　站在洛峰身旁的妖鬼毫不迟疑地将白宇拍飞出去，它咧开大嘴，无声地嘲笑着白宇的不自量力。</p><p>　　洛峰的匕首轻轻地划过了浩浩的脖子，殷红的血液溅满了洛峰全身。浩浩眼中的光彩黯淡下去，垂下了小小的脑袋。</p><p>　　洛峰舔了舔唇边的鲜血，兴致勃勃地说：“看来是我错了，果然还是自己动手更能让人兴奋啊。眼睁睁地看着重要的人死去却什么也做不了，这种感觉一定很痛苦吧。”</p><p>　　白宇眼圈通红，过去他曾看着父亲和老师在眼前死去，如今同样的事再次重演，可他依旧没有能力阻止这一切。</p><p>　　白宇倔强地盯着洛峰，大声道：“我一定会亲手血刃你的！”</p><p>　　“小子，凡人们之所以能怀抱希望，是因为他们看不见死亡。他们被那些虚假的表象迷惑，殊不知，一切美丽都是短暂的。”</p><p>　　“才不是呢！”白宇吼道，“老师说过，不管夜晚多么黑暗，黎明总会到来！我，白宇！心中那道光永不熄灭！”</p><p>　　“可笑至极！”洛峰对白宇的话嗤之以鼻。</p><p>　　白宇低着头，兜帽的阴影遮住他的脸庞。以白宇为中心，一股冰冷的寒意迅速地向周围蔓延。地面凝起了白色的寒霜，刺骨的寒意让洛峰打了个冷颤。</p><p>　　温度还在不断下降，洛峰心中顿时警铃大作。虽然他不知道这是什么情况，但他的直觉告诉自己，必须阻止那小子！</p><p>　　“杀了他！”洛峰冷冷地说，“你杀不了我的，别做无谓的挣扎了！”</p><p>　　无数怨妖争先恐后扑向白宇，腐肉的恶臭弥漫着整条街道。忽地，白宇身上浮现出诡异的紫芒。一股猛烈的气浪从他身上扩散出去，与此同时，怨妖的动作变得无比迟缓。</p><p>　　白宇脱下兜帽，抬起头看着洛峰。他的眼睛化作妖异的紫瞳，平静的眼中透着无尽的杀意。只是这么看着，却让恐惧在洛峰心中疯狂滋长。</p><p>　　“我不管你是什么东西，也不管你有多大能耐。只要你与我为敌，就算是神，我也杀给你看！”就像是换了个人似的，白宇冷冷地说。</p><p>　　只见雨水化作水雾，又慢慢变为寒冰，一个晶莹剔透的刀柄在白宇手里凝结而成。紧接着，细长的刀身也完全形成。</p><p>　　洛峰强作镇定，道：“垂死挣扎罢了。”</p><p>　　这时，怨妖恢复了原本的速度，它们嘶吼着冲向白宇。怨妖宛若黑色的潮水，几乎淹没了白宇所处的位置。</p><p>　　白宇双手持刀，气势却一点也不输给妖潮。只见白宇飞快地挥舞着长刀，妖潮中闪着漫天的白光。白光愈发密集，不断有怨妖发出刺耳的尖叫声。</p><p>　　长刀锋利异常，如切豆腐般轻而易举地切开怨妖的身体，冒着寒气的刀身在它们的伤口上留下厚厚的寒霜。</p><p>　　好似不知疲倦，在如此众多的怨妖围攻下，白宇竟是还有余力向洛峰走去。挥刀，不断地挥刀！每一刀都能杀死数只怨妖，白宇前进的路上铺满了怨妖的残肢和尸体。</p><p>　　怨妖开始畏惧，它们徘徊在白宇周围，却不敢上前。每次对上白宇那双凌厉的双眼，怨妖都会惨叫一声，然后飞快地躲进阴暗的角落。</p><p>　　“废物！”洛峰气恼地骂道。</p><p>　　白宇缓缓地走向洛峰，长刀闪烁着光芒。杀了无数的怨妖，长刀却滴血不沾，依旧晶莹剔透。</p><p>　　突然，一个巨大的身影从天而降。白宇向后一跃，轻松地躲开了偷袭。“砰”，一个两人高的怨妖握拳砸在地上，青石地面竟是被砸的龟裂。</p><p>　　白宇落在地面上，看着那个人高马大的怨妖。那只怨妖锤了锤胸口，阴狠地盯着白宇。白宇微微吃惊：“妖王级，倒是有趣。”</p><p>　　“哈哈哈，狂妖来了，你完蛋了！妖鬼，快，和你的兄弟杀了他！”洛峰癫狂地大笑。</p><p>　　白宇嘴角微微扬起，举起了长刀。轻轻斜斩，一道猛烈的白色刀气呼啸着向狂妖席卷而去。刀气将狂妖从右肩到左腰分为两半。</p><p>　　没有尖叫，没有血液喷洒而出。在它没能避开刀气的那一刻便注定了它的死亡。被寒气冻结成冰块的狂妖倒在地上，化作了满地的碎片。</p><p>　　“怎么……怎么可能……”洛峰有些惊愕，“不过……”</p><p>　　此时，白宇的影子在他的身后站了起来。影子缓缓地伸出手，悄无声息地接近白宇的脖子。眼看就要得手，谁知突生异变。</p><p>　　白宇将长刀刺进地面，与此同时，一个白色的星阵出现在他脚下。星阵飞速旋转，亮起了刺眼的光芒。</p><p>　　影子被光芒照耀，仿佛是掉进了烈火之中，黑影不断脱落，化作点点灰烬。最终，影子全部散去，恢复成了正常的模样。</p><p>　　而洛峰则吐出了一口鲜血，影子的消散让他遭受了反噬。洛峰气急败坏地吼道：“妖鬼，把他给我撕成碎片！”</p><p>　　霎时，妖鬼如离弦的利箭冲向白宇。白宇身形一晃，转瞬之间便消失在妖鬼眼前。突然，洛峰感到身后冒起了刺骨的寒意。</p><p>　　正欲转身，却感到一阵冰寒穿过身体。洛峰无力地向前倾倒，想要再起来，却发现感觉不到自己的双腿。</p><p>　　洛峰吃力地回过头，看到了与自己分离的下半身。他那巨大的伤口被寒冰冻结，这也是他能多苟延残喘一会儿的原因。</p><p>　　因为寒冷，洛峰的脸色异常苍白。他不甘道：“你赢了，可那又怎样？他们都死了！哈哈，我死了，你也别想活！”</p><p>　　洛峰飞快地吞下一个药丸，身上竟是不断渗出血液。血液滴落在地上，绽放出诡异的红光。两条赤纹从血滴处出发，飞速地在地上蔓延。</p><p>　　赤纹蔓延得越来越快，最后攀上了白宇和妖鬼的身体。白宇想要摆脱赤纹，却发现自己浑身无力，最后只能驻刀半跪在地上支撑。</p><p>　　如同洛峰那般，白宇身上也缓缓渗出血液。可白宇的血液竟是带着淡淡的紫色，妖异无比。他的紫瞳逐渐淡去，恢复成了原本的样子</p><p>　　而另一边，妖鬼的气息不断攀升，隐隐有冲破妖王级瓶颈的趋势。受到赤纹的影响，怨妖们变得暴躁起来。</p><p>　　“真是个傻瓜。”某栋大楼的天台上，一个年轻女子趴在地板上。而她的面前，是一把黑色的魔能狙击枪。</p><p>　　女子长发披肩，身上的一袭黑衣让她完美地融入黑暗中。女子透过视镜观察着白宇的情况，一顶西夷传入的黑色鸭舌帽遮住了她的容颜，也遮住了她此刻的表情。</p><p>　　女子瞄准了妖鬼，轻轻扣动了扳机。法阵产生了巨大的推力，一枚由魔晶石磨制的子弹以恐怖的速度向妖鬼飞去。</p><p>　　她本可以不用管那个人的，可她还是开枪了。她也不知道为什么要帮他。也许是不想那个傻瓜就那么死掉，也许只是单纯的讨厌那个怪物。</p><p>　　“噗”！</p><p>　　“砰”！</p><p>　　在妖鬼被魔晶石产生的能量炸成肉沫后，微弱的枪声才姗姗来迟。洛峰与白宇惊愕地看着那堆肉沫，白宇又抬头看了看远处那栋大楼的楼顶。</p><p>　　“不！”洛峰痛苦地喊道。他之所以还吊着一口气，就是想亲眼看着白宇被妖鬼杀死，可现在妖鬼没了！一阵剧烈的喘息，洛峰终于死去。</p><p>　　妖鬼死后，发狂的怨妖竟是放弃了近在咫尺的白宇，疯狂地冲向那栋大楼。只过了一小会儿，大楼便被团团围住。</p><p>　　突然，响起了一阵连续的枪声。几个呼吸间，数百只怨妖便惨死枪下。白宇清楚，此时的他如果冲过去，会有死在那的可能。</p><p>　　可他还是提着长刀冲了过去。</p><p>　　白宇也不知道为什么会想也不想就过去了。</p><p>　　也许是不想让那个人因为救自己而被杀死。</p><p>　　也许……是因为钱袋落在那了……</p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小说 </tag>
            
            <tag> 儿时旧作 </tag>
            
            <tag> 未完结 </tag>
            
            <tag> 架空历史 </tag>
            
            <tag> 玄幻 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>幻花未开</title>
      <link href="/post/c0f8c79a.html"/>
      <url>/post/c0f8c79a.html</url>
      
        <content type="html"><![CDATA[<h1 id="楔子"><a href="#楔子" class="headerlink" title="楔子"></a>楔子</h1><p>　　洛利地区位于卡伦泽斯王国的西南边境。这里虽是远离王都的边境之地，但这里的繁华景像却并不亚于王都，而这都是因为西南商路的存在。</p><p>　　在洛利地区与摩登斯帝国的交界处，被当地民众奉为圣山的落尔斯基山横卧于此，每年的春季都会有大批的信徒进山朝圣，这个传统持续了很多年，直到三个月前，一头痴迷于收集财宝的恶龙住进了那里……这自然不是什么好事，它巢穴里的那些闪闪发光的珠宝可不是天上掉下来的。自此以后，西南商路日渐荒凉，毕竟商人们是绝对不想那些价值连城的宝贝，变成那头令人生厌的恶龙的“私龙收藏”。</p><p>　　眼看洛利地区就要就此没落，卡伦泽斯的第三任国王西蒙坐不住了。他不惜许下重金，在全国范围内招募能够屠龙的勇士。那一日，前往洛利首府天泰堡自荐的人络绎不绝。虽然大多是想要碰碰运气的骗子，可其中也不乏一些有实力的力士。勇士们慷慨激昂，嘴里的宣誓让人热血沸腾。国王西蒙亲自为他们佩剑，神父为他们祝福，天泰堡的居民站在街道两旁，两眼泪汪汪地为他们送行。队伍吼着战歌，在众人的注视下渐行渐远……不知过了多久，可能是两天，也可能是三天，但这些都已经不重要了。恶龙的那一声长啸，以及三三两两地逃回天泰堡、已然吓破了胆的“勇士”，让商人们彻底放弃了重开商路的希望。这使西蒙焦头烂额，每日茶不思饭不想。一段时间下来，消瘦了不少。</p><p>　　无奈之下，西蒙留好遗嘱，带上了他的亲卫队，亲自前往圣山征讨恶龙。西蒙的营地驻扎在距离圣山4英里处，烹煮食物产生的炊烟袅袅升起。营帐内，西蒙正百无聊赖地拨弄着餐盘中几颗碧绿的葡萄。西蒙之所以没有立刻进山，并不是他因为害怕而打退堂鼓，虽然也有一小部分这样的原因……但更重要的是，一个自称能帮助自己屠龙的老头成功说服了他。当时，那个穿着红袍的老头出现在西蒙的队伍前，满脸严肃地说：“我是艾泽尼斯大陆最强的魔法师，我可以帮助你屠掉那头恶龙！”</p><p>　　对于这种让人啼笑皆非的言论，西蒙自然是嗤之以鼻的。他鼻腔里发出一声轻蔑的鼻音，只当这是个神经兮兮的老头。</p><p>　　“你不信？我知道你九岁时还尿……唔……”</p><p>　　西蒙急忙捂住了老头的嘴，有些慌乱地看了看身后那几十个抬头望天的亲卫队成员，小声对老头说：“你别说了！我信！”</p><p>　　这个突发事件最终以郁闷的西蒙下令原地修整而结束。此时，老人坐在本应属于西蒙的椅子上，悠哉悠哉地享受着丰盛的午餐。每吃下一口，他都会闭上眼，晃着脑袋，摆出一副回味无穷的表情。行军粮当然不会有多好吃，这一点西蒙是知道的。眼前这个老头的一举一动，都在无声地宣示着他只是一个来蹭吃蹭喝的骗子！终于，在老人放下第五个餐盘的时候，西蒙忍不住开口道：“你交给我的死士的咒语到底能不能杀死恶龙？众所周知，龙是魔法的鼻祖，它们身上的龙鳞几乎能免疫这世上大部分的魔法，这也是我没有带上魔法师的原因……我不希望那个勇士此次进山是‘狼入龙口’，就算是死士，他也要死得有价值。”</p><p>　　“也该到了吧……”老人没有理会西蒙的质疑，他缓缓站起身，“走吧，让你见识见识什么叫真正的魔法！”老人脸色傲然，西蒙竟隐隐产生了“这个老头真是世外高人”的错觉。老人走出帐篷，西蒙紧随其后，一老一少在帐篷外眺望着远方的圣山。</p><p>　　西蒙疑惑道：“没什么变化……”</p><p>　　突然，圣山猛地爆发出一阵刺眼的光芒，一层半透明的薄膜以山顶为中心急速向周围扩张。不消一会儿，整个圣山便被薄膜所笼罩。距西蒙4英里外的圣山中，那些他所看不到的地方，惊人的变化正急剧发生着：河流中的鱼不停地跃出水面、数量庞大的鸟群惊慌失措地飞离树梢、动物疯狂地向山下冲去……“啪嗒”，山顶上的死士靠在树上，将手中浸满了鲜血、已经发烫的木盒丢在地上。死士脸色苍白，看着木盒喃喃道：“莫拉保佑，一定要成功啊。”某处深邃的洞穴中，一头卧在珠宝上酣睡的巨大生物睁开了双眼，猩红的瞳孔中透着一丝恐惧……</p><p>　　一声震耳欲聋的龙啸，无数逃亡的动物停下脚步，伏在地上瑟瑟发抖。龙对其它物种有着天然的震慑力，这是深深刻印在它们身上的烙印。可几息之后，动物们对生存的渴望战胜了对强大物种的恐惧，继续仓皇失措地奔涌下山。这时，一抹黑影出现在圣山之上，黑影咆哮着，以极快的速度直冲云霄。那是一头庞大的四足生物，一对巨大的肉翼遮天蔽日。强壮的翅膀有力地拍打着，产生的激烈气流将它送上高空。</p><p>　　龙，出现了！</p><p>　　此刻，它非常地愤怒，它恨那些怯弱的人类使用如此卑劣的手段，更恨自己竟然对此感到恐惧。它是龙！一头真正的、纯血统的龙！不是人类驯养的那些劣等亚龙！恶龙越飞越快，它与薄膜之间的距离在不断缩小。就在它马上要冲破那层囚笼时。突然，恶龙的速度却是诡异地慢了下来。仿佛有一道无形的阻力，紧紧地束缚着它。恶龙最终悬停在了那里，无论它怎么努力扇动翅膀，都无法在前进半分。恶龙不甘地咆哮着，它张起血盆大口，一股似雾非雾的紫气从口中喷出。这是龙的杀招之一——龙息！龙息翻涌着，迅速吞噬了前方的薄膜。大团的龙息滞留在空中，试图瓦解目标。可令恶龙没有想到的是，它身上的束缚非但没有消失，反倒隐隐有变强的趋势。</p><p>　　“转身，闭眼。”老人淡然道。</p><p>　　“啊？好、好的。”虽然不太明白，但西蒙还是选择相信这个老头，“所有人，闭眼，背对圣山！”</p><p>　　“是！”忠心耿耿的亲卫队成员没有迟疑，他们统统放下手中的活计，遵从国王的命令。</p><p>　　就在这时，山顶骤然间爆发出比先前更加刺眼的白光。白光是如此明亮，以至于天空中的太阳都显得黯淡无光。紧接着，一股猛烈的气浪席卷了整片山林。气浪摧枯拉朽地摧毁着一切，不少树木被连根拔起。与此同时，圣山上的所有生物的生命力都在不断流逝。植物在眨眼间枯萎，动物则迅速地衰老。白光越来越亮，圣山上的生物的躯体开始崩解，哪怕远在高空的恶龙也没能幸免。龙鳞、血肉与骨骼，无一不在化作细小的粉尘。恶龙完全消失后，白光渐渐黯淡下去，圣山重归平静。</p><p>　　当西蒙征得老人同意，转身满足自己的好奇心时。那座光秃秃的圣山宛如晴天霹雳，炸得西蒙脑中一片空白。“圣、圣山……没了！”西蒙结结巴巴地说。</p><p>　　“只是变秃了，不碍事……”老人拍了拍西蒙肩膀，“你瞧，我的咒语杀死了它，这世上可不止一种魔法体系……陛下，准备好接受民众的欢呼吧……”</p><p>西蒙感觉手中多了什么东西，他回过神来，就要破口大骂，却发现老人早已不见了踪影。他神秘地消失，就如同他神秘地出现在自己眼前一样。一切仿佛只是一场奇妙的梦，唯有光秃秃的圣山能证明这一切都是真的。西蒙呆滞地看着手中的木盒，耳边还回荡着那个老头的话语……</p><p>　　</p><h1 id="第一章-信"><a href="#第一章-信" class="headerlink" title="第一章 信"></a>第一章 信</h1><p>　　清晨，两鬓斑白的老管家巴希尔将菜肴摆上餐桌，又在座位左边放了一份刚刚送来的报纸，而后站在一旁。“十五日，周末！希望是愉快的一天。”摩登斯帝国北方殖民地的税务官肖维纳·帕里奥格列伸了个懒腰，“巴希尔，早上好。”</p><p>　　“早上好，老爷。”巴希尔微微弯腰。心情大好的肖维纳走到餐桌前坐下，看着上面摆放整齐的精美银器，颇为惊讶道：“巴希尔，这就是你说的惊喜吗？真是太棒了。”</p><p>　　“老爷喜欢就好，这套银器是我昨日从一个潦倒的前卡伦泽斯贵族手里买下的。”面容沧桑的巴希尔答道，“当时他多有不舍呢。”说完，巴希尔笑了笑，接着好像想到了什么，又深深地叹了口气。</p><p>　　“自从卡伦泽斯覆灭、帝国将妖精驱逐到北境雪山之后，我可有很长时间没有看见过这么精美的银器了呢。”肖维纳拿起右手旁的酒杯，细细欣赏着，“故国，真是令人怀念啊……说起来，我面前的这些东西，尼基夫鲁斯①一生中都没享受过吧。”</p><p>　　“他是个好国王。”巴希尔点评道。</p><p>肖维纳咬了一口面包，展开了面前的报纸。只见报纸的头版上印着一副占据了版面三分之一的场景速写。画面中，一个头发凌乱、长着大胡子的男人面无表情地站在绞刑架旁。速写的上面，是一排大大的标题：<strong>冬季大捷，抵抗组织“尖牙”首脑相继落网。</strong></p><p>　　肖维纳皱着眉头，继续往下看这篇超长篇幅的报道：</p><p>　　<strong>“尖牙”头目曼努埃尔、米海尔、弗里德里希在尼斯山伏法！其组织重要成员留里克、茉伊拉在双方交战中被我军击杀！据悉，参加此次作战的是赫赫有名的摩登斯帝国第四军团。此役共击杀“尖牙”成员九百余人，俘获一百零四人。其中安东尼娅侯爵、卡佩伯爵、哈布斯堡伯爵功不可没！此次作战，基本宣告了艾泽尼斯大陆西部的抵抗活动彻底结束！</strong></p><p>　　<strong>皇帝陛下、罗尔克帝国皇帝、洛利共和国元首发来贺电！</strong></p><p>　　下面是记者对参战军官的采访，肖维纳直接跳过了这一段，看向版面末尾的公告：</p><p>　　<strong>鉴于近日卡伦泽斯余孽——魔法师团体的破坏活动日渐加剧，帝国将加大对魔法师的搜捕力度。各地区行政长官如发现使用魔法者，可直接动用武力。市民揭发、击杀、活捉魔法师可视情况授予爵位。窝藏、包庇魔法师者，同罪论处。摩登斯帝国将与原卡伦泽斯子民共建一个更加繁荣的帝国！</strong></p><p>　　见肖维纳脸色有些异样，巴希尔关切地问道：“老爷，有什么问题吗？”肖维纳放下报纸，正欲回答。这时，响起了敲门声。“肖维纳先生在家吗？有您的紧急信件！”门外的人喊道。</p><p>　　“老爷，我去开门。”巴希尔道。</p><p>　　肖维纳点点头，手扶着额头，陷入了沉思。</p><p>　　不一会儿，巴希尔将一封信递给了肖维纳。回过神来的肖维纳接过信封，看见了寄信地址写着的“尼斯夫镇”，心中便隐隐有了不安的感觉。肖维纳取出信纸，目光顺着羊皮纸一行一行地扫了下去。</p><p><strong>亲爱的肖维纳：</strong></p><p>　　<strong>我犹豫了很久也不知道该如何向你诉说这件悲哀的事情。我甚至有想过要隐瞒一段时间。但如你所见，我最终还是决定告诉你，希望你能保持冷静。就在昨晚（三月十一日），你的父亲离世了。因为他平时不喜和人往来的缘故，直到今天早晨他的尸体才被人在厨房里发现。我请了镇上的菲利普医生来查验尸体，可他也没有什么发现。因为时间的关系，我们举办了葬礼。我希望你能回来整理他的遗物。</strong></p><p>　　<strong>望节哀顺变。</strong></p><p>　　　　　　　　　　　　　　                                                                                                                                                                  <strong>你的叔叔</strong></p><p>　　　　　　　　　　　　　　　                                                                                                                                                                  <strong>乔　纳</strong>　　</p><p>　　“是发生了什么重要的事吗？”巴希尔询问道。</p><p>　　“我父亲去世了。”肖维纳站了起来，“巴希尔，去准备一辆马车，我要回尼斯夫镇。”</p><p>　　“好的，老爷。”巴希尔没再多问，应了一声便快步走了出去。</p><p>　　肖维纳也没有闲着，他小跑着进了房间，拿起一堆东西就胡乱塞进皮箱。装好行李，又提着皮箱跑到前门，从衣帽钩上取下自己的圆顶帽戴上。肖维纳匆匆整理了一下衣衫，便打开了房门。温暖的晨光洒进屋内，到处都是耀眼的金黄色。肖维纳眯了眯眼，朦胧中看见一个娇柔的少女站在自己面前。少女身穿长裙，金色的长发垂到腰间，淡蓝的眸子透着动人的光彩。见到肖维纳，正准备敲门的少女举在半空中的手竟是忘了放下。肖维纳愣了一下，随即扯起一个难看的笑容，道：“美丽的凯瑟琳小姐，清晨光临寒舍所为何事？”肖维纳想起了一个东方朋友教他的语句，有样学样地说了出来。凯瑟琳的脸微微一红，轻声道：“帕里奥格列先生，叫我凯瑟琳就好……嗯……父亲大人希望你能参加今晚的家庭晚宴，所以、所以我便来转告先生了。”</p><p>　　“这样吗……”肖维纳沉吟片刻，“刚才一着急居然忘了要向领主大人请示。那还请你帮我转告领主大人，我没法参加宴会了。而且，我还需要一段假期。我遇到了一些事，得回故乡一趟。”</p><p>　　直到这时，凯瑟琳才注意到肖维纳是一副要出远门的打扮。凯瑟琳神色担忧道：“先生是遇到什么困难了吗？需要我做些什么吗？”</p><p>　　“我的叔叔来信说父亲在几天前不幸去世了，他让我回去整理父亲的遗物。”</p><p>　　“啊？！”凯瑟琳惊呼一声，紧忙用手掩着嘴，急切道，“真是对不起，先生，我不知道……帕里奥格列先生，请让我陪你去吧，我能帮上忙的。”</p><p>　　“不用了，凯瑟琳。”肖维纳摇了摇头，“帝国现在的许多地区都爆发了瘟疫，而那里也是受灾区之一。领主大人要是知道我把你给拐到那么危险的地方，他会把我大卸八块的。”</p><p>　　“那好吧。”凯瑟琳脸上闪过一抹失落。紧接着，她微笑道：“父亲大人那里就交给我吧，这么重要的事，他不会怪罪你的。帕里奥格列先生，你多久才能回来呢？”</p><p>　　“也许是半个月后吧，不会太久的。”肖维纳答道。</p><p>　　这时，一辆马车驶过街巷,马蹄急踏,鼻中打出一个响啼,喷出一口白气,发出长长的嘶鸣。“咯啦咯啦……”，马车在肖维纳的房子前停了下来。车夫跳下车，恭敬地说：“帕里奥格列先生，可以出发了。”</p><p>　　“凯瑟琳，再见。”肖维纳说完便要上车。身旁的凯瑟琳深吸了口气，抓住了他的右手。正当肖维纳满脸不解地看向凯瑟琳时，凯瑟琳踮起脚尖，蜻蜓点水般地吻了肖维纳的脸颊。柔软的唇轻轻在脸上留下印痕，凯瑟琳满脸通红，低着头细声道：“再、再见，帕里奥格列先生，一定要注意安全。先生到了那里后，请一定要给我写信，拜托了。我、我会等先生平安回来的。”肖维纳看着少女，微不可查地叹了口气，接着转身登上了马车。两匹黑色的马奔跑起来，马车开始向城外疾驰。凯瑟琳挥舞着右手，眺望着逐渐远去的马车。</p><p><strong>①卡伦泽斯第三十二任国王，以勤政节俭闻名，深受人民爱戴。</strong></p><h1 id="第二章-阴云下的小镇"><a href="#第二章-阴云下的小镇" class="headerlink" title="第二章 阴云下的小镇"></a>第二章 阴云下的小镇</h1><p>　　灰蒙蒙的天空压抑得让人透不过气来，空气中弥漫着如同发霉面包的令人作呕的味道。一阵寒风呼啸而过，肖维纳裹紧了身上的大衣。在经过五天的长途跋涉之后，他终于到达了自己此行的目的地——尼斯夫镇。</p><p>　　“真是没想到会这么严重啊。”肖维纳感叹道。就在半个小时前，车夫在距尼斯夫镇大概两英里的地方停了下来，说什么也不肯继续前进，哪怕肖维纳加价到一枚金艾斯①也没有丝毫动摇。无奈之下，肖维纳只好徒步走完这最后的路程。</p><p>　　在来尼斯夫镇的路上，肖维纳见得最多的便是逃亡的难民和被秃鹫啃食干净的骨架。眼前空无一人的街道，倒是没有太出乎他的意料。一旁的枯树上，一只乌鸦歪着脑袋，好奇地打量着这个陌生的男人。“奇怪，病役如此严重，为什么叔叔还会让我回小镇？难道是叔叔写信的时候，瘟疫的影响还没有现在这么大吗？”肖维纳自语道。</p><p>　　压下心中的疑惑，肖维纳仔细地观察着周围那些低矮的房屋。空旷的街道上，唯有肖维纳的脚步在久久回荡。突然，一阵轻快的脚步声加入进来。没一会儿，脚步声又沉寂下去，似乎是那个人停了下来。肖维纳加快了步伐，终于在一个昏暗的小巷中见到了声音的主人。</p><p>　　那是一个披着红色斗篷的女孩。</p><p>　　女孩背对着肖维纳，嘴里轻声说着一连串意义不明的词汇。女孩的身前，一大滩红色的液体在地上缓缓蔓延，刺鼻的血腥味顿时充斥着肖维纳的鼻腔。女孩似乎注意到了身后的人，她转过头，稚嫩的脸上没有任何表情。还未待肖维纳反应过来，女孩便跑进小巷深处，不见了踪影。地上那滩血迹也随着女孩的离去而消失，仿佛从未出现于此。“这……是巫术吗？怎么会出现在这儿？难道不担心被人发现吗？”肖维纳的眉头越皱越紧，“呵，事情变得越发有趣了。”思索着的肖维纳慢慢向小镇中心走去。</p><p>　　不知不觉间，肖维纳来到了小镇中心的广场。广场上人声鼎沸，似乎小镇大部分居民都聚集在了这里。穿着打补丁的老旧布衣的镇民将广场一圈一圈围了起来。他们神色愤怒，不停地挥舞拳头，嘴里喊着各种口号。</p><p>　　“烧死她！烧死她！”</p><p>　　“让这个邪恶的女巫付出代价！”</p><p>　　“查理神父，请一定要替我们主持公道啊，”一道若有若无的声音哭诉道，“我那可怜的孩子……”</p><p>　　“不好意思，麻烦请让一下。”肖维纳抱着皮箱，费力地挤进人群中，看见了镇民所围观的事情。不算大的广场中央立着一根漆黑的火刑柱，火刑柱高约13英尺，上面绑着一个矮小的女人。女人戴着黑色的头套，粗糙的灰色单衣脏得像抹布一样。瘦弱的身体仿佛一阵风就能将她吹倒，露出来的脚踝似乎用手就能捏断。火刑柱的下方堆满了柴火，并且淋上了某种油脂。愤怒的镇民大声辱骂着火刑柱上的那个女人，时不时还会有几块石头砸在她的身上。肖维纳叹了口气，无奈地摇了摇头。火烧女巫这种事情在大部分灾区多有发生，但绝大多数“女巫”只是一些可怜的女人罢了。</p><p>　　肖维纳拉住身旁一个壮硕的男子，问道：“那个女巫做了什么？”</p><p>　　男子本不想搭理肖维纳，但发现他穿着整洁，不似普通的自由民，便老实答道：“先生，您一定是外地人吧。您可不知道，这几年，我们小镇每个月都会有一些孩童失踪，怎么也找不到。不用说，这肯定是那个女巫干的！前天还有几个猎人在森林里看见了一只怪物，他们差点就回不来了，怪物肯定也是女巫养来抓人的。还有今年的这场瘟疫，死了很多人，这个女巫简直罪大恶极！”说完，男子似乎更加气愤，捡起了几块石头使劲砸向火刑柱。</p><p>　　肖维纳想了想，决定还是离开这里。这时，肖维纳的余光中闪过一个熟悉的红色身影。他偏头望去，发现是小巷中看见的那个奇怪的女孩。女孩依旧面无表情，毫无光彩的眼睛死死盯着火刑柱上的女人。</p><p>　　这两个人之间是有什么关系吗？肖维纳想道。</p><p>　　“神明仁慈。”身着白色长袍的神父查理从分开的人群中穿过，登上广场的高台。两个修士紧随其后，而后站在神父身旁。</p><p>　　“神明仁慈。”镇民停下混杂的谩骂，虔诚地祈祷。</p><p>　　“神明包容所有人，但不会原谅被魔鬼诱惑的堕落女巫！今天我们在此揭露她所犯下的种种罪行，并给她应得的惩罚！”艾发衰容的神父大声道，“约翰，过来，告诉大家你都经历了什么磨难。”神父面目慈祥地看着他。</p><p>　　被称作约翰的中年男人走上高台，怒道：“我原本有着一个完整的家，美丽的妻子，还有两个可爱的孩子。可是昨天傍晚我从地里回家的时候，却发现我的妻子死在一口枯井旁，两个孩子也不见了……都是那个该死的女巫！”约翰的经历引起了丢失孩子的镇民的共鸣，不少人哭了起来，恶毒的谩骂声又渐渐响起。</p><p>　　“我们都是神明的孩子，神明不会忘记你们的。”神父安慰道，“杰森，到你了，那天你看到了什么？”</p><p>　　一个年轻人走了上去，他双眼凹陷，显然已经很久没休息好了。杰森略微发颤道：“前天晚上，我像往常一样在小镇西南的森林里检查捕猎的陷阱。然后、然后我看见了那个怪物！它有两个人那么高，全身长着褐色的毛发，还有、还有锋利的爪子……对了，它、它还长着尾巴，眼睛是红色的！它发现了我，张开那张长满尖牙的嘴，口水不停地滴在地上，它、它想吃掉我！那一定是女巫养的怪物！”杰森捂着脑袋，语气十分激动。</p><p>　　“没事了，孩子，神明会保护你的。”神父拍了拍杰森的后背，“汤姆，送杰森回家。”</p><p>　　“是。”一个修士扶着杰森，慢慢走下高台。</p><p>　　“女巫是危险、残忍的，是魔鬼留在人间的毒瘤。她们会杀死我们的亲人，夺走我们的一切，我们应该怎么办？”神父大声问道。</p><p>　　“烧死她！烧死她！”镇民们狂热地喊道。</p><p>　　“那么现在，用神圣的火焰净化她那污浊不堪的内心吧！点火！”查理下令道。</p><p>　　小镇的巡逻队员将手中的火把丢向火刑柱，火焰接触到柴火堆上的油脂，眨眼间便剧烈燃烧起来。“噼啪”，长长的火舌肆无忌惮地舔舐着火刑柱上的女人，她身上的衣物被迅速点燃，紧接着化为飞灰。一阵阵黑烟斜斜地飘向天空，宛若寄托哀思的黑纱。不断攀升的高温使镇民们安静下来，并慢慢后退到广场的边缘。一时间，广场寂静得让人害怕。很快，不少镇民都注意到了这一点。广场的温度仿佛降到了冰点，一股难以形容的寒意从脚底升起，冲击着所有人的大脑。</p><p>　　“呵呵呵……”炙热的火焰中响起了女人低沉的笑声，她毫无顾忌地笑着，仿佛在嘲弄镇民的无知与愚昧，“可怜的蠢货们，无知终将会让你们付出代价……”</p><p>　　“她、她还没被烧死！她是魔鬼！她会杀了我们！”不知是谁大喊道。</p><p>　　“快、快跑啊！”镇民恐慌地大叫。</p><p>　　“大家别怕，她只是垂死挣扎罢了！”神父大声喊道。</p><p>　　神父的保证让骚乱停了下来，但镇民们依然跑到离火刑柱很远的地方，生怕女巫会突然从火刑柱上跳下来，然后将他们统统杀死。</p><p>　　“查理，我会亲手取走你的狗命的。”女人话音刚落，一团浓浓的黑雾霎时笼罩了火刑柱，一群乌鸦冲破黑雾，在镇民惊恐的目光中飞向天际。紧接着，黑雾散去，露出火焰早已熄灭的火刑柱。肖维纳凝望着那群乌鸦，一副若有所思的样子。突然，他好似想起了什么，又看向那个女孩站着的位置，却发现她早已消失在了人群中。</p><p>　　“女巫已经被重创，她不会再回小镇了！”修士安抚着受惊的镇民，“大家先回去吧。”</p><p>　　人群安定下来，三三两两地离开。肖维纳混迹于镇民中，一同离开了广场。肖维纳漫无目的地走着，脑子里想着今天发生的事情。夜幕逐渐降临，一轮皎洁的圆月从云中探出头来。小镇外隐约传来了狼嚎声。小镇似乎更冷了，肖维纳放下皮箱，搓了搓手。在去父亲的故居之前，肖维纳打算先去公墓看看。</p><p>　　没多久，肖维纳来到了小镇的教堂。远远的他便看到了教堂后面那个有些阴森的公墓。稍微想了想，肖维纳便绕过透出光亮的窗户，从一条小径悄悄地走了过去。墓地的入口有一扇窄门，肖维纳尽量轻地推开它，钻了进去。</p><p>一排排雪白色的花岗岩墓碑屹立在墓地中。目光扫向深处，墓碑逐渐破败起来。肖维纳走向最新的那几个墓碑，扫视着上面的碑文。终于，在第三个墓碑上，他看到了自己想要找的名字：<strong>密尔卡·帕里奥格列。</strong></p><p>墓碑上的生卒日期底下还刻着一句话：<strong>身处黑暗，心向光明。</strong></p><p>　　“终究还是走了呢……老爹。”肖维纳神情有些落寞，“安息吧。”肖维纳随手摘了一枝野花，放在墓碑前，然后原路离开了公墓。</p><p>　　“……这件事……”</p><p>　　“……知道了，我会……”</p><p>　　刚刚关上窄门的肖维纳听到教堂大门那里传来了交谈声。这两个声音肖维纳都很熟悉，前一个是今天看到的那个神父的声音，另一个他暂时还没有想起来。</p><p>　　“……这批货……”交谈声越来越近，肖维纳正打算离开，却发现声音的主人已经发现了他。</p><p>　　“肖维纳，你怎么在这儿？”神父身旁一个精神抖擞的老头惊讶道。</p><p>　　“叔叔？”肖维纳愣了一下，随即反应过来，“因为着急回来，路上没有耽搁多久，所以提前一天回到了小镇，我趁着还有点时间就来看看父亲。”</p><p>　　“哦，下次你回来一定要先来找我，知道吗？”乔纳似乎有些气恼。</p><p>　　肖维纳注意到了乔纳脸上一闪而过的异样的表情，心中的疑惑更盛了一分。不过他没有点明，笑着说：“知道了，叔叔。没什么事的话我先就回父亲的老房子那儿了。”</p><p>　　“等等，”乔纳叫住了正欲离去的肖维纳，“密尔卡的房子前段日子遭了贼，所幸没有丢什么贵重东西。虽然我收拾过了，不过屋子里还是有些乱。”</p><p>　　“卡尔，你在哪？快回家吧！”一个有些沙哑的女音打断了正要说话的肖维纳。肖维纳转身望向远处，看见了一个奔走的身影。没一会儿，一个丰腴的妇女出现在了肖维纳三人眼前。妇女见到了神父，似乎更加悲伤了。她脸上满是泪痕，她抽泣着，说话已然不太连贯：“查理神父，镇长大、大人，我的孩子卡、卡尔又不见了，各、各位大人有、有没有见、见到他……我真的很、很害怕，怕、怕他就像镇上的其他孩子一样失踪……”</p><p>　　“神明会保佑他平安无事的。”神父安慰道。</p><p>　　“这位夫人，能详细说说吗？”肖维纳问道。</p><p>　　“当然可以，先生。”妇女抹了抹眼泪，“卡尔他不是第一次离家出走了，每个月他都会有那么几天消失不见。每次都是一到傍晚就不见他的人影，第二天他又会自己回来。我问过他很多次到底为什么这样，可他总是不说……这个傻孩子，要是被女巫抓去可怎么办啊？”</p><p>　　“卡佩夫人，你先回去休息吧，巡逻队这边我会交代的，一有消息就会告诉你。”乔纳面无表情道。</p><p>　　“谢谢，谢谢大人。”卡佩夫人道谢后便独自离开了教堂。</p><p>　　“没丢东西就好，那我先回去了。再见，查理神父……再见，叔叔。”肖维纳也告别了乔纳与神父。</p><p>　　</p><p><strong>①金质货币，除此之外还有银利弗和铜居尔</strong></p><p>　　</p><h1 id="第三章-父亲的老屋"><a href="#第三章-父亲的老屋" class="headerlink" title="第三章 父亲的老屋"></a>第三章 父亲的老屋</h1><p>　　站在老屋前，肖维纳深深地吸了一口气，感受着那股迎面而来的沧桑感。老屋孤零零的，小镇后面的小山坡上只有这么一栋房子。老屋离小镇不算远，但也谈不上近，从小镇步行到这大概需要十几分钟。</p><p>　　这是一栋有着明显卡伦泽斯传统风格的双层建筑。老屋的外墙布满了岁月的痕迹，爬满了外墙的藤蔓已有些枯萎。老屋历经风雨，已经破旧，可它矗立在那，就像一艘苔藓斑驳，油漆剥落的大木船。</p><p>　　肖维纳将手搭在门锁上，门锁“咔塔”一声便弹开了。淡黄色的柔和光芒洒在了门前的阶梯上。肖维纳微微眯了眯眼，走了进去。老屋的天花板上挂着一个吊台，屋里的光源便来自于上面镶嵌着的几块小小的圆珠。肖维纳没有多少惊讶，这些圆珠是在他小时候便已经存在了的。事实上这些圆珠只不过是打磨过的石头，之所以会发光，只是因为上面涂抹了他父亲捣鼓的炼金粉末。这样的圆珠每个房间都有，每夜为老屋提供光亮。</p><p>　　肖维纳没在会客厅多做停留，他将皮箱放在地板上，径直走进了书房。肖维纳气恼地望着书架上有些凌乱的书籍，嘴唇微微动了动，似乎下一秒就要吐出些恶俗的词汇，但他终究没有说出口。肖维纳走到书桌前坐下，呆滞地看着书桌上放着的笔墨纸张。过了一会儿，肖维纳忽然想起凯瑟琳让自己寄信回去报平安的。他随手抽了一张羊皮纸铺在身前，打开墨盒，拿起鹅毛笔沾了沾墨水。肖维纳稍稍斟酌了一下，在纸上写上了一句话：</p><p>　　<strong>一切安好，勿念。</strong></p><p>　　肖维纳心想：这时候应该没有信差来这儿了吧。</p><p>　　他将写着字的那部分纸撕下来，卷成一卷。右手则伸入大衣掏了掏，竟是像变戏法似的抓出一只灰白色的鸽子。肖维纳把纸卷塞进鸽子腰背部的小信袋中，站起身走到窗前，慢慢地推开了窗户。他抚了抚鸽子的羽毛，小声说：“吉米，把信送到她手里吧。”鸽子晃着脑袋，轻轻啄了啄肖维纳的手腕，又“咕咕”地叫了几声。紧接着，肖维纳将鸽子抛出窗外，注视着鸽子飞入夜幕中。</p><p>　　“接下来……要从什么地方开始呢？”肖维纳扫视了一遍书房，发现了一个倒在书架上的小巧的沙漏。肖维纳走了过去，将沙漏摆正。沙尘恢复了流动。</p><p>　　肖维纳准备整理凌乱的书架。忽然，他瞥见了沙漏上浮现的一行若隐若现的字迹：</p><p>　　<strong>最后的最后。</strong></p><p>　　最后？</p><p>　　“臭小子，你赚不到一百万金艾斯就别回来了！”</p><p>　　肖维纳想起了自己离家时老爹发火的样子，那时他不小心打碎了老爹最爱的花瓶……肖维纳摇了摇头，微微扬起了嘴角。</p><p>　　“每个人最后……不总是要死去吗？”</p><p>　　肖维纳突然想起了老爹的那句感慨，脑海中似乎有什么一闪而过。</p><p>　　死亡？死亡！</p><p>　　身处黑暗，心向光明！</p><p>　　肖维纳急切地在书架上寻找着，一些书甚至被他随意丢在地上。没多久，他找到了自己想要的东西。</p><p>　　那是一本名为《终结》的书。</p><p>　　肖维纳按照记忆飞快地翻书，一会儿便找到了墓碑上的那句话。肖维纳的手摩挲着纸面，不一样的触感让他有些疑惑。突然，肖维纳的手指猛地一疼，像被针扎了似的。肖维纳下意识缩回手指，竟是发现自己在纸面上留下了一抹血迹。就在这时，肖维纳所处的书房变成了陌生的样子。</p><p>　　“这是……密室？”肖维纳拿着书，惊疑不定的打量着周围。他看了看书页，却是发现上面的血迹已经消失不见。</p><p>　　吊台亮着柔和的光芒，狭小的密室一览无余。整个密室除了中央摆放的一张桌子外就没有什么东西了。肖维纳看见了桌子上放着信封和木盒。他走了过去，拿起厚厚的信封，取出了里面的东西。　　　　　　　　</p><p>　　那是一大叠文件，他缓缓展开手中的文件，看了起来：</p><p>　　<strong>臭小子，既然你能找到这儿，说明你的能力已经勉强够格了。今天，我就告诉你家族流传多年的秘密。长话短说，你看到的木盒是我们家族传承多年的东西。这是一个非常危险的咒语，它的威力足以毁掉一座城市。而我们的目标是将它彻底毁掉。可惜的是，我尝试多年还是没能成功。但我也不是没有进展，我的研究记录都在这了，希望你能将研究继续下去。有一点非常重要，不要将它交给任何人！权力的诱惑，我见得多了……很抱歉，我不仅没有能给你一个美好的童年，现在又让你继承这个没有尽头的事业。不管怎么说，臭小子，别让我失望。</strong></p><p>​        “老爹……”肖维纳拿起了木盒。突然，密室又在眨眼间变回了书房。肖维纳想了想，将木盒塞进了大衣里。这时，屋外响起了敲门声。</p><h1 id="第四章-意外来客"><a href="#第四章-意外来客" class="headerlink" title="第四章 意外来客"></a>第四章 意外来客</h1><p>　　肖维纳站在门前，一把拉开了屋门。门后空无一人，没有看见人影的他将上半身探了出去。忽地，肖维纳闻到了一股淡淡的血腥味，他警觉起来。突然，肖维纳的脖子感受到了一道细细的冰凉感。</p><p>　　“别动，要不然就杀了你。”一道细若游丝的女声在肖维纳的背后响起。</p><p>　　“好、好……我不动，你先把刀放下……”肖维纳举起双手说。</p><p>　　就在这时，肖维纳脖子上的冰凉感骤然消失。他急忙向前翻滚，紧接着迅速站起，转身戒备地看向身后。而映入肖维纳眼帘的却是一个晕倒在地上的女人。女人身穿的紫袍不少地方呈现出深色的痕迹。肖维纳顿时明白过来，血腥味应该是那上面散发出来的。虽然那女人晕了过去，但她的手中依然紧紧握着一把匕首。那把匕首异常精美，经验丰富的肖维纳一眼便看出了这是一件附魔物品。除此之外，眼尖的肖维纳还在刀刃上发现了一个奇特的标志。</p><p>　　“巴德尔……这里怎么会有他们的人？”肖维纳神情有些凝重，“是在这一带有什么行动吗？行动失败了？不管怎么说，真是该死啊，竟然劫持到我头上！”</p><p>　　愤愤不平的肖维纳将女人拖进屋里，把房门关上。紧接着又没有丝毫绅士风度地将她一路拖上二楼的卧房。肖维纳稍稍歇了一会儿，使出吃奶的劲将女人抱起，随意地扔在床上。肖维纳抹了抹额头上的汗水，嘀咕道：“这组织伙食很好吗？真是有够沉的。”</p><p>　　金色的晨光透过窗帘的缝隙照进卧房中，艾莉娜躺在柔软的大床上，呆滞地盯着天花板上挂着的石珠。刚刚睡醒的艾莉娜略微有些迷茫。艾莉娜感觉自己睡了很久很久，自从她加入抵抗组织以来，还从来没有睡得这么沉过。身下不是坚硬的地面，也没有烦人的蚊虫。一个荒唐的想法出现在她的脑海中：真想就这么一辈子躺在这儿啊……</p><p>　　艾莉娜伸手在周围摸了摸。</p><p>　　刀鞘，刀柄。</p><p>　　武器还在。</p><p>　　昏昏沉沉的她安下心来，闭上眼又要睡去。</p><p>　　就在这时，房门“吱呀”地一声打开了。一个端着碗的男人走了进来。艾莉娜猛地睁开眼，只见寒光一闪，在眨眼间出鞘的匕首已然向男人飞去。男人歪过头，堪堪躲过这致命一击。一道血痕出现在男人脸上，他的额头渗出了冷汗。与此同时，飞越过男人的匕首深深刺入房门。床上的艾莉娜在瞬间化作点点星光，紧接着手握匕首的她出现在男人身后。</p><p>　　艾莉娜拔出匕首，二话不说便刺向那个男人。男人在发现艾莉娜从眼前消失的时候便反应过来，他顺势往前面滚去，又一次躲过了攻击。</p><p>　　手中的碗被他丢在远处，里面的稀粥洒了满地。见没有得手，艾莉娜又追了上去。男人颇为狼狈地在房间里躲闪着，他破口大骂道：“忘恩负义的白眼狼！我救了你，你却还想杀我！早知道昨晚就把你交给那几个士兵了！”肖维纳想起昨晚那些搜查的士兵，现在还是一阵后怕。</p><p>　　“呵，你这个摩登斯人果然没安好心！”</p><p>　　“你！”肖维纳已经被逼到角落，他死死盯着艾莉娜，慢慢往后退去。忽地，肖维纳大喊道：“你后面有个碗！”说完，他又小声念叨着什么。</p><p>　　艾莉娜冷笑道：“你以为……啊！”</p><p>　　只见肖维纳原先拿着的碗狠狠地砸在艾莉娜的头上。紧接着，艾莉娜的手脚突然不受控制，就像磁石一般紧紧粘在了一起。</p><p>　　“哼，小姑娘，跟我斗？”肖维纳理了理他的衣衫，非常得意地说。</p><p>　　“束缚咒？！你是卡伦泽斯人！”倒在地上的艾莉娜显得很震惊，而后又露出愤怒的神情，“败类！摩登斯的走狗！”</p><p>　　肖维纳被气乐了：“你想杀我还有理了？我这是正当防卫！真是不讲道理。”他将手伸入大衣里掏了掏，拿出了一串吊坠，丢在艾莉娜面前。</p><p>　　“这、这不是……你怎么会有组织的信物？！你到底是谁？”艾莉娜脑中有些混乱。</p><p>　　“这你别管，总之我们不是敌人。”</p><p>　　“我凭什么信你，说不定这是你抢来的！”</p><p>　　“唉，这肉粥可惜了呀……”</p><p>　　十几分钟后，坐在餐桌上的艾莉娜放下第五个空碗，喊道：“喂，再来一碗。”</p><p>　　有些闷闷不乐的肖维纳将他的那份推到艾莉娜面前，道：“我叫肖维纳·帕里奥格列，不是什么‘喂’。”接着又小声嘀咕道：“真是不客气……”</p><p>　　艾莉娜喝下最后一口肉粥，满足地说：“喂，多谢了。我先走了，不送。”说着便站了起来，打算离开。</p><p>　　“你们打算刺杀查尔斯……我说的没错吧。”</p><p>　　“你怎么知道的？！”艾莉娜停了下来。</p><p>　　“看来是这样了……”肖维纳没有理会艾莉娜的问题，“那家伙可不会放过你们。如今这一带几乎被封锁，你没办法离开这里的。”肖维纳看了眼窗外，“你们的小队应该就剩下你一个人了吧。”</p><p>　　“那些蠢货拦不住我的。”</p><p>　　“你的伤还没好……”</p><p>　　“告辞。”艾莉娜不愿再多说。</p><p>　　“我想丹尼尔老师不会希望看到你这样的……我知道你想问什么。”肖维纳打断了正想说些什么的艾莉娜，“我曾有幸跟老师学习过一段时间，他和我提到过你……”</p><p>　　“几天后我能离开？”</p><p>　　肖维纳笑了笑，道：“我会尽力去办的。”</p><p>　　接下来的几天里，肖维纳白日一大早便会离开老屋，晚上便待在书房中研究木盒。长时间的相处下，艾莉娜发现肖维纳学识非常渊博。这让她对肖维纳尊重了许多。这从她对肖维纳的称呼，“喂”变为“帕里奥格列先生”这一点便能看出来。之后，艾莉娜总会缠着肖维纳，让他教授自己一些小咒语。而她偶尔也会拉着满脸不情愿的肖维纳去练习刀术。连艾莉娜自己也没有发现，她与肖维纳的关系似乎在不知不觉间更近了。</p><p>　　时间过得飞快，转眼间已经到了第八天，可艾莉娜还留在老屋。肖维纳无奈地发现自己需要推迟返程的时间。</p><p>　　再过去的两天里，肖维纳不止一次暗示艾莉娜可以走了，可她却装傻充愣，完全没有理会。今天早上，肖维纳彻底摊牌，表示自己已经打通关系，可以送她离开。可没想到的是，艾莉娜竟然说他还需要再被监视一段时间，才能确定自己确实没有问题。</p><p>　　真是可笑至极！</p><p>　　这家伙明显是想赖在这白吃白喝！</p><p>　　坐在书房里的肖维纳愤愤不平地想着。这时，房门“吱呀”一声打开了。艾莉娜从门后跳了出来，肖维纳注意到她手里还端着一个陶罐。</p><p>　　“帕里奥格列先生，我煮了一些汤，为我前几日的行为表示歉意。”艾莉娜将陶罐放在桌上，扭扭捏捏地说。</p><p>　　“嗯？什么行为？”肖维纳有些迷茫。</p><p>　　“你、你这人！”艾莉娜气得跺了跺脚，“气死我了！”</p><p>　　“行了行了，没什么事就别打扰我工作。”肖维纳开始逐客。</p><p>　　“等等，这、这不是圣咒吗？！怎么会在你这？！”艾莉娜才注意到桌上的木盒，她突然激动起来，“传说圣咒拥有很强大的威力……帕里奥格列先生，请一定要把它交给我。如果能摧毁摩登斯王都，让摩登斯帝国陷入内乱，兴许卡伦泽斯就能复国了！”</p><p>　　“不，不能这样做。”肖维纳摇了摇头，“这种力量不属于人类，它不应该被用于战争……会死很多人的。”</p><p>　　“这是复国的机会！我们不能失去这样的机会！难道你还在乎王都那几万平民吗？！”</p><p>　　“在乎？我会在乎吗？”肖维纳猛地站了起来，“我告诉你！不会！我除了魔法研究外什么也不在乎！”</p><p>　　艾莉娜突然沉默下来，没有再与肖维纳争辩。肖维纳愣了一下，怀疑自己是不是说错了什么。很快他就知道了答案。</p><p>　　“什么……也不在乎吗？”艾莉娜喃喃道。</p><p>　　“不、不是！”肖维纳忽然有些慌张，“我是说不在乎敌人的生命。”</p><p>　　艾莉娜情绪低落，小声说：“原来是这样吗？晚安，帕里奥格列先生。”紧接着便快步离开了书房。</p><p>　　第二日早上，查阅了一晚上资料的肖维纳艰难地睁开眼睛。肖维纳的手胡乱摸着，却是在床边抓到一张纸条。他将纸条拿到眼前，看了起来：</p><p>　　<strong>帕里奥格列先生，对不起，我还是得带走圣咒。</strong></p><p>　　　　　　　　　　　　　　　　                                                                                                                                                              <strong>艾莉娜</strong></p><p>　　肖维纳苦笑着，自己还是大意了。</p><p>　　与此同时，尼斯夫镇旁的森林里，艾莉娜正飞奔于此。艾莉娜心中有些愧疚，但为了卡伦泽斯，她不得不这么做。</p><p>　　就在这时，本应该还在老屋的肖维纳，竟是从艾莉娜前方的灌木丛后走了出来。肖维纳面色平静，缓缓道：“艾莉娜，把禁咒交出来吧。”</p><p>　　“恕难从命，帕里奥格列先生。”艾莉娜缓缓后退，并寻找着逃跑的路线。</p><p>　　“那好吧。”肖维纳开始低喃着不知名的词汇。突然，木盒竟是突然从艾莉娜身上飞了出来。艾莉娜面色一变，急忙伸手抓向木盒。不料却是直接将木盒拍飞，而后砸在身旁的树上。肖维纳与艾莉娜双双大惊失色。不曾想，两人预想的可怕景象完全没有出现。只见挺拔的大树下，一个已打开的、空荡荡的木盒躺在那里。就像一个普通的木盒一样，没有任何异样……</p><p>　　两天后，在繁忙的水木港边，肖维纳与艾莉娜互相道别。肖维纳还穿着他那件大衣，帽檐压得低低的。艾莉娜站在岸边，灰色长发被海风轻轻拂起。</p><p>　　“帕里奥格列先生，真是抱歉，这些天给你添了怎么多麻烦。”艾莉娜不好意思地笑了笑。</p><p>　　艾莉娜将右手平举齐胸，握紧而后又打开，一朵蓝色的小花出现在手中。她抓起肖维纳的手，将花放在他的手心。</p><p>　　“海瑞伊①是我最喜欢的花了。”</p><p>　　“哦。”</p><p>　　“你、你这人……就不问一下为什么吗？！”</p><p>　　肖维纳笑而不语。</p><p>　　“算了，船来了，再见。”艾莉娜有些气鼓鼓的。</p><p>　　“不介意我加入‘巴德尔’吧。”肖维纳微笑道。</p><p>　　“什、什么？”艾莉娜还没反应过来。</p><p>　　“我说……我可以成为你的战友吗？”</p><p>　　艾莉娜愣了一下，接着“嘻嘻”一笑：“当然，帕里奥格列先生。”</p><p>　　</p><p><strong>①Hiraeth的音译，意为 a homesickness for a homeyou can’t return to or thatnever was ，即“对于无法回去或不曾存在的家的乡愁。”</strong></p><h1 id="第五章-尾声①"><a href="#第五章-尾声①" class="headerlink" title="第五章 尾声①"></a>第五章 尾声①</h1><p>　　返回北方殖民地后，我从巴希尔口中得知了摩登斯皇帝于巡视途中离世、其二子查尔斯仓促继位的消息。此事之后，本就摇摇欲坠的摩登斯帝国更加动荡不安。先是圣德嘉与艾比斯两省宣布独立。紧接着，虎视眈眈的罗尔克帝国趁虚而入，吞并了嘉歌摩克省。其攻势异常迅速，以至于直到罗尔克帝国的军队逼近摩登斯王都，摩登斯帝国才反应过来。叛乱、起义接踵而至，积压了几十年的矛盾一齐爆发。摩登斯帝国大部分地区都在短时间内陷入动乱。之后，摩登斯帝国的三支主力军团奔赴战场，暂时遏制了罗尔克帝国的扩张。各省爆发的抵抗运动也在当地领主的强势镇压下销声匿迹了很长一段时间，局面似乎有所好转。</p><p>　　慢慢地，人们习惯了四处蔓延的战火，又恢复了往日的生活。摩登斯也好，罗尔克也罢。对于他们来说，无论是谁取得了这场战争的胜利，也不会让自己艰难的处境发生任何变化。前者胜利，因为战争而空虚的国库只会让他们获得更加繁重的杂税;后者胜利，也无非只是换了一只吸血鬼继续剥削他们罢了。</p><p>　　两个月后，我和凯瑟琳在路易斯大教堂举办了婚礼。因为战乱的关系，瓦茨拉夫②同意了我和凯瑟琳前往中立区——洛利共和国定居的提议。不过只有我自己清楚 ，去那里只是为了方便我向“巴德尔”提供资金与情报。我每日重复着枯燥的生活，而这种平淡的日子总是过得很慢。偶尔我也会在静悄悄的夜晚，想起我在尼斯夫镇所经历的那些事情，想起那个像一束光一样的姑娘，这些回忆让我不至于变得麻木。</p><p>　　我原本以为在那一次与艾莉娜分别之后，我们之间将不会再有什么交集。可让我没想到的是，她会以这样一种方式闯入我的生活。</p><p>　　那是一个普通得不能再普通的早晨，我像往常一样坐在餐桌前阅览当日的报纸。我的目光在昨日处决的囚犯名单上匆匆扫过。突然,艾莉娜·温布顿这个名字如箭般刺痛了我的双眼。在那一瞬间，我的心脏仿佛被一双大手紧紧攥住，周围的一切都在离我远去。我放下报纸，有气无力地揉了揉有些僵硬的脸，才发现眼角早已被泪水打湿。</p><p>　　“是哪里不舒服吗?”凯瑟琳坦忧地看着我。</p><p>　　“没事，只是、只是想起了小时候的一些事情。”我站了起来，“我吃饱了。”</p><p>　　我迈着沉重的步伐， 缓缓上了二楼。在楼梯的拐角，我回头看了眼凯瑟琳，她的眼中似乎闪着泪光。我轻声叹息，走进了我那宽敞的书房。我轻轻推开窗，明亮的阳光洒满了房间。微风习习，一时间，我竟是有些失神。恍惚中，我仿佛闻到了一阵若有若无的清香。我愕然，急忙俯身看向窗外。只见砖石的夹缝中，一株蓝色的小花正随风轻摇。忽地，花瓣的边缘开始化作点点星光，逐渐消散于风中。</p><p>　　“海瑞伊斯……”我喃喃道,“ 是你吗?”</p><p>　　蓝花无言。</p><p>　　“我知道是你……”我闭上双眼。</p><p>　　终于，最后一丝茎蔓也化作星光。</p><p>　　海瑞伊是我最喜欢的花了。</p><p>　　哦。</p><p>　　你、你这人……就不问一下为什么吗?!</p><p>　　“因为……”我睁开眼，”你就像它一样啊……”</p><p>　　</p><p>　　<strong>「完」</strong></p><p>　　</p><p>　　<strong>①此章为以肖维纳的视角进行的第一人称叙述。</strong></p><p>　　<strong>②凯瑟琳的父亲，详见《王国的终结》</strong></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小说 </tag>
            
            <tag> 儿时旧作 </tag>
            
            <tag> 奇幻 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>王国的终结</title>
      <link href="/post/447eeab.html"/>
      <url>/post/447eeab.html</url>
      
        <content type="html"><![CDATA[<p>　　摩登斯帝国第三兵团的驻地前，三十九岁的寒鸦佣兵团团长伊库斯眺望着地平线。那里有一座名叫圣光堡的城市，那是古老的卡伦泽斯王国的王都。哦，卡伦泽斯！那个接受了创世神莫拉赐福的王国，世人眼中最接近神明的地方，艾泽尼斯大陆曾经最富裕的国家。卡伦泽斯拥有着这片大陆最强悍的军队之一——圣裁军团，以及神秘莫测的魔法！</p><p>　　当然，这些都已经成为历史。硝烟在王国富饶的土地上弥漫，子民在残破的废墟前哀嚎，摩登斯帝国的铁骑践踏着卡伦泽斯往日的荣光。昔日亲密无比的盟友，如今也成了贪婪的秃鹫。伊库斯曾经也是卡伦泽斯的子民，他的家乡在刚刚沦陷的库斯地区。与其他还在抵抗的同胞不同，伊库斯现在也成了侵略者之中的一员。</p><p>　　伊库斯凝视着圣光堡高大雄伟的城墙，静静等待着。这时，圣光堡的城墙上突兀地响起震耳欲聋的巨响，厚重而猛烈，仿佛来自地狱深处。这巨响是一枚两千磅的花岗石炮弹击中城墙时发出的。巨响每隔两小时便会出现一次，这是摩登斯帝国的卡莎巨炮装填一次所需的时间。炮弹攻击的目标是艾泽尼斯大陆上最坚固的城墙，由凯特三世建于大陆历465年，之后又经历了数十次扩展加固，是卡伦泽斯王都面对强敌时最可靠的倚仗。可即使这样，炮弹还是将城墙砸出了一个巨大的缺口，像被无形的独眼巨人啃了一口。士兵和居民拿着从民居上拆下的砖石木块，如潮水般涌向城墙，用手中的东西尽可能地堵住眼前的缺口。落日的余晖洒满大地，就像轻轻盖向圣光堡的金色裹尸布。</p><p>　　“从前我并不觉得库斯地区产出的红酒有多美妙，”摩登斯帝国七大精锐部队之一的第三兵团军团长、北方殖民地大领主、帝国世袭一等伯爵瓦茨拉夫轻轻摇着手中的酒杯，缓缓走到伊库斯身旁，“直到我的兵团占领了那里。这时去品尝它，当真是妙不可言。”</p><p>　　伊库斯闭上双眼，不去理会瓦茨拉夫的话语。</p><p>　　瓦茨拉夫轻笑一声，道：“老伙计，你可别走错道了。要知道，我欣赏你是因为你识时务，不像那些顽固的家伙，拼死维护着这个病恹恹的王国。”</p><p>　　“我知道。”伊库斯缓缓睁开眼，面无表情地说。</p><p>　　“那就好……说起来，卡伦泽斯王族真是可笑，到现在还不肯签那份投降协议，他们真的认为自己能守住王都吗？哈哈！”说到这，瓦茨拉夫竟是笑出了声，“如果不是因为他们的魔法，以我现在的兵力就能攻下圣光堡！”</p><p>　　“大人所言极是。”</p><p>　　“后续部队将会在这几天抵达战场，攻破圣光堡只是时间问题。整个圣光堡都将是我们的战利品，到时候我会允许你们屠城。”瓦茨拉夫饮尽最后一口红酒，“我已经迫不及待想品尝卡特琳娜女王的滋味了呢……走吧，回营帐。”</p><p>　　伊库斯面色复杂地看了圣光堡最后一眼，转身与瓦茨拉夫一同离去。</p><p>　　主营帐外，一个身穿轻甲的士兵与一名女子站在帐帘前。女子装扮古怪，朴素的亚麻色长袍将自己裹得密不透风，长袍外还披着一条华丽的红色斗篷。斗篷上缝着金丝，价值不菲，这也是贵妇人们最喜欢使用的装饰之一。对于形象，女子身上有着异常矛盾的体现，她既有平民的保守，又带着贵族的妩媚。但这个女子不是贵族，甚至连落魄贵族也不是。因为她的衣物上没有代表着贵族的紫色，也没有除金丝外的精致装饰。斗篷虽然华丽，但也仅此而已。</p><p>　　返回营帐的瓦茨拉夫与伊库斯远远地便看见了女子。瓦茨拉夫皱了皱眉头，他一眼便看出了那个女子是个妓女，还是混得不差的那种。女子身旁的士兵看到了自己的长官，小跑着来到瓦茨拉夫面前，摘下头盔，道：“军团长大人，巡逻小队在附近发现了这个女人。我们本想直接杀掉她，但她说自己有魔法，可以协助兵团拿下圣光堡，所以属下就带她来见您了。”</p><p>　　听了士兵的汇报，瓦茨拉夫有些惊讶，他饶有兴致地打量着女子，开口道：“你有魔法？”</p><p>　　“是的，大人。我能呼唤亡灵，让它们攻击圣光堡，帮助您攻下这座城市。”女子屈膝回答，声音因紧张而略微发颤。</p><p>　　不知怎的，瓦茨拉夫的脸色渐渐阴沉，他冷声道：“你觉得我需要你的帮助、需要魔法的帮助吗？哼，我的士兵们倒是需要你的帮助，而且还不需要你这个魔法师动用一丁点魔法。”</p><p>　　女子瘫坐在地上，她惊恐地摇摇头，半天说不出话来，只能求助似的望向瓦茨拉夫身后的伊库斯。伊库斯转过头，无视了女子的目光。</p><p>　　“你叫什么名字？”瓦茨拉夫不耐烦地说。</p><p>　　女子像看见了最后一根救命稻草，急忙说：“莫妮卡，大人，我叫莫妮卡。”</p><p>　　“什么时候可以开始施展你的魔法？”</p><p>　　“明天晚上，在圣光堡东面的那片树林里，我需要一点时间准备，大人。”莫妮卡的声音细若游丝。</p><p>　　“魔法师，你为什么要怎么做？或者说你想从我这得到什么？”瓦茨拉夫抬起头，望着天上飞过的几只鸟儿。</p><p>　　“我想成为大人领地内的圣女。”莫妮卡飞快地回答道，显然她早就等着这句话了。</p><p>　　瓦茨拉夫死死盯着莫妮卡那双深蓝色的眼睛，想从她那张透着一丝淫荡的脸上看出点什么。良久，一无所获的瓦茨拉夫冷哼一声，点了点头，算是相信了她的话。对于会魔法的人来说，钱财是能够轻易得到的东西，索取钱财对她没有任何意义。但妓女是距圣女最遥远的女人，这个荣耀对她还是有吸引力的。</p><p>　　“士兵，你带这位魔法师女士去歇息。”瓦茨拉夫道。</p><p>　　“是，军团长大人。”士兵左手握拳放在胸前，向瓦茨拉夫深深鞠躬。礼毕，他转身面向莫妮卡，“请跟我来。”</p><p>　　莫妮卡微微点头，跟在士兵身后，向兵团驻地深处走去。瓦茨拉夫注视着渐渐远去的莫妮卡，皱着眉头，不知道在想些什么。忽地，瓦茨拉夫回过神来，开口道：“伊库斯，天色已晚，你先回去休息吧。”</p><p>　　“大人也早些休息。”说完，伊库斯便转身离去。</p><p>　　一回到自己的营帐，伊库斯便拿起放在桌子上的半瓶果子酒，“咕咚咕咚”地一饮而尽。他抹了抹嘴边残存的酒渍，回想着刚才发生的一切。伊库斯烦躁地摇了摇头，将空酒瓶拍在桌子上，低声咒骂道：“莫妮卡，莫妮卡……见鬼，那个该死的贱女人！”</p><p>　　伊库斯在营帐中来回踱步，嘴里不知在小声念叨着什么。几个小时后，他停下脚步，仿佛下定了某种决心，脸上出现了从未有过的坚毅。伊库斯深吸几口气，平复有些紧张的心情，缓步走出营帐。</p><p>　　“伊库斯大人，”一名在营帐外站岗的雇佣兵警惕地看着伊库斯，“这么晚了您要去哪？”</p><p>　　“我随便逛逛，看看夜景……怎么，你要拦我？”伊库斯冷冷道。</p><p>　　“不敢不敢，大人请随意。”雇佣兵立马换上一张笑脸。</p><p>　　伊库斯冷哼一声，在夜色之中渐行渐远。</p><p>　　主营帐内，一名士兵正向瓦茨拉夫汇报着伊库斯的情况。</p><p>　　“就在刚才，伊库斯离开驻地，往圣光堡去了。军团长大人，要不要派兵追过去？”</p><p>　　瓦茨拉夫慵懒地摆摆手，道：“让他去，别管他。”</p><p>　　“是。”士兵手捂胸口 ，快步离开营帐。</p><p>　　夜深了，银色的月亮点缀着深蓝的夜空，柔和的月光悄然弥散。夜色很美，可圣光堡的居民却无心欣赏，紧绷了一天的神经让他们无比疲惫，大多数人早已沉沉睡去。圣光堡的观星塔内，年迈的占星术士密尔卡坐在窗前，在烛光的照耀下阅览一份星象图。他时不时抬头望向窗外，观察着澄澈的天空。忽地，密尔卡看到月亮的左侧似乎缺了一小块。他揉了揉眼睛，再次看向那轮明月，却惊恐地发现那抹黑色依旧存在，这不是他的错觉！黑色还在不断扩大，夜幕中能见到的星星也一颗颗多了起来。密尔卡惊呼一声，猛地站起身，椅子被撞倒在地上也毫无发觉，只是呆呆地望着渐渐消失的月亮。</p><p>　　“天啊，月神乌尔娜闭上眼睛了！”占星塔下的守夜人难以置信地喊道。</p><p>　　“难道、难道连神也抛弃圣光堡了吗？”</p><p>　　“血、血兆，必须马上告知陛下……对，去王宫！”密尔卡喃喃道。他随便抓起一条旧斗篷披在身上，便心急火燎地跑了出去。</p><p>　　在圣光堡这座城市的中心，象征宗教权力的玛卡伊大教堂对面，是卡伦泽斯世俗权力的中心——亚利维塞王宫。亚利维塞王宫建于大陆历468年，卡伦泽斯的历代统治者都居住于此。密尔卡来到王宫时，整个月亮都已泛起了红铜色。他急忙对王宫大门前两个惊惧的士兵说：“快，让我进去，我要见陛下。”</p><p>　　“好、好的，阁下。”两名士兵还没反应过来，便看见密尔卡冲进大门，匆匆跑向王宫大殿。</p><p>　　来到殿门前，气喘吁吁的密尔卡放缓脚步，慢慢走了进去。大殿中，一个被五花大绑的中年男人跪在大殿中央，几个满面忧愁的大臣沉默地站在旁边。卡特琳娜女王则坐在她那奢华的椅子上，右手扶额，面容略显憔悴。密尔卡疑惑地看着众人，问道：“这、这是怎么回事？”</p><p>　　“啊，密尔卡老师来了。”卡特琳娜站起身，双腿微微屈膝，两手稍提裙摆两侧，向密尔卡点头致意。</p><p>　　“他是谁？”密尔卡指了指那个跪着的男人。</p><p>　　卡特琳娜解释道：“他叫伊库斯，是摩登斯帝国那边叛逃的……”</p><p>　　“我是卡伦泽斯人，女王陛下。”伊库斯纠正道，“我冒险来这儿，是为了给祖国传递情报的，不是什么叛逃……”</p><p>　　卡特琳娜撇了他一眼，说：“总而言之，这位伊库斯先生告诉我，一个巫女加入了摩登斯帝国 ，她很有可能会在明晚给我们带来一些麻烦。”</p><p>　　“是灾难，女王陛下，那个巫女说她能够召唤亡灵。”伊库斯插嘴道。</p><p>　　“原来如此，”密尔卡恍然大悟，“难怪今夜有如此异象，这是创世神给我们的警告！必须将那个邪恶的巫女给除掉，否则圣光堡必将被黑暗吞噬！”</p><p>　　“可我们的兵力……”卡特琳娜有些为难。</p><p>　　“女王陛下，我们可以贴出悬赏，招募赏金猎人。”一个白胡子大臣提议道。</p><p>　　卡特琳娜点点头，道：“好，这件事就由你来负责。”</p><p>　　“是，女王陛下。”白胡子大臣低声应道。</p><p>　　第二日清晨，圣光堡中的居民们惊讶地发现，整个圣光堡的大街小巷都贴满了皇家悬赏。一时间，人们议论纷纷，这让原本有些死气沉沉的城市又焕发出些许生机。那些印有皇家徽章的悬赏，时不时会有几个携带武器的行人瞧上几眼，可没一会儿那些人就会摇着头走开，嘴里还嘟囔着什么再好的报酬也没命花之类的话。渐渐地，这些悬赏再也无人问津。</p><p>　　在圣光堡某个不知名的小巷中，一家名叫绅士猎人的小酒馆坐落于此。酒馆异常冷清，只有一个老头在吧台那慢悠悠地擦着酒杯。可以肯定的是，这里近段时间都没什么生意。因为酒馆中除了一张桌子比较干净之外，其余的地方都落满了灰尘。“咯吱咯吱”，酒馆那发霉的楼梯发出了刺耳的响声。一个腰间别剑的年轻男子从楼上走了下来。男子样貌奇特，虽然他穿着卡伦泽斯最为常见的布衣，可头上的发髻还是让他与周围显得格格不入。</p><p>　　看到男子，老头不满道：“楚，你这个家伙真是可恶，每次都喝醉在我的店里。如果不是你从不赖账的话，昨晚我就把你丢出外面了！”</p><p>　　楚郑没有理会老头的唠叨，他自顾自走到常坐的位置坐下，说：“威廉，给我来两瓶酒，还有一碟烤肉。”</p><p>　　威廉走到桌前，将一瓶果子酒递给楚郑，没好气地说：“没有肉，都送去供应前线了，店里只剩这瓶酒了。”说完，又回到吧台继续去擦他的酒杯去了。</p><p>　　“呵，也罢。”楚郑打开瓶盖，仰头往口中灌酒。</p><p>　　感受着那微辣的液体进入腹中，楚郑只觉得思绪慢慢浮上心头。他本是东方中原人，家境优越。五年前，他意外结识了一位名叫莫妮卡的西夷歌妓。经过三个月的往来，他疯狂地迷恋上了她。他是那么的爱她，愿意为她付出自己的一切。终于，在那个宁静的夜晚，他们迈出了最后一步。第二天，她走了，不辞而别。那一夜的缠绵仿佛只是一场了无痕迹的梦。他成人以来第一次哭了。他开始寻找，从东方一路寻来西夷。他找遍了西夷所有的国家，可她就像人间蒸发一般，渺无音讯。最后，心灰意冷的他放弃了，终日在这个酒馆中借酒浇愁。他眯了眯眼，又灌了一口酒。</p><p>　　想到这几日城外的敌人越来越多，楚郑不禁苦笑道：“终于还是要结束了吗？”</p><p>　　“楚，王室在今天发布了悬赏。”威廉放下手中的酒杯，“你不看看？”</p><p>　　“嗝——”楚郑打了个酒嗝，“关我屁事。”</p><p>　　“我跟你说啊，这次悬赏的报酬可不一般，谁完成了悬赏，女王陛下会答应他一个合理的请求……啧啧啧，你说这事要真成了，说不定就能弄个世袭爵当当呢。”</p><p>　　酒瓶从楚郑手中滑落，掉在了地上，微红的液体淌了一地。他的手因为激动而微微颤抖，耳中丝毫没有听到威廉的大骂声。</p><p>　　“答应一个请求！也许卡特琳娜能找到她！”楚郑欣喜若狂，立马站起身跑了出去。酒馆中传出威廉愤怒的喊声：“混蛋！你还没付钱呢！”</p><p>　　时间过得飞快，夜幕又一次笼罩了这片大地。此时，一袭黑衣的楚郑小心翼翼地在林中穿行。他又想起了那个大臣对他说的话：你要刺杀的人是一个非常危险的巫女，她今夜将在城东那片树林里施法，那是你唯一的机会。</p><p>　　突然，楚郑停了下来，他发现自己的目标了。楚郑屏息凝神，仔细观察着不远处的那片空地。空地是人为清理出来的，面积不算小。一个瘦小的黑袍人站在那里，脚下是一副猩红的六芒星阵。楚郑心道：居然只有她一个人，真是苍天有眼。只见银光一闪，楚郑手持长剑向黑袍人奔去。几个呼吸间，长剑狠狠地刺透了黑袍人的心口。楚郑拔出长剑，预想的鲜血淋漓的景象却并未出现。黑袍人抬起头，露出藏在兜帽阴影下的腐烂的脸。</p><p>　　是摩登斯的食尸鬼！</p><p>　　楚郑大吃一惊，心中已明白自己是中了埋伏。正欲往后退去，却发现地下伸出了几只手，死死地抓住了他的脚。楚郑面前的食尸鬼扑在他的身上，不断啃下他的血肉。</p><p>　　“啊！”楚郑大声惨叫着，几只在林中栖息的鸟儿受惊飞了起来。</p><p>　　奄奄一息的楚郑心中没有悔恨，只有无尽的遗憾，他最后喃喃道：“对、对不起……”终于，玩腻了的食尸鬼一口咬在了他的脖子上……</p><p>　　“哼，才来了一个，还以为能钓上什么大鱼呢。真是白费力气。”远处，瓦茨拉夫、莫妮卡、一个背着四弦琴的老人和几个摩登斯士兵从阴影中走了出来，“那么魔法师，现在没有人打扰你了，可以开始了吗？”</p><p>　　莫妮卡颤抖着说：“当、当然可以。不过，大人，我需要一点您的鲜血，这样才能呼唤出听命于您的亡灵。”说完，莫妮卡拿出一把镶着红宝石的匕首。</p><p>　　瓦茨拉夫接过匕首，带着玩味的笑容看着莫妮卡，轻声道：“你给我示范一遍吧，魔法师。”</p><p>　　莫妮卡眼中闪过一丝慌乱，紧张地说：“这、这怎么可以……”</p><p>　　瓦茨拉夫挥挥手，两个士兵走上前抓住了她的手。“既然你不愿意，那就由我来帮你吧。”瓦茨拉夫微笑道。</p><p>　　“不！你不能这么做！”莫妮卡尖叫道。</p><p>　　匕首轻轻划过莫妮卡的脸庞，一道长长的血痕出现在她的脸上。与此同时，一抹黑色以血痕为中心飞速向周围蔓延。几秒后，莫妮卡口中不停地吐出白沫。士兵松开手，莫妮卡倒在地上，四肢时不时抽搐着。站在后面的老人别过脸，不忍心看到这一幕。</p><p>　　“吟唱一首诗吧，卡伦泽斯的吟游诗人。我的军队已经整装待发，今夜注定是个不眠之夜，属于我的胜利之夜。”瓦茨拉夫笑着说。</p><p>　　吟游诗人叹息一声，取下了他的四弦琴，开口吟唱起来：</p><p>　　“创世神莫拉创造了世界，他与人类之女艾尔生下五个儿女。</p><p>　　莫拉赐予长子格罗战争之术，允他管理西北之境；</p><p>　　赐予二子瓦格机械之术，允他管理西南之境；</p><p>　　赐予三子茜欧卡智慧，允她管理东南之境；</p><p>　　赐予四子诺也财富，允他管理东方之境……”</p><p>　　古老的诗篇在林中回荡，瓦茨拉夫赞赏地点了点头。</p><p>　　“小女儿海嘉，莫拉的骄傲，魔法的亲近者。</p><p>　　建立自己的国家吧。莫拉降下神谕；</p><p>　　在肥沃的西方平原上，海嘉建立了伟大的卡伦泽斯；</p><p>　　伟大的国家，伟大的女王；</p><p>　　卡伦泽斯的荣光永存！你无法消……”</p><p>　　吟游诗人瞪大眼睛，匕首轻易地划过了老人的脖子。殷红的血喷洒而出，老人无力地倒了下去。</p><p>　　“走，一会儿发起总攻。”瓦茨拉夫大笑着，“历史将由我们谱写，现在，让我们终结这个年迈的王国，给这场闹剧添上休止符吧！”</p><p>　　<strong>「完」</strong></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小说 </tag>
            
            <tag> 儿时旧作 </tag>
            
            <tag> 奇幻 </tag>
            
            <tag> 战争 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
